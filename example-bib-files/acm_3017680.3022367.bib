@inproceedings{10.1145/3017680.3022367,
author = {Pollock, Ian and Brooks, Lonny},
title = {Collaborative research into Game Jams, Hackathons and Event-Based Teaching in Higher Education (Abstract Only)},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3022367},
doi = {10.1145/3017680.3022367},
abstract = {The idea for this session is based on conversations with colleagues from computer science, art, communications, engineering, and biology as well as international colleagues from three continents at ITICSE-2016 on the use of Game Jams to increase participation of underrepresented minorities (URMs) in Computer Science and STEM education. High-impact practices are powerful tools in engaging students (NSSE, 2014), perhaps even more so for non-traditional, ESL/ELL, first-generation, and URM students in STEM disciplines by increasing peer and faculty contact, active learning, and high expectations (Goodman). We believe that event-based teaching, such as Game jams and Hackathons provide students with many, if not more of the experiences that are credited with those of commonly identified High Impact Practices (Kuh, 2008).These events also create peer and social networks among participants. While not conclusive - anecdotally the networks of peers and social capacity seem to make a difference in post graduation job search (Mouw). Game Jams and Hackathons are still relatively new in higher education, and while there is a lot of anecdotal evidence as to the benefits reaped by participants of these events, there exists little in the way of long-term studies in the literature that speaks to the academic value of these events.This session will create a conversation among faculty from computer science and other disciplines who are interested in creating these events and their institutions, and developing scholarship to fill in the gaps in the literature around the effects and efficacy of these events on the long-term success of participants.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {728},
numpages = {1},
keywords = {collaborative research, event-based teaching, game jams, hackathons, high impact practices, steam, stem, transdisciplinary practices},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@inproceedings{10.1145/3422392.3422479,
author = {Steglich, Caio and Salerno, Larissa and Fernandes, Tha\'{\i}s and Marczak, Sabrina and Dutra, Alessandra and Bacelo, Ana Paula and Trindade, C\'{a}ssio},
title = {Hackathons as a Pedagogical Strategy to Engage Students to Learn and to Adopt Software Engineering Practices},
year = {2020},
isbn = {9781450387538},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3422392.3422479},
doi = {10.1145/3422392.3422479},
abstract = {Teaching Software Engineering is not a trivial duty since several pedagogical strategies can be used and sometimes the impact of these on students is uncertain. Hackathons are similar to marathons, however used to produce solutions to solve a specific problem in a short period of time and based on intense collaboration. Educational hackathons aim to promote learning in such an environment. The Undergraduate computing programs of PUCRS decided to use a hackathon as a pedagogical strategy aiming to motivate the students to practice the adoption of software development practices and to work in groups as a means to practice the development of social skills. Therefore, we conducted a case study to investigate: 1) The motivations to students to attend or not attend an educational hackathon, 2) The students perceptions about this hackathon, 3) The Software Engineering practices adopted by students. In this study, we identified factors that may affect students motivation to participate (e.g., improve the teamwork skills), some students expectations about the hackathon (e.g., work in teams), and the practices adopted by the students (e.g., pair programming). Some of our findings include that students enjoy participating in an informal educational environment (e.g., hackathons) to improve their technical skills and to build network with some colleagues. This study can provide insights to teachers that wants to organize some activity than traditional teaching and the students perspective about this kind of strategy.},
booktitle = {Proceedings of the XXXIV Brazilian Symposium on Software Engineering},
pages = {670–679},
numpages = {10},
keywords = {Case Study, Educational Hackathon, Software Engineering Education, Student Motivation},
location = {<conf-loc>, <city>Natal</city>, <country>Brazil</country>, </conf-loc>},
series = {SBES '20}
}

@inproceedings{10.1145/2619195.2656312,
author = {Quilez, Inigo and Jeremias, Pol},
title = {Shadertoy Hackathon},
year = {2014},
isbn = {9781450329774},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2619195.2656312},
doi = {10.1145/2619195.2656312},
abstract = {The Shadertoy Hackathon is an event designed to learn, network and share your knowledge about shading, ray marching, reactivity or proceduralism. The event will last an hour and a half and during this time attendees from all over the world will sit together and build beautiful shaders set on a specific theme. At the end of the event, a jury composed by industry experts will vote to decide on the best shaders.},
booktitle = {ACM SIGGRAPH 2014 Studio},
articleno = {25},
numpages = {1},
keywords = {WebGL, interactive, shaders},
location = {Vancouver, Canada},
series = {SIGGRAPH '14}
}

@inproceedings{10.1145/2556420.2558865,
author = {Goggins, Sean and Wiggins, Andrea and Winter, Susan and Butler, Brian},
title = {OCData Hackathon @ CSCW 2014: online communities data hackathon},
year = {2014},
isbn = {9781450325417},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2556420.2558865},
doi = {10.1145/2556420.2558865},
abstract = {Online Communities data is prevalent in CSCW research, but the approaches to collecting, managing, analyzing and visualizing large scale social data varies on a lab by lab basis. The OCData hackathon is aimed at creating a community opportunity to share approaches to online communities research at the level of data. Integrating data, tools and theories to address interesting research questions remains a challenge for the community.},
booktitle = {Proceedings of the Companion Publication of the 17th ACM Conference on Computer Supported Cooperative Work &amp; Social Computing},
pages = {317–318},
numpages = {2},
keywords = {citizen science, cscw, open data},
location = {Baltimore, Maryland, USA},
series = {CSCW Companion '14}
}

@article{10.1145/3415216,
author = {Nolte, Alexander and Chounta, Irene-Angelica and Herbsleb, James D.},
title = {What Happens to All These Hackathon Projects? Identifying Factors to Promote Hackathon Project Continuation},
year = {2020},
issue_date = {October 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {CSCW2},
url = {https://doi.org/10.1145/3415216},
doi = {10.1145/3415216},
abstract = {Time-based events, such as hackathons and codefests, have become a global phenomenon attracting thousands of participants to hundreds of events every year. While research on hackathons has grown considerably, there is still limited insight into what happens to hackathon projects after the event itself has ended. While case studies have provided rich descriptions of hackathons and their aftermath, we add to this literature a large-scale quantitative study of continuation across hackathons in a variety of domains. Our findings indicate that a considerable number of projects get continued after a hackathon has ended. Our results also suggest that short- and long-term continuation are different phenomena. While short-term continuation is associated with technical preparation, number of technologies used in a project and winning a hackathon, long-term continuation is predicated on skill diversity among team members, their technical capabilities in relationship to the technologies and their intention to expand the reach of a project. Moreover, we found intensive short-term activity to be associated with a lower likelihood of long-term project continuation.},
journal = {Proc. ACM Hum.-Comput. Interact.},
month = {oct},
articleno = {145},
numpages = {26},
keywords = {hackathon, project continuation, project sustainability, social computing}
}

@article{10.1145/3331651.3331658,
author = {Chua, Hui Xiang and Chua, Ee-Ling and Soo, Kenneth},
title = {Budding Data Scientists Hackathon},
year = {2019},
issue_date = {June 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {1},
issn = {1931-0145},
url = {https://doi.org/10.1145/3331651.3331658},
doi = {10.1145/3331651.3331658},
abstract = {The "Budding Data Scientists Hackathon" was a pilot program to bring data science into a high school's curriculum in Singapore. Unlike typical hackathons, this hackathon lasted for a few months. A total of seven teams comprising 22 students underwent one week of intensive training workshops and five months of mentoring to work on projects tackling social challenges using data science. The hackathon was made possible with the support of the KDD Impact Program [1].},
journal = {SIGKDD Explor. Newsl.},
month = {may},
pages = {38–40},
numpages = {3}
}

@inproceedings{10.5555/3049877.3049928,
author = {Hoang, Chinh and Liu, John and Bokhari, Zubaid and Chan, Allen},
title = {IBM 2016 community hackathon},
year = {2016},
publisher = {IBM Corp.},
address = {USA},
abstract = {The IBM Community Hackathon is a joint initiative between the IBM Canada Lab Technical Vitality team (TVT) and the IBM Centre for Advanced Studies (CAS), in partnership with IBM Corporate Citizenship and Corporate Affairs, and local not-for-profit organizations (referred to as "partners").},
booktitle = {Proceedings of the 26th Annual International Conference on Computer Science and Software Engineering},
pages = {331–332},
numpages = {2},
location = {Toronto, Ontario, Canada},
series = {CASCON '16}
}

@inproceedings{10.1145/3340481.3342735,
author = {Nolte, Alexander},
title = {Touched by the Hackathon: a study on the connection between Hackathon participants and start-up founders},
year = {2019},
isbn = {9781450368544},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3340481.3342735},
doi = {10.1145/3340481.3342735},
abstract = {Time-bounded events such as hackathons, code fests and others have become a global phenomenon. Entrepreneurial hackathons in particular have gained wide spread popularity because they come with the prospect to being the grounds where the next billion dollar enterprise is born. There is however limited insight into whether and how hackathons participants and start-up founders are connected beyond studies on singular events focusing on hackathons as a starting point for start-ups. To address this gap we conducted a study on a dataset covering 44 hackathons over three years and 489 start-ups in the North-Eastern European country of Estonia. Our findings indicate that hackathons are not always the start of an entrepreneurial endeavor but can also be useful through later stages as a means to develop future products, find future employees and others. The results presented in this paper are based on an initial analysis of this rich dataset and thus present the starting point of a larger study on the connection between the hackathon and start-up communities which is currently in planning.},
booktitle = {Proceedings of the 2nd ACM SIGSOFT International Workshop on Software-Intensive Business: Start-Ups, Platforms, and Ecosystems},
pages = {31–36},
numpages = {6},
keywords = {Entrepreneurship, Hackathon, Start-up},
location = {Tallinn, Estonia},
series = {IWSiB 2019}
}

@inproceedings{10.1145/2818048.2819946,
author = {Trainer, Erik H. and Kalyanasundaram, Arun and Chaihirunkarn, Chalalai and Herbsleb, James D.},
title = {How to Hackathon: Socio-technical Tradeoffs in Brief, Intensive Collocation},
year = {2016},
isbn = {9781450335928},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818048.2819946},
doi = {10.1145/2818048.2819946},
abstract = {Hackathons are events where people who are not normally collocated converge for a few days to write code together. Hackathons, it seems, are everywhere. We know that long- term collocation helps advance technical work and facilitate enduring interpersonal relationships, but can similar benefits come from brief, hackathon-style collocation? How do participants spend their time preparing, working face-to- face, and following through these brief encounters? Do the activities participants select suggest a tradeoff between the social and technical benefits of collocation? We present results from a multiple-case study that suggest the way that hackathon-style collocation advances technical work varies across technical domain, community structure, and expertise of participants. Building social ties, in contrast, seems relatively constant across hackathons. Results from different hackathon team formation strategies suggest a tradeoff between advancing technical work and building social ties. Our findings have implications for technology support that needs to be in place for hackathons and for understanding the role of brief interludes of collocation in loosely-coupled, geographically distributed work.},
booktitle = {Proceedings of the 19th ACM Conference on Computer-Supported Cooperative Work &amp; Social Computing},
pages = {1118–1130},
numpages = {13},
keywords = {Hackathons, collocation, multiple-case study, qualitative methods, scientific software},
location = {San Francisco, California, USA},
series = {CSCW '16}
}

@article{10.1145/3243157.3243169,
author = {Dainotti, Alberto and Katz-Bassett, Ethan and Dimitropolous, Xenofontas},
title = {The BGP hackathon 2016 report},
year = {2018},
issue_date = {July 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {46},
number = {3},
issn = {0146-4833},
url = {https://doi.org/10.1145/3243157.3243169},
doi = {10.1145/3243157.3243169},
abstract = {Internet routes - controlled by the Border Gateway Protocol (BGP) - carry our communication and our commerce, yet many aspects of routing are opaque to even network operators, and BGP is known to contribute to performance, reliability, and security problems. The research and operations communities have developed a set of tools and data sources for understanding and experimenting with BGP, and on February 2016 we organized the first BGP Hackathon, themed around live measurement and monitoring of Internet routing. The Hackathon included students, researchers, operators, providers, policymakers, and funding agencies, working together on projects to measure, visualize, and improve routing or the tools we use to study routing. This report describes the tools used at the Hackathon and presents an overview of the projects. The Hackathon was a success, and we look forward to future iterations.},
journal = {SIGCOMM Comput. Commun. Rev.},
month = {jul},
articleno = {12},
numpages = {6},
keywords = {BGP, hackathon, internet measurement, routing}
}

@inproceedings{10.1145/2669485.2669631,
author = {Kaltenbrunner, Martin and Echtler, Florian},
title = {TUIO Hackathon},
year = {2014},
isbn = {9781450325875},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2669485.2669631},
doi = {10.1145/2669485.2669631},
abstract = {TUIO is an open framework that defines a common protocol and API for tangible- and multitouch-surfaces. The protocol is based on Open Sound Control and allows the platform-independent encoding and transmission of an abstract description of interactive surfaces, including touch events and tangible object states. While the original TUIO specification has been implemented for various hardware and software environments, there are not as many feature complete reference implementations of the next TUIO generation, although its specification [2] has been finalized and partially implemented by community members. The TUIO Hackathon at the International Conference for Interactive Tabletops and Surfaces is addressing expert users and developers of hardware and software environments for surface-based tangible user interfaces that are interested in experimenting with this new framework, with the goal of initiating the development and integration of new TUIO implementations.},
booktitle = {Proceedings of the Ninth ACM International Conference on Interactive Tabletops and Surfaces},
pages = {503–505},
numpages = {3},
keywords = {abstraction model, multitouch surfaces, protocols and apis, tangible user interfaces},
location = {Dresden, Germany},
series = {ITS '14}
}

@inproceedings{10.1145/2559206.2560476,
author = {Tanenbaum, Karen and Tanenbaum, Theresa Jean and Williams, Amanda M. and Ratto, Matt and Resch, Gabriel and Gamba Bari, Antonio},
title = {Critical making hackathon: situated hacking, surveillance and big data proposal},
year = {2014},
isbn = {9781450324748},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2559206.2560476},
doi = {10.1145/2559206.2560476},
abstract = {In this workshop we propose to explore issues around big data, data privacy, visualization, sensing, surveillance, and counter-surveillance, through a team-based Critical Making hackathon.},
booktitle = {CHI '14 Extended Abstracts on Human Factors in Computing Systems},
pages = {17–20},
numpages = {4},
keywords = {big data, counter-surveillance, critical making, data visualization, hacking, hardware, open data, social issues, software, sousveillance, surveillance},
location = {Toronto, Ontario, Canada},
series = {CHI EA '14}
}

@inproceedings{10.1145/3411763.3443432,
author = {Kope\'{c}, Wies\l{}aw and Kalinowski, Krzysztof and Kornacka, Monika and Skorupska, Kinga H. and Paluch, Julia and Jaskulska, Anna and Pochwatko, Grzegorz and Mo\.{z}aryn, Jakub Filip and Kobyli\'{n}ski, Pawe\l{} and Gago, Piotr},
title = {VR Hackathon with Goethe Institute: Lessons Learned from Organizing a Transdisciplinary VR Hackathon},
year = {2021},
isbn = {9781450380959},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3411763.3443432},
doi = {10.1145/3411763.3443432},
abstract = {In this article we report a case study of a Language Learning Bauhaus VR hackathon with Goethe Institute. It was organized as an educational and research project to tap into the dynamics of transdisciplinary teams challenged with a specific requirement. In our case, it was to build a Bauhaus-themed German Language Learning VR App. We constructed this experiment to simulate how representatives of different disciplines may work together towards a very specific purpose under time pressure. So, each participating team consisted of members of various expert-fields: software development (Unity or Unreal), design, psychology and linguistics. The results of this study cast light on the recommended cycle of design thinking and customer-centered design in VR. Especially in interdisciplinary rapid prototyping conditions, where stakeholders initially do not share competences. They also showcase educational benefits of working in transdisciplinary environments. This study, combined with our previous work on human factors in rapid software development and co-design, including hackathon dynamics, allowed us to formulate recommendations for organizing content creation VR hackathons for specific purposes. We also provide guidelines on how to prepare the participants to work in rapid prototyping VR environments and benefit from such experiences in the long term.},
booktitle = {Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems},
articleno = {62},
numpages = {7},
keywords = {VR, hackathon, language learning, participatory design, teamwork},
location = {<conf-loc>, <city>Yokohama</city>, <country>Japan</country>, </conf-loc>},
series = {CHI EA '21}
}

@inproceedings{10.1145/3230977.3231022,
author = {Kos, Brittany Ann},
title = {The Collegiate Hackathon Experience},
year = {2018},
isbn = {9781450356282},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3230977.3231022},
doi = {10.1145/3230977.3231022},
abstract = {Collegiate hackathons are marathon-style, project building competitions where students can learn computing in an informal environment, build community, network with members of the technology industry, and be more productive members of the workforce. I am interested in understanding the social climate of hackathons and how it affects hackathon participants, particularly women and non-binary students, who only make up 23% of collegiate hackathon attendees. I will be exploring two lines of inquiry: (1) to explore the experiences of hackathon attendees to gain a deeper understanding about why participants do (or do not) participate in hackathons, what motivates them to attend, and what engages them at these events; and (2) to explore the ways collegiate hackathons can adapt their design practices to create an inclusive and equitable events for marginalized and minority students.},
booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
pages = {274–275},
numpages = {2},
keywords = {collegiate hackathon, gender, informal learning, nonbinary, women},
location = {Espoo, Finland},
series = {ICER '18}
}

@inproceedings{10.1145/3027385.3029435,
author = {Cooper, Adam and Berg, Alan and Sclater, Niall and Dorey-Elias, Tanya and Kitto, Kirsty},
title = {LAK17 hackathon: getting the right information to the right people so they can take the right action},
year = {2017},
isbn = {9781450348706},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3027385.3029435},
doi = {10.1145/3027385.3029435},
abstract = {The hackathon is intended to be a practical hands-on workshop involving participants from academia and commercial organizations with both technical and practitioner expertise. It will consider the outstanding challenge of visualizations which are effective for the intended audience: informing action, not likely to be misinterpreted, and embodying contextual appropriacy, etc. It will surface particular issues as workshop challenges and explore responses to these challenges as visualizations resting upon interoperability standards and API-oriented open architectures.},
booktitle = {Proceedings of the Seventh International Learning Analytics &amp; Knowledge Conference},
pages = {514–515},
numpages = {2},
keywords = {actionable insights, contextual appropriacy, hackathon, interoperability, open learning analytics, visualization},
location = {Vancouver, British Columbia, Canada},
series = {LAK '17}
}

@inproceedings{10.5555/2735522.2735553,
author = {Pattathe, Murali and Hoang, Chinh and Yuen, Vince and Li, Lucy},
title = {IBM Community Hackathon 2014: IBM Bluemix},
year = {2014},
publisher = {IBM Corp.},
address = {USA},
abstract = {In May 2013 the Health Council of Canada released its third report on the state of healthcare renewal in IBM Community Hackathon 2014},
booktitle = {Proceedings of 24th Annual International Conference on Computer Science and Software Engineering},
pages = {280–282},
numpages = {3},
location = {Markham, Ontario, Canada},
series = {CASCON '14}
}

@inproceedings{10.1145/3011784.3011794,
author = {Frey, Frank J. and Luks, Michael},
title = {The innovation-driven hackathon: one means for accelerating innovation},
year = {2016},
isbn = {9781450340748},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3011784.3011794},
doi = {10.1145/3011784.3011794},
abstract = {Established companies often have difficulties developing new innovative products in a fast and creative way because of their fix structure and organizational complexity. With decision processes divided across several departments it takes too long to get all required skills and people onboard compared to more agile competitors. There are plenty of causes for organizational obstacles which hinder and slow-down the companies developing innovative products, particularly, within large companies having established processes and a lot of bureaucracy. From the perspective of the authors a set of means is required to tackle these organizational challenges as well to develop an innovation-friendly underlying corporate culture to enable the company identifying, developing, and selling innovative solutions in time. This paper introduces the concept of hackathons and describes how companies may consider hackathons as one means for overcoming organizational challenges and speeding-up the early phases of their innovation process up to the development and evaluation of prototypes. Although a hackathon can be applied for a variety of purposes, this paper focusses on its benefits for identifying, and developing innovative solutions and overcoming organizational hurdles on the path. Therefore, the Innovation-driven hackathon pattern is introduced and described in this paper from the perspective of practitioners.The authors aim at sharing practical experience with other industry experts as well as researchers and getting new insights concerning the application of hackathons and other means for optimizing the innovation process in the industry context.},
booktitle = {Proceedings of the 21st European Conference on Pattern Languages of Programs},
articleno = {10},
numpages = {11},
keywords = {agile, hackathon, innovation, lean, prototyping},
location = {Kaufbeuren, Germany},
series = {EuroPlop '16}
}

@inproceedings{10.1145/2660398.2660429,
author = {Wiggins, Andrea and Gurzick, David and Goggins, Sean and Butler, Brian},
title = {Quality Hackathon: Evaluating the Products of Online Co-Production Systems},
year = {2014},
isbn = {9781450330435},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2660398.2660429},
doi = {10.1145/2660398.2660429},
abstract = {This full-day workshop focuses on building Big Social Data research competencies for scholars interested in issues of contribution quality and contributor performance in online co-production systems that generate value through contributions by volunteers. The workshop is designed to engage discussion and promote co-working through a hackathon format to stimulate productive conversation and learning, using shared data sets to provide a common focus for participants to engage questions of contribution quality and contributor performance with multiple disciplinary, theoretical, and analytical backgrounds.},
booktitle = {Proceedings of the 2014 ACM International Conference on Supporting Group Work},
pages = {321–323},
numpages = {3},
keywords = {contribution quality, data quality, hackathon, online communities, peer production, performance, user-generated content},
location = {Sanibel Island, Florida, USA},
series = {GROUP '14}
}

@inproceedings{10.1145/3610602.3610607,
author = {Dalsgaard, Tor-Salve and Bhatia, Arpit and Maunsbach, Martin},
title = {A Touch of the Future: The TOUCHLESS Hackathon 2022},
year = {2023},
isbn = {9798400708794},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3610602.3610607},
doi = {10.1145/3610602.3610607},
abstract = {Ultrasound haptics allows us to experience the sense of touch without contact with any physical surface. This novel "touchless" feedback can be used for various use cases but is not widely adopted nor incorporated in everyday products. The 2022 TOUCHLESS Hackathon aimed to enable novel practitioners to learn about touchless technology, generate new ideas, and implement prototypes. We invited participants to a 3-day hackathon in Copenhagen, Denmark, where we introduced touchless technology and provided novel touchless devices for prototyping use cases. Participants were joined by experts on ultrasound haptics, who helped them achieve their prototyping goals. Coming from various educational and national backgrounds, the participants approached the task in different ways and created four unique interactive prototypes. This event report introduces the TOUCHLESS Hackathon and reflects on the lessons learned.},
booktitle = {Proceedings of the 7th International Conference on Game Jams, Hackathons and Game Creation Events},
pages = {46–50},
numpages = {5},
keywords = {hackathon, mid-air haptics, tactile experience},
location = {<conf-loc>, <city>Virtual Event</city>, <country>Ukraine</country>, </conf-loc>},
series = {ICGJ '23}
}

@inproceedings{10.1145/3292147.3292155,
author = {Olesen, Jeanette Falk and Hansen, Nicolai Brodersen and Halskov, Kim},
title = {Four factors informing design judgement at a hackathon},
year = {2018},
isbn = {9781450361880},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3292147.3292155},
doi = {10.1145/3292147.3292155},
abstract = {Hackathons have attracted increasing interest in recent years, and whereas much of the research focus on the role of hackathons as potential means for education, innovation, or municipal engagement, this paper focuses on the creative process of a hackathon. We present an explorative, autobiographical case study of a team at a hackathon and in the analysis we identify four factors, which in particular impacted the team's design judgement during the hackathon: 1) The hackathon format, 2) the available tools and materials, 3) the participants' domain knowledge, and 4) the participants' technical knowledge. Though the factors are evident in most design processes, we discuss how the four factors in a hackathon setting influenced the design judgement in a particular way and how the factors influenced the creative engagement in developing technology in the hackathon. We discuss potential implications for future research on how to understand design judgements made under the particular circumstances of a hackathon.},
booktitle = {Proceedings of the 30th Australian Conference on Computer-Human Interaction},
pages = {473–483},
numpages = {11},
keywords = {creative process, design process, hackathon, tools and materials},
location = {Melbourne, Australia},
series = {OzCHI '18}
}

@inproceedings{10.1145/3587103.3594156,
author = {Reckinger, Shanon},
title = {Problem Solving Competitions: A Twist on the Traditional Hackathon},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594156},
doi = {10.1145/3587103.3594156},
abstract = {This tip, technique, and courseware proposal is presenting the details the design of a problem solving competition. This is a competition concept that can be used in place of or to prepare for a traditional hackathon. This style of competition is more friendly to first and second year students, less competitive, less of a time commitment, and more collaborative. Two different competition formats are presented. The first is called "Problem Solving Speed Dating", which works by pairing upperclassmen and underclassmen in a speed dating type exercise. The second is called "Unwrapped Collaborative Problem Solving", where students work on a team but with very specific (and intentionally restrictive) roles. Both competition formats were tested in five different workshops over the course of several years involving around 250 undergraduate students. Students reporting receiving similar benefits to a hackathon including: problem solving skills, teamwork, building community, and networking with industry.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {591–592},
numpages = {2},
keywords = {co-curricular, culture, hackathons},
location = {<conf-loc>, <city>Turku</city>, <country>Finland</country>, </conf-loc>},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3524501.3527597,
author = {Almeida, Luciana A. and de Souza, Cleidson R. B.},
title = {A social-cognitive analysis of a female-focused hackathon},
year = {2022},
isbn = {9781450392945},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524501.3527597},
doi = {10.1145/3524501.3527597},
abstract = {Hackathons are thematic events of short duration that focus on the development of software prototypes. These events normally last from one to three days and they are increasingly popular. However, the interest of women in these events is still low. This paper aims to investigate, from a social-cognitive perspective, how experiences of more inclusive hackathon formats affect interest in hackathons themselves. We adopted autoethnography to systematize the first author's experience as a team participant in a female-focused hackathon. The results suggest that event formats can affect participants' self-efficacy beliefs, outcome expectations and goals. These beliefs may influence perceptions of their potential performance on the team, confidence in their own skills in the technology and perceptions of opportunities in the technology market.},
booktitle = {Proceedings of the Third Workshop on Gender Equality, Diversity, and Inclusion in Software Engineering},
pages = {80–83},
numpages = {4},
keywords = {autoethnography, hackathons, social-cognitive analysis, women},
location = {Pittsburgh, Pennsylvania},
series = {GE@ICSE '22}
}

@inproceedings{10.1145/3334480.3375216,
author = {Chan, Tina and McMurray, Josephine and Levy, AnneMarie and Sveistrup, Heidi and Wallace, James},
title = {Post-Hackathon Learning Circles: Supporting Lean Startup Development},
year = {2020},
isbn = {9781450368193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3334480.3375216},
doi = {10.1145/3334480.3375216},
abstract = {Hackathons provide rapid, hands-on opportunities to explore innovative solutions to problems, but provide little support to teams in moving those solutions into practice. We explore the use of post-hackathon Learning Circles to connect hackathon teams with key stakeholders, to reflect on prototypes and consider business models. We conducted a qualitative field study with 4 post-hackathon teams on the theme of technology, social isolation, and aging. Our results show that Learning Circles are an effective way to involve stakeholders early in the development process, and to develop a deeper understanding of users, markets, and technology.},
booktitle = {Extended Abstracts of the 2020 CHI Conference on Human Factors in Computing Systems},
pages = {1–8},
numpages = {8},
keywords = {aging, hackathon, participatory design, social isolation},
location = {<conf-loc>, <city>Honolulu</city>, <state>HI</state>, <country>USA</country>, </conf-loc>},
series = {CHI EA '20}
}

@inproceedings{10.1145/3406324.3424584,
author = {Haesler, Steffen and Schmid, Stefka and Reuter, Christian},
title = {Crisis Volunteering Nerds: Three Months After COVID-19 Hackathon #WirVsVirus},
year = {2021},
isbn = {9781450380522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3406324.3424584},
doi = {10.1145/3406324.3424584},
abstract = {The hackathon #WirVsVirus in March 2020 was one of the biggest hackathons in history. Under the patronage of the federal government of Germany, 28,361 participants worked together in 1,498 projects, finding innovative apps and solutions against the COVID-19 pandemic. Three months after the event, we present an exemplifying analysis of the topics, used technologies and remaining activity of these projects. Shedding light on this instance of citizen science allows to highlight the potential of hackathons and startup culture regarding socio-technological resilience. At the same time, it may be understood as an impulse for crisis informatics to consider new forms of volunteering in the course of crisis management.},
booktitle = {22nd International Conference on Human-Computer Interaction with Mobile Devices and Services},
articleno = {56},
numpages = {5},
keywords = {coronavirus, crisis informatics, hackathon, pandemic, volunteers},
location = {Oldenburg, Germany},
series = {MobileHCI '20}
}

@inproceedings{10.1145/3429309.3429329,
author = {Jones, William K. and Lguensat, Redouane and Charantonis, Anastase and Watson-Parris, Duncan},
title = {The 2020 Climate Informatics Hackathon: Generating Nighttime Satellite Imagery from Infrared Observations},
year = {2021},
isbn = {9781450388481},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3429309.3429329},
doi = {10.1145/3429309.3429329},
abstract = {The 2020 Climate Informatics hackathon virtually gathered 40 participants to work on techniques for the generation of nighttime satellite imagery from infrared observations. In this paper, we discuss the data preparation process, the methods used by the participants, and the results of the privately held competition. A public version of the competition provides freely the data and is open on the Codalab platform to foster further research on this direction, it can be found here: https://competitions.codalab.org/competitions/26644.},
booktitle = {Proceedings of the 10th International Conference on Climate Informatics},
pages = {134–138},
numpages = {5},
keywords = {deep learning, hackathon, nighttime satellite imagery, remote sensing},
location = {virtual, United Kingdom},
series = {CI2020}
}

@inproceedings{10.1145/3510309.3510324,
author = {Lyonnet, Barbara},
title = {Hackathon Approach: Its Contributions on Collaboration and Teamwork Skills: A Case Study in Maritime Sector},
year = {2022},
isbn = {9781450385800},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510309.3510324},
doi = {10.1145/3510309.3510324},
abstract = {The main objective of this study was to examine how the use of a hackathon approach impacts the collaboration and teamwork skills. Qualitative and quantitative data were collected from an observation carried out during a hackathon conducted in France with 70 participants. A survey was also developed to analyse the participants’ perception of the different dimensions of the intra-team collaboration. In this study a positive impact of a hackathon was observed on the intra-team collaboration and on the development of hard and soft skills of the participants. The format of a hackathon could be used at the company scale to speed up employees’ learning process. Thus, team learning could be improved and accelerated by the hackathon approach, through the sharing of experience and knowledge of people with various backgrounds, the caring nature of the team, and their willingness to meet the challenge all together.},
booktitle = {Proceedings of the 2021 4th International Conference on Education Technology Management},
pages = {91–98},
numpages = {8},
keywords = {Ccollaborative learning, Hackathon approach, Information system management, Skills},
location = {Tokyo, Japan},
series = {ICETM '21}
}

@inproceedings{10.1145/3316287.3316292,
author = {Kos, Brittany Ann},
title = {Understanding Female-Focused Hackathon Participants' Collaboration Styles and Event Goals},
year = {2019},
isbn = {9781450362054},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3316287.3316292},
doi = {10.1145/3316287.3316292},
abstract = {Collegiate hackathons are informal learning environments where students build new projects in a limited amount of time and often compete for prizes. Previous hackathon research has shown that students go to these events to learn new technical skills, work on projects with friends, or network with the technical community; however, little is known about the different ways in which students collaborate with other participants and how students' event goals affect their trajectory at the hackathon. In the literature, students are typically described as working in competitive teams that build one project to be entered into a competition. However, there are gaps when it comes to discussing other ways students may work together or what other non-competitive projects/activities students may want to engage with at a hackathon. This paper reports on different collaboration styles and event goals documented at a Spring 2018 female-focused hackathon. Findings include three types of collaboration styles: team-based, cooperative group, and individual participation; as well as four types of event goals: competition, exploration, dabbling, and observing. These findings can inform the collegiate hackathon literature and help hackathons diversify their events by offering insight into ways diverse participants choose to participate at a hackathon and offering design suggestions that mainstream collegiate hackathons can adopt to be more inclusive of different types of students.},
booktitle = {Proceedings of the International Conference on Game Jams, Hackathons and Game Creation Events 2019},
articleno = {5},
numpages = {4},
keywords = {hackathon, informal learning, teamwork, women},
location = {San Francisco, CA, USA},
series = {ICGJ '19}
}

@inproceedings{10.1145/3408877.3432435,
author = {McIntosh, Lukas and Hardin, Caroline D.},
title = {Do Hackathon Projects Change the World? An Empirical Analysis of GitHub Repositories},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432435},
doi = {10.1145/3408877.3432435},
abstract = {Hackathons, the increasingly popular collaborative technology challenge events, are praised for producing modern solutions to real world problems. They have, however, recently been criticized for positing that serious real world problems can be solved in 24-48 hours of undergraduate coding. Projects created at hackathons are typically demos or proof-of-concepts, and little is known about the fate of them after the hackathon ends. Do they receive continued development in preparation for real world use and maintenance as part of actually being used, or are they abandoned? Since participants often use GitHub (Microsoft's popular version control system), it is possible to check. This quantitative, empirical study uses a series of Python scripts to complete a robust analysis of development patterns for all 11,889 of the U.S. based 2018-2019 Major League Hacking (MLH) affiliated hackathon projects which had GitHub repositories. Of these projects, approximately 85% of commits were made within the first month, and approximately 77% of the total commits occurred within the first week. Only 7% of projects had any activity 6 months after the event ended. Evaluated projects had an average of only 3.097 distinct commit dates, and the average of commits divided by the length of the development period was only 0.1. This indicates that few projects receive the post-event attention expected of an actively developed project. Finally, this study offers a dialogue of possible ways to reformat hackathons to help increase the average longevity of the development period for projects.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {879–885},
numpages = {7},
keywords = {computer science education, github, hackathons, informal education},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3409456.3409458,
author = {Paganini, Lavinia and Gama, Kiev},
title = {Engaging Women’s Participation in Hackathons: A Qualitative Study with Participants of a Female-focused Hackathon},
year = {2020},
isbn = {9781450387804},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3409456.3409458},
doi = {10.1145/3409456.3409458},
abstract = {Hackathons are a sort of application development marathon typically lasting between 24 and 48 hours. They are increasingly becoming an alternative and popular method for fast learning and networking, bringing people together in a short period to do creative projects. However, the number of women participating in such events is extremely low and worrying, and literature lacks empirical evidence about the reasons for that. This qualitative study gathers data and brings a discussion about this topic, as an attempt to understand better why women are not so interested in this type of event. We interviewed participants of a female-focused hackathon and tried to (1) understand reasons for women not participating in hackathons; (2) understand motivational aspects; and (3) understand the main problems concerning gender in hackathons.},
booktitle = {Proceedings of the 5th International Conference on Game Jams, Hackathons and Game Creation Events},
pages = {8–15},
numpages = {8},
keywords = {Time-bounded events, gender, hackathons},
location = {Osaka, Japan},
series = {ICGJ '20}
}

@article{10.1145/3571814,
author = {Hodge, James and Foley, Sarah and Lambton-Howard, Dan and Booi, Laura and Montague, Kyle and Coulter, Sandra and Kirk, David and Morrissey, Kellie},
title = {Exploring Participants’ Representations and Shifting Sensitivities in a Hackathon for Dementia},
year = {2023},
issue_date = {June 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {3},
issn = {1073-0516},
url = {https://doi.org/10.1145/3571814},
doi = {10.1145/3571814},
abstract = {Recent HCI research has addressed emerging approaches for public engagement. One such public-facing method which has gained popularity over the previous decade has been open design events, or hackathons. In this article, we report on DemVR, a hackathon event that invited designers, technologists, and students of these disciplines to design Virtual Reality (VR) environments for people with dementia and their care partners. While our event gained reasonable attraction from designers and developers, this article unpacks the challenges in representing and involving people with dementia in these events, which had multiple knock-on effects on participant's outputs. Our analysis presents insights into participants’ motivations, challenges participants faced when constructing their “absent user”, and the design features teams developed to address the social context of the user. We conclude the article by proposing a set of commitments for collaborative design events, community building through design, and reification in design.},
journal = {ACM Trans. Comput.-Hum. Interact.},
month = {jun},
articleno = {46},
numpages = {35},
keywords = {Dementia, community, social, hackathon, care, virtual reality}
}

@inproceedings{10.1145/3366750.3366758,
author = {Ito, Sadanori and Zettsu, Koji},
title = {Report on a Hackathon for Car Navigation Using Traffic Risk Data},
year = {2019},
isbn = {9781450372480},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3366750.3366758},
doi = {10.1145/3366750.3366758},
abstract = {Car drivers select their routes based on the information obtained about accidents and traffic congestion along the route. In recent years, nowcasting and forecasting of various traffic risk events is being performed by using diverse sensor data. However, there is no clarity as yet on what and how to communicate to the driver in case there are traffic risks on the route. In this paper, we have developed an environment that enables non UI experts to quickly create car navigation prototypes by using traffic risk data. This paper includes our report on a hackathon that we held using this environment. The hackathon theme was "Develop a new car navigation system equipped with a mechanism that makes the driver aware of traffic risks and helps them determine the most appropriate driving routes." Twenty three researchers and professionals from the field of traffic engineering participated. Our results have brought certain common problems to the awareness of the experts. The information obtained from this report will be very beneficial for our community to determine the direction of collaboration.},
booktitle = {Proceedings of the 2019 2nd International Conference on Machine Learning and Machine Intelligence},
pages = {47–51},
numpages = {5},
keywords = {Car Navigation, Hackathon, Smart City, Traffic Risk},
location = {Jakarta, Indonesia},
series = {MLMI '19}
}

@article{10.5555/3606388.3606396,
author = {Azhar, Mohammad Q. and Haynes, Ada and Day, Marisa and Wissinger, Elizabeth},
title = {Implementation and Evaluation of a Virtual Hackathon in an Urban HSI Community College during COVID-19},
year = {2023},
issue_date = {April 2023},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {6},
issn = {1937-4771},
abstract = {This paper shares the analysis of our quantitative findings regarding the impact of a virtual informal collaborative experiential learning activity on diverse students' computational thinking, critical thinking, and self-efficacy in STEM activities. Designed as part of an ongoing National Science Foundation sponsored project to provide underrepresented minority (URM) students from underserved economic backgrounds with real-world career preparation and technical education across disciplines through collaborative project activities using cutting-edge technologies, the Hackathon for Social Good was implemented during the COVID-19 shutdowns in a New York City community college in lower Manhattan. Students worked in teams to innovate practical solutions to global problems with mentor support from both academia and the tech industry. This intervention drew 36 students from Computer Science, Business, and Sociology classes, who worked with volunteers and alumni during a full-day event in the Fall of 2021, using AI and data science to design culturally sensitive data-driven solutions for real-world problems. The tracks covered the following topics: Zero Hunger, Clean Water, and Sanitation, Green Consumption, Racial Justice, Quality Education, Good Health, and Well Being. The two main objectives of this project are as follows: (1) Design a remote interdisciplinary one-day experiential collaborative learning environment to engage URM teams of students from a community college in applying computational thinking to develop solutions for social good. (2) Conduct research on our intervention to study its effect on students' self-efficacy, as well as their knowledge of, and comfort with, computational thinking, critical thinking, problem-solving, and STEM. The evidence gathered from qualitative and quantitative data indicates that using these mechanisms to infuse CT into student learning across disciplines has several positive outcomes. Students reported increased leadership skills, comfort with teamwork, problem-solving, and critical thinking. A quantitative study specifically showed a positive impact on student confidence in their ability to do CT and improved their sense of efficacy in impacting the world outside of the hackathon.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {72–84},
numpages = {13}
}

@inproceedings{10.1145/3543758.3547563,
author = {Feislachen, Sarah and Garus, Philip and Wang, Hong and Podkolin, Eduard and Schl\"{u}ter, Sarah and Schulze Bernd, Nadine and Manske, Sven and Nolte, Alexander and Chounta, Irene-Angelica},
title = {Sentiment Analysis of Participants Interactions in a Hackathon Context: The Example of a Slack Corpus},
year = {2022},
isbn = {9781450396905},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3543758.3547563},
doi = {10.1145/3543758.3547563},
abstract = {This paper presents the analysis of participants’ interactions during an online hackathon using Natural Language Processing (NLP) techniques. In particular, we explored the communication of groups facilitated by Slack focusing on the use of emojis. Our findings suggest that most used emojis are positive, while negative emojis appeared rarely. Sentiment of written messages was overall positive and could be linked to topics such as motivation or achievements. Topics about participants’ disappointment regarding their progress or the hackathon organization, technical issues and criticism were associated with negative sentiment. We envision that our work offers insights regarding online communication in group and collaborative contexts with an emphasis on group work and interest-based activities.},
booktitle = {Proceedings of Mensch Und Computer 2022},
pages = {493–497},
numpages = {5},
keywords = {collaboration, emojis, hackathons, natural language processing, online communication, sentiment analysis, slack},
location = {Darmstadt, Germany},
series = {MuC '22}
}

@inproceedings{10.1145/3474624.3476973,
author = {Steglich, Caio and Marczak, Sabrina and Guerra, Luiz and Trindade, C\'{a}ssio and Dutra, Alessandra and Bacelo, Ana},
title = {An Online Educational Hackathon to Foster Professional Skills and Intense Collaboration on Software Engineering Students},
year = {2021},
isbn = {9781450390613},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3474624.3476973},
doi = {10.1145/3474624.3476973},
abstract = {The global pandemic of COVID19 demanded that professors rethink teaching strategies considering the use of online environments due to the social isolation stipulated to reduce the rate of contagion of the disease. A challenge for software engineering professors is to develop fundamental professional skills in students who are in the process of learning using these virtual environments. The purpose of this study is to identify how an online educational hackathon can support students of a Software Engineering program to develop professional skills. We also seek to understand how intense collaboration takes place between student teams, considering the digital context for the production of a technological solution. We conducted a Case Study on an educational hackathon that took place in the online context, collecting data through questionnaires, interviews, and observations. As some results, the skills that students most considered that this hackathon helped them to develop were communication, initiative, and creativity/innovation, among others. Also, the strategies of collaboration adopted by the students during this competition, considering the remote context. Therefore, the main contribution is the identification of how the realization of this event supported students to develop professional skills and to practice collaboration skills with each other.},
booktitle = {Proceedings of the XXXV Brazilian Symposium on Software Engineering},
pages = {388–397},
numpages = {10},
keywords = {Case Study, Educational Hackathon, Intense Collaboration, Software Engineering Education},
location = {Joinville, Brazil},
series = {SBES '21}
}

@inproceedings{10.1145/3543758.3547538,
author = {Karhu, Mari and Karampela, Maria and H\"{a}kkil\"{a}, Jonna},
title = {Collaborating in a Crisis: Perspectives on Trust and Technological Framework in Organising a COVID-19 Online Hackathon},
year = {2022},
isbn = {9781450396905},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3543758.3547538},
doi = {10.1145/3543758.3547538},
abstract = {This paper explores trust in online-only-collaboration, where a team was gathered to organise a COVID-19 online hackathon with only three days notice. The study is based on the thematic analysis of ten in-depth interviews with the hackathon organisers. The findings report how trust among the organisers was encapsulated in 1) the shared big goal, 2) the significance of real-life networks, 3) a strong lead organiser on the collaboration forming on the fly, and 4) the lack of face-to-face contact in relation to becoming familiar or staying unknown. Technology related findings showed that the collaboration platforms were selected based on familiarity and ease of use. The chosen communication channels created a split between age groups, and transparency of the communication suffered somewhat from one-to-one communications in the background and divided application use. However, trust between the organisers helped them to overcame the transparency challenges. The findings are applicable to societal crisis situations in which technologies are used to build collaboration in aim to address shared challenges.},
booktitle = {Proceedings of Mensch Und Computer 2022},
pages = {349–353},
numpages = {5},
keywords = {COVID-19, collaborative technologies, crisis, hackathon, online collaboration, pandemic, trust},
location = {Darmstadt, Germany},
series = {MuC '22}
}

@inproceedings{10.1145/3613372.3614201,
author = {Gama, Kiev and Zimmerle, Carlos and Paganini, Lavinia},
title = {The Comfort of Distance: Student Choices and Soft Skill Development during a Hybrid Hackathon in Post-Pandemic Learning},
year = {2023},
isbn = {9798400707872},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613372.3614201},
doi = {10.1145/3613372.3614201},
abstract = {The COVID-19 pandemic disrupted traditional educational methods, forcing a quick transition to emergency remote learning. With the subsequent rollout of COVID-19 vaccines, universities and society as a whole gradually resumed in-person activities. Students and university staff had to readjust to on-site learning and its associated challenges. This experience report specifically focuses on a course at University [omitted] dedicated to the design and development of Distributed Applications. Students engaged in a hybrid hackathon – an activity blending in-person and remote work – as part of the course. Despite their preferences for in-person collaboration, the majority of the students opted for remote participation. The goal of this report is to understand the students’ choices and adaptations to this new post-pandemic educational setting. We collected data through an anonymous survey and group interviews, revealing that the preference for remote work stemmed from convenience. Despite this, the distant collaboration allowed students to develop various soft skills. This exploration can shed light on future educational approaches in a world where online and in-person interactions can coexist.},
booktitle = {Proceedings of the XXXVII Brazilian Symposium on Software Engineering},
pages = {368–377},
numpages = {10},
keywords = {collaborative learning, distant collaboration, hackathons, hybrid learning, soft skills},
location = {<conf-loc>, <city>Campo Grande</city>, <country>Brazil</country>, </conf-loc>},
series = {SBES '23}
}

@article{10.1145/122652.122658,
author = {Bergin, Thomas J.},
title = {Teaching ethics, teaching ethically},
year = {1991},
issue_date = {Oct. 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {2–4},
issn = {0095-2737},
url = {https://doi.org/10.1145/122652.122658},
doi = {10.1145/122652.122658},
journal = {SIGCAS Comput. Soc.},
month = {nov},
pages = {33–39},
numpages = {7}
}

@inproceedings{10.5555/857097.857124,
author = {Murnane, John S.},
title = {Teaching teaching with information technology},
year = {2003},
isbn = {1920682023},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
booktitle = {Proceedings of the 3.1 and 3.3 Working Groups Conference on International Federation for Information Processing: ICT and the Teacher of the Future - Volume 23},
pages = {89–91},
numpages = {3},
keywords = {online education},
location = {<conf-loc>, <city>Melbourne</city>, <country>Australia</country>, </conf-loc>},
series = {CRPIT '03}
}

@inproceedings{10.1145/3350768.3351799,
author = {Rocha, Fabio G. and Souza, Layse Santos and Silva, Thiciane Suely C. and Rodr\'{\i}guez, Guillermo},
title = {Agile Teaching Practices: Using TDD and BDD in Software Development Teaching},
year = {2019},
isbn = {9781450376518},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3350768.3351799},
doi = {10.1145/3350768.3351799},
abstract = {In this paper, we aimed to analyze the application and contribution of the use of Test-Driven Development (TDD) and Behavior-Oriented Development (BDD) in Software Engineering teaching. As empirical research, we presented an experiment conducted in the Software Engineering Laboratory (LES) course of a Private University (Tiradentes University) in the Bachelor of Computer Science and Information Systems courses. This experiment demonstrated the fundamentals in verifying the learning difficulties of students. Collected data were subjected not only to quantitative analysis but also to appropriate statistical analysis. The results showed a reduction in student absences, higher student satisfaction rate and higher grades in the courses. Furthermore, our approach allowed students to deliver a product in a short period, representing a possibility of adoption of BDD due to their successful learning experience.},
booktitle = {Proceedings of the XXXIII Brazilian Symposium on Software Engineering},
pages = {279–288},
numpages = {10},
keywords = {Agile Software Developlment, BDD, Learning Experience, Software Engineering Education, TDD},
location = {Salvador, Brazil},
series = {SBES '19}
}

@inproceedings{10.1145/3606094.3606115,
author = {Wang, Huiling and Yao, Yuxin and Li, Xu and Wang, Xiuyou},
title = {Research on Teaching Based on Online and Offline Mixed Teaching Mode: Taking "Information Technology Teaching Theory in Middle Schools" as an Example},
year = {2023},
isbn = {9798400700422},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3606094.3606115},
doi = {10.1145/3606094.3606115},
abstract = {Deep learning is based on knowledge integration, with the phased teaching goal of improving the ability to think critically and solve complex problems. "Teaching Theory of Information Technology in Middle Schools" is a basic course in the curriculum system for computer science and technology (teacher training) majors. Aiming at the problems existing in traditional classroom teaching, such as a single teaching mode, insufficient participation of students in imparting teaching, and insufficient process assessment, it integrates the advantages of online and offline hybrid teaching, introducing a hybrid teaching mode based on online learning, offline flipping, and online autonomous learning for students Combining homework completion with chapter tests, etc., builds an online and offline hybrid teaching model that helps improve students' autonomous abilities and attempts to participate in the entire process of teaching. Teaching practice has shown that the online and offline hybrid teaching mode based on micro courses can better improve the teaching quality and effectiveness of courses.},
booktitle = {Proceedings of the 2023 8th International Conference on Distance Education and Learning},
pages = {145–150},
numpages = {6},
keywords = {Mixed teaching, Online learning, Teaching Theory of Information Technology in Middle Schools},
location = {<conf-loc>, <city>Beijing</city>, <country>China</country>, </conf-loc>},
series = {ICDEL '23}
}

@inproceedings{10.5555/638476.638496,
author = {Lang, Bob},
title = {Teaching new programmers: a Java tool set as a student teaching aid},
year = {2002},
isbn = {0 901519 87 1},
publisher = {National University of Ireland},
address = {Maynooth, County Kildare, IRL},
abstract = {The javac compiler does not always produce error message suitable for learners and there are many Java traps which the compiler does not report. This paper describes a tool set which helps students avoid some of these difficulties.},
booktitle = {Proceedings of the Inaugural Conference on the Principles and Practice of Programming, 2002 and Proceedings of the Second Workshop on Intermediate Representation Engineering for Virtual Machines, 2002},
pages = {95–100},
numpages = {6},
location = {<conf-loc>, <city>Dublin</city>, <country>Ireland</country>, </conf-loc>},
series = {PPPJ '02/IRE '02}
}

@inproceedings{10.1145/3408877.3432573,
author = {Friend, Michelle and Leftwich, Anne and Schafer, J. Ben and Simon, Beth and Morrison, Briana B.},
title = {Teaching the Methods of Teaching CS},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432573},
doi = {10.1145/3408877.3432573},
abstract = {In order to fully prepare high-quality teachers to deliver on the promise of CS for All, teacher preparation programs must ensure teacher candidates have mastered both content and the pedagogy to teach that content well. University CS departments are well-positioned to teach the content, but "methods courses" are an important source of pedagogical and pedagogical content knowledge for future computer science teachers. This panel will describe a variety of approaches: Colleges of Education or CS departments; in-person, hybrid, or online course delivery; and standalone "CS Methods" courses or CS integrated in broader methods courses. Each panelist will describe their course. The moderator will elicit common features between the courses as well as the strengths and weaknesses between different approaches.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {459–460},
numpages = {2},
keywords = {in-service, k-12, pre-service, primary, secondary, teacher preparation},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@article{10.1145/382196.383003,
author = {Sterling, T. D. and Pollack, S. V.},
title = {Teaching simulators or ideal teaching machines},
year = {1974},
issue_date = {June 1974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/382196.383003},
doi = {10.1145/382196.383003},
abstract = {The process of presenting and reinforcing fundamental concepts and ideas for computer science at the introductory level is impeded by the ever increasing distance between the machine and the student. One very effective way to circumvent the intervening software is to start students on an Ideal Teaching Machine or simulated computers that possess a limited but effective instruction set. A number of ITMs have been designed aimed at various levels of instruction. This paper surveys the major ITMs in use.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {45–56},
numpages = {12}
}

@inproceedings{10.1145/1517744.1517809,
author = {Krumm-Heller, Alex and Wessels, Anja and Di Dio, Franco},
title = {Teaching multimedia by using multimedia: remote hands-on teaching},
year = {2008},
isbn = {0980306345},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1517744.1517809},
doi = {10.1145/1517744.1517809},
abstract = {This paper investigates the development and deployment of a system facilitating the teaching of multimedia application skills. Our contribution is a new approach to supporting remote hands-on training of highly graphical multimedia applications. One popular method of teaching multimedia skills is to use laboratory sessions where students gain skills by completing representative tasks exercising their knowledge of the tools. Usually a teacher will be co-located with the students and can therefore share physical access to each student's computer to collaboratively work with them to answer any questions raised during the lesson. Conducting lessons remotely removes physical co-location. This physical separation of the student from the teacher introduces considerable technical and usability issues, focused around the inability to share physical access to a common computer workspace. Therefore we developed a networked environment to facilitate the distributed educational process and ran a trial to assess the usability of the system.},
booktitle = {Proceedings of the 20th Australasian Conference on Computer-Human Interaction: Designing for Habitus and Habitat},
pages = {327–330},
numpages = {4},
keywords = {distance learning, hands-on training, multimedia, user study},
location = {Cairns, Australia},
series = {OZCHI '08}
}

@inproceedings{10.1145/3478431.3499319,
author = {Dean, Victoria and Nourbakhsh, Illah},
title = {Teaching Ethics by Teaching Ethics Pedagogy: A Proposal for Structural Ethics Intervention},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499319},
doi = {10.1145/3478431.3499319},
abstract = {We report on a reformulated general Ethics and Robotics course, in which we aim to address the twin curricular challenges of exposing computer science students to ethics discourse and establishing a pathway for ethics-oriented modules to be designed into numerous computer science courses across an institution. Given computer science instructors' lack of time and expertise to build ethics modules themselves, we tasked our students with creating ethics modules for instructors of 11 computer science courses at our university. Our course participants represented a diverse range of backgrounds and perspectives that catalyzed lively discussions and creative ideas for ethics pedagogy innovation. We report on course details, including in-class activities, assignments, and the project. We discuss our findings, including reception from students and computer science instructors and planned updates for the next course iteration. Given the course's overall success, we share with the hope that others may learn from or adopt our course approach. Materials are available on our website: https://vdean.github.io/16-735-ethics-robotics.html.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {272–278},
numpages = {7},
keywords = {course design, ethics, pedagogy, robotics},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3474995.3475038,
author = {Liu, Huaming and Bi, Xuehui and Wang, Xiuyou and Li, Huaimin and Yang, Ying and Liu, Zhengyan and Liu, Kunzhe},
title = {Application of Reverse Engineering in Software Engineering Teaching: Combining case teaching with task driven Teaching},
year = {2021},
isbn = {9781450390033},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3474995.3475038},
doi = {10.1145/3474995.3475038},
abstract = {In the teaching of software engineering for computer related majors, there is a gap between high-level logic design and implementation, which leads to the students' unreasonable software design, and the implementation code does not follow the design scheme. Therefore, it is necessary to carry out heuristic teaching for students, starting from the programming students are most familiar with, gradually transition to software design, using reverse thinking teaching mode, so that students can master the transformation relationship between design and implementation. In the implementation of case teaching, it is necessary to restore high-level design or demand analysis through code, realize the conversion from code to document, and effectively improve the theoretical level of students; in terms of practical skills, implement task driven teaching, deepen the understanding of cases and knowledge transfer, and exercise the practical ability of students. Through the performance analysis of 2015 and 2016 students, the reverse engineering case teaching and task driven practice can significantly improve students' practical ability, stimulate students' enthusiasm for software development, and highlight students' software development ability in computer skills competition, college students' innovation training project and graduation design.},
booktitle = {Proceedings of the 2021 6th International Conference on Distance Education and Learning},
pages = {256–261},
numpages = {6},
keywords = {Case teaching, Reverse engineering, Software development, Task driven},
location = {Shanghai, China},
series = {ICDEL '21}
}

@inproceedings{10.1145/3456887.3456928,
author = {Ge, Shuna and Zhang, Yunrong},
title = {PBL Teaching Method in Biochemistry Teaching},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3456928},
doi = {10.1145/3456887.3456928},
abstract = {PBL is a good way to develop students' multi-faceted abilities. PBL teaching mode emphasizes to explore problems in real situations and solve them step by step. PBL teaching mode focuses on group cooperative learning, and improves students' comprehensive ability by asking questions, analyzing questions, group learning and sharing results. The unique teaching method of PBL is very applicable to some contents of the chemistry discipline. Therefore, the author carries out practical research on the TEACHING mode of PBL in biochemistry. The purpose of this paper is to study the application of PBL teaching method in biochemistry teaching. Based on the reality, this paper uses the literature research method to analyze and define the definition, types and other theoretical basis of PBL teaching mode. At the same time, taking "metal materials with wide uses", "chlorine gas" and "sulfur and its Compounds" in section 2 of Chapter 4 and Section 3 of Chapter 4 as examples, teaching cases conforming to the requirements of PBL teaching mode are designed and practiced. The average score of chlorine and sulfur in the practice class is 2 points higher than that in the control class, indicating that PBL teaching mode is cond.ucive to improving students' academic performance.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {184–187},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.5555/1161135.1161168,
author = {Nelson, Wayne A. and Smith, Randall E.},
title = {Chronicles of teaching: using computer-based communication to tell stories and reflect about teaching},
year = {1996},
isbn = {1880094231},
publisher = {International Society of the Learning Sciences},
abstract = {In recent years, research in teacher education has focused on ways to promote reflection by beginning teachers. The research project described in this paper elicits the help of hypermedia computer technology to encourage and facilitate communication among teacher education students, as they develop abilities to view classroom situations from multiple perspectives, suggest alternative explanations of classroom events, and use theoretical principles to support or evaluate decisions.},
booktitle = {Proceedings of the 1996 International Conference on Learning Sciences},
pages = {243–248},
numpages = {6},
location = {Evanston, Illinois},
series = {ICLS '96}
}

@inproceedings{10.5555/510378.510619,
author = {Pawlikowski, Krzysztof and Kreutzer, Wolfgang},
title = {Tools for teaching simulation: integrating modelling and data analysis in teaching discrete event simulation},
year = {2000},
isbn = {0780365828},
publisher = {Society for Computer Simulation International},
address = {San Diego, CA, USA},
abstract = {The growing popularity of stochastic discrete event simulation in areas such as telecommunication, combined with much marketing hype about ease of use, has coaxed some practitioners into a misguided belief that choosing prefabricated components from libraries and configuring them into a model by pointing and clicking is all that is needed. While neglect of statistical aspects of simulation has already led to some highly problematic published results, this erroneous assumption must also be guarded against in university teaching. This paper therefore argues for the importance of teaching those issues that critically affect the analysis and credibility of a simulation's results alongside those methods and tools targeted at the needs of model design and construction.},
booktitle = {Proceedings of the 32nd Conference on Winter Simulation},
pages = {1645–1650},
numpages = {6},
location = {Orlando, Florida},
series = {WSC '00}
}

@inproceedings{10.1145/299359.299373,
author = {Nicholson, A. E. and Fraser, K. M.},
title = {Methodologies for teaching new programming languages: a case study teaching LISP},
year = {1997},
isbn = {0897919580},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299359.299373},
doi = {10.1145/299359.299373},
booktitle = {Proceedings of the 2nd Australasian Conference on Computer Science Education},
pages = {84–90},
numpages = {7},
location = {The Univ. of Melbourne, Australia},
series = {ACSE '97}
}

@inproceedings{10.1145/1231047.1231088,
author = {Pashel, Brian A.},
title = {Teaching students to hack: ethical implications in teaching students to hack at the university level},
year = {2006},
isbn = {1595934375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1231047.1231088},
doi = {10.1145/1231047.1231088},
abstract = {Hacking has become a widespread problem with the onset of the digital age and the nearly universal access to the internet and other digital media. It is important for individuals, corporations, and the government to protect themselves from being vulnerable to such attacks. The purpose of this paper is to provide detailed information regarding the practices of hacking and ethical hacking, as well as to discuss the ethical nature of teaching computer students how to hack in an attempt to strengthen their skills in the field of information systems security.},
booktitle = {Proceedings of the 3rd Annual Conference on Information Security Curriculum Development},
pages = {197–200},
numpages = {4},
keywords = {ethical hacking, hacking, student misuse, teaching hacking},
location = {Kennesaw, Georgia},
series = {InfoSecCD '06}
}

@inproceedings{10.1145/1953163.1953317,
author = {Bell, Tim and Lambert, Lynn},
title = {Teaching computer science majors about teaching computer science},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953317},
doi = {10.1145/1953163.1953317},
abstract = {This paper describes the design, implementation, and evaluation of a course teaching Computer Science majors about teaching Computer Science. The course was designed to address the need for teachers and resources to support rapid changes in topics being taught in high schools. It also helped prepare students for research in Computer Science Education, and for careers involving computing and education. The course is described in detail, and is evaluated based on student feedback and the outcomes from the course.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {541–546},
numpages = {6},
keywords = {K-12, computer science education},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@article{10.1145/2670917,
author = {Shasha, Dennis},
title = {Upstart Puzzles: Proving without Teaching/Teaching without Proving},
year = {2014},
issue_date = {November 2014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {57},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/2670917},
doi = {10.1145/2670917},
journal = {Commun. ACM},
month = {oct},
pages = {120},
numpages = {1}
}

@article{10.5555/2591468.2591497,
author = {Stephenson, Ben and Kuipers, Andrew and Adl, Rosa Karimi and Stephenson, Flora},
title = {Teaching assistant in residence: a novel peer mentorship program for less experienced teaching assistants},
year = {2014},
issue_date = {April 2014},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {29},
number = {4},
issn = {1937-4771},
abstract = {Each year approximately 70 graduate teaching assistants (TAs) support the delivery of the undergraduate computer science program at the University of Calgary. During the 2012-2013 academic year, a novel TA mentorship program was initiated for these TAs. An experienced teaching assistant with a demonstrated record of excellence in teaching was hired to serve as the TA in Residence. This graduate student provided training and advice to new teaching assistants, including classroom visits where the TA in Residence observed TAs in action and provided personalized suggestions that TAs could follow to improve their teaching skills. TAs that participated in the program generally reported that the advice provided by the TA in Residence was helpful, and all of the TAs that responded to the survey believed that it would be worthwhile to continue the mentorship program in the future.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {183–190},
numpages = {8}
}

@inproceedings{10.1145/1878335.1878345,
author = {Mateik, Deborah},
title = {From "teaching technologies" to "teaching innovation": a conference changes with the times},
year = {2010},
isbn = {9781450300032},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1878335.1878345},
doi = {10.1145/1878335.1878345},
abstract = {Exposing faculty to one another's instructional challenges and accomplishments and enabling them to network has been the motivation behind an annual conference at the University of Maryland for nearly 20 years. The instructional technology experiences of three intrepid early adopters were showcased in the University's first half-day Teaching with Technology symposium in 1993. By 1999 the symposium blossomed into a full-day conference where presentations by 12 instructors continued to emphasize different forms of technology in the classroom, but, oddly enough, integrated only minimal use of technology in the presentations themselves.As technology in the classroom became ubiquitous, the sponsoring conference hosts believed it was time to change the focus of the conference from technology in teaching to innovation in teaching and learning. This paper will briefly trace lessons learned in the evolution of the Innovations in Teaching and Learning Conference[1]. It will additionally focus on our recent integration of technologies such as Twitter, lecture capture tools, QR codes and streamed broadcasting, which enable us to model uses of instructional technology tools and to make the conference available to a broader audience},
booktitle = {Proceedings of the 38th  Annual ACM SIGUCCS Fall Conference: Navigation and Discovery},
pages = {29–32},
numpages = {4},
keywords = {faculty development, innovation, instructional delivery, instructional design, instructional technology, marketing, outreach, teaching excellence},
location = {Norfolk, Virginia, USA},
series = {SIGUCCS '10}
}

@inproceedings{10.1145/2526968.2526994,
author = {Sabitzer, Barbara and Pasterk, Stefan and Elsenbaumer, Sabrina},
title = {Brain-based teaching in computer science: neurodidactical proposals for effective teaching},
year = {2013},
isbn = {9781450324823},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2526968.2526994},
doi = {10.1145/2526968.2526994},
abstract = {Brain-based teaching is neither a method nor a concept. It is rather a way of teaching that tries to support the learning and memory process in all phases from lesson design over input and practice up to the transfer of knowledge and competencies in real situations. The proposals for brain-based teaching come from neurodidactics or educational neuroscience that combines findings of brain and memory research, didactics, pedagogy and psychology. This paper aims at presenting concepts and methods that can facilitate learning and proposals for designing computer science lessons by considering the functioning of the brain and the memory.},
booktitle = {Proceedings of the 13th Koli Calling International Conference on Computing Education Research},
pages = {197–198},
numpages = {2},
keywords = {brain-based learning, computer science education, neurodidactics},
location = {Koli, Finland},
series = {Koli Calling '13}
}

@inproceedings{10.5555/1030818.1031090,
author = {Born, Richard G.},
title = {Introductory teaching of simulation: teaching discrete event simulatation to business students: the alpha and omega},
year = {2003},
isbn = {0780381327},
publisher = {Winter Simulation Conference},
abstract = {Managers of businesses worldwide are only beginning to realize the economic and improved decision-making value of discrete-event simulation. In order to accelerate the rate at which business managers employ simulation, such a course needs to be taught to more business students than is currently being done. This, in turn, implies the need for an improvement in the teaching of simulation to beginners, so that these fledglings will encourage fellow students to take a course in simulation because it provides business value, practicality, and promotes the idea that simulation is fun. The manner in which simulation is introduced during the first week of class as well as how the course is summed up during the last week of class are, perhaps, the most critical points in student learning. This paper, therefore, focuses on activities that the author uses during the first and last weeks of his simulation courses for business students.},
booktitle = {Proceedings of the 35th Conference on Winter Simulation: Driving Innovation},
pages = {1964–1972},
numpages = {9},
location = {New Orleans, Louisiana},
series = {WSC '03}
}

@inproceedings{10.5555/564124.564361,
author = {Atolagbe, Tajudeen and Hlupic, Vlatka and Taylor, Simon J. E.},
title = {Teaching tools and methods: GeNisa: a web-based interactive learning environment for teaching simulation modelling},
year = {2001},
isbn = {078037309X},
publisher = {IEEE Computer Society},
address = {USA},
abstract = {Intelligent Tutoring Systems (ITS) provide students with adaptive instruction and can facilitate the acquisition of problem solving skills in an interactive environment. This paper discusses the role of pedagogical strategies that have been implemented to facilitate the development of simulation modelling knowledge. The learning environment integrates case-based reasoning with interactive tools to guide tutorial remediation. The evaluation of the system shows that the model for pedagogical activities is a useful method for providing efficient simulation modelling instruction.},
booktitle = {Proceedings of the 33nd Conference on Winter Simulation},
pages = {1605–1612},
numpages = {8},
location = {Arlington, Virginia},
series = {WSC '01}
}

@inproceedings{10.3115/977180.977206,
author = {Fum, Danilo and Pani, Bruno and Tasso, Carlo},
title = {Teaching the English tense: integrating naive and formal grammars in an intelligent tutor for foreign language teaching},
year = {1991},
publisher = {Association for Computational Linguistics},
address = {USA},
url = {https://doi.org/10.3115/977180.977206},
doi = {10.3115/977180.977206},
abstract = {A basic problem that must be dealt with in order to build an intelligent tutoring system (ITS) in the domain of foreign language teaching is that of establishing what kind of grammatical knowledge has to be included in the domain expert module. Two basic options are possible: (i) to use a naive or pedagogical grammar, comprising knowledge derived from textbooks and school grammars or (ii) to use one of the formal grammars developed by theoretical and computational linguists. The paper discusses the relationships between naive and formal grammars in foreign language teaching and presents, as a case study, an attempt to integrate the two approaches within ET (English Tutor), an ITS aimed at helping Italian students master English verb usage. More particularly, the paper focuses on the possibility of integrating a naive grammar into a systemic framework. The reliability of the proposed approach is currently being evaluated by means of a series of computational experiments with the Verb Generation Expert of ET.},
booktitle = {Proceedings of the Fifth Conference on European Chapter of the Association for Computational Linguistics},
pages = {149–154},
numpages = {6},
location = {Berlin, Germany},
series = {EACL '91}
}

@inproceedings{10.1145/3159450.3162204,
author = {Likins, Gina and Krieger, Jen},
title = {Teaching "Blinky Flashy": Best Practices and Helpful Tips for Teaching eTextiles to a Wide Range of Students (Abstract Only)},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3162204},
doi = {10.1145/3159450.3162204},
abstract = {Electronic Textiles, or eTextiles, are textiles that directly incorporate conductive fibers or elements. eTextile projects are engaging and hands-on, and can serve as an introduction to computing, electrical engineering, and the Internet of Things. In addition, evidence suggests eTextile projects are especially well-suited for girls and young women, and may help improve their overall attitudes and confidence about computing. This demo will prepare instructors to lead a successful eTextiles workshop. Attendees will learn by doing -- up to 20 participants will experience the fun of eTextiles by adding an LED sequin to an article of clothing they bring. In addition, the demo will cover: what information should be included in an eTextiles workshop -- and what can be skipped; variants to accommodate experience and knowledge levels; and how instructors can ensure that workshops go off without a hitch. Participants should bring an article of clothing to "hack" (such as a t-shirt or hoodie).},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {1110},
numpages = {1},
keywords = {active learning, connected learning, e-textiles, education, electronic textiles, makers, soft circuits, wearables},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/3341525.3393967,
author = {Ukrop, Martin and \v{S}v\'{a}bensk\'{y}, Valdemar and Nagy, Imrich},
title = {Teaching Lab: Training Novice Computer Science Teachers},
year = {2020},
isbn = {9781450368742},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341525.3393967},
doi = {10.1145/3341525.3393967},
abstract = {Student teaching assistants are not uncommon in computer science. However, their pedagogical training is often only superficial. This poster presents the Teaching Lab - a mature and fully developed training course for novice teachers (mostly undergraduate teaching assistants), its core principles, content and unique features as it evolved over five years. Our experience can be helpful to others intending to create or adjust a training program for novice teachers.},
booktitle = {Proceedings of the 2020 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {561},
numpages = {1},
keywords = {reflection, teacher training, teaching assistants},
location = {Trondheim, Norway},
series = {ITiCSE '20}
}

@inproceedings{10.5555/510378.510613,
author = {St\r{a}hl, Ingolf},
title = {Teaching methods: how should we teach simulation?},
year = {2000},
isbn = {0780365828},
publisher = {Society for Computer Simulation International},
address = {San Diego, CA, USA},
abstract = {This paper deals with the issue of how one can teach simulation in the most time-efficient way. We first distinguish between different types of student as regards their background and future needs. We next look at reasons for studying simulation at a business school. Next we compare animation oriented simulators with simulation languages. We then study a list of desirable criteria for simulation software, in particular simulation languages, that should be used in education. We finally answer the question if there is any system that fulfills all of these criteria.},
booktitle = {Proceedings of the 32nd Conference on Winter Simulation},
pages = {1602–1612},
numpages = {11},
location = {Orlando, Florida},
series = {WSC '00}
}

@article{10.1145/989253.989263,
author = {Ulloa, Miguel},
title = {Teaching and learning computer programming: a survey of student problems, teaching methods, and automated instructional tools},
year = {1980},
issue_date = {July 1980},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/989253.989263},
doi = {10.1145/989253.989263},
abstract = {To improve introductory computer science courses and to update the teaching of computer programming, new teaching methods emphasizing structured programming and top-down design have been presented and a variety of automated instructional tools have been developed. The purpose of this paper is: (1) to survey a number of methods and tools used in the teaching of programming; (2) to present, with the aid of this survey, a number of areas where beginning programmers experience difficulties; (3) to present ways of improving some of the tools; and (4) to propose other possible aids.This paper is organized as follows. Section 1 introduces the topic and purpose of the paper. Section 2 reviews several teaching methods discussed in the literature. Section 3 surveys various student-oriented interactive and noninteractive tools. Section 4 discusses nonstudent-oriented aids and presents alternatives by discussing how to adapt similar aids to a student environment. Section 5 provides a summary of the paper and a conclusion. Pertinent problem areas and students' viewpoints are presented in each section.},
journal = {SIGCSE Bull.},
month = {jul},
pages = {48–64},
numpages = {17}
}

@article{10.1145/1272848.1272862,
author = {Eshet, Yoram},
title = {Teaching online: survival skills for the effective teacher},
year = {2007},
issue_date = {June 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/1272848.1272862},
doi = {10.1145/1272848.1272862},
abstract = {The rapid infiltration of instructional technologies into educational systems and corporations, confront teachers, trainers and instructors with situations that require the utilization of an ever-growing assortment of technical, cognitive, and sociological skills that are necessary in order to perform effectively in digital environments. These skills are termed collectively 'digital literacy'. However, unlike the common attitude towards digital literacy in most studies of instructional technologies, it is more than just the technical ability to use digital devices properly. Digital literacy comprises a variety of cognitive skills that are utilized when teaching or learning at a distance, such as the ability to divide attention between students in an online lecture, the ability to teach effectively in a non-linear environment, and the ability decipher information from visual representations, as in user interfaces. In fact, digital literacy has become today a "survival skill" for present-days teachers that use technology for instruction; a key that helps them to employ successfully complex instructional strategies in their teaching.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {16–18},
numpages = {3}
}

@inproceedings{10.5555/564124.564364,
author = {Chwif, Leonardo and Barretto, Marcos Ribeiro Pereira and Paul, Ray J.},
title = {Teaching simulation and simulation for teaching: assessment of student preparation for discrete event simulation courses},
year = {2001},
isbn = {078037309X},
publisher = {IEEE Computer Society},
address = {USA},
abstract = {Over the past years, there has been a growth in simulation courses both at undergraduate and postgraduate levels. A discrete event simulation course, as with any non-basic course, has some prerequisites that must be satisfied by students before attending classes. Statistics, computer programming and modeling are the most important, together with knowledge on the specific field being simulated (manufacturing, logistics, etcetera). Are students sufficiently prepared to follow a course on simulation? This work is related to the construction, application and analysis of an assessment instrument to evaluate student prerequisite knowledge for a discrete event simulation course. The proposed questionnaire was given to the 5th year engineering students at the beginning of our first year (72 hours) discrete event simulation introductory course at Mau\'{a} School of Engineering. The results obtained show the importance of making an assessment evaluation in order to improve the quality of simulation learning.},
booktitle = {Proceedings of the 33nd Conference on Winter Simulation},
pages = {1624–1631},
numpages = {8},
location = {Arlington, Virginia},
series = {WSC '01}
}

@inproceedings{10.1145/3456887.3457524,
author = {Deng, Weifeng and Wang, Lin},
title = {Research on English Teaching Based on Multimedia-assisted Teaching},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457524},
doi = {10.1145/3456887.3457524},
abstract = {The multimedia-assisted college English teaching model is student-centered and effectively integrates traditional classroom teaching and network resources. It not only gives full play to the guiding role of teachers, but also greatly stimulates students’ subjective initiative and improves students’ English, especially listening and speaking ability has been significantly improved, which has significantly improved the teaching effect of college English. This article briefly introduces the important position of multimedia computer-assisted language teaching in the current English teaching reform from the perspective of constructivism, and conducts a preliminary discussion on the necessity and enlightenment of this teaching mode in English teaching, hoping that the multimedia teaching environment can be more effective It promotes the improvement of students' English communicative ability, so that students become autonomous learners and lifelong learners.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {1365–1368},
numpages = {4},
keywords = {English teaching, Multimedia assistance, comprehensive English level, teaching efficiency},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3328778.3366989,
author = {Lewis, Colleen M. and Conrad, Phillip},
title = {Teaching Practices Game: Interactive Resources for Training Teaching Assistants},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366989},
doi = {10.1145/3328778.3366989},
abstract = {In this interactive special session, participants will learn to facilitate a workshop for training teaching assistants (TAs) based on a card game. The game invites players to respond to challenging scenarios that TAs may face in the course of their duties. Each scenario appears on a card, and players discuss how they would respond. Session participants will receive a deck of 52 of these cards created with funding from a SIGCSE Special Projects Grant. This session uses the format of two previous well attended SIGCSE special sessions that focused on bias and had a target audience of faculty. While the intended audience is those interested in TA training, everyone interested in inclusive teaching practices is welcome to join in the rich small and large group discussions that we expect to take place!},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1110–1111},
numpages = {2},
keywords = {inclusive teaching, microaggressions, teaching assistants},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/2816811.2815650,
author = {Jenkins, Adam Wayne},
title = {A Roadmap for Evaluating Online Teaching: A review of 'Evaluating Online Teaching: Implementing Best Practices'},
year = {2015},
issue_date = {08-01-2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2015},
number = {August},
url = {https://doi.org/10.1145/2816811.2815650},
doi = {10.1145/2816811.2815650},
abstract = {Evaluating Online Teaching is not so much a "how-to" guide as it as a roadmap, guiding the reader through the complexities of creating or overhauling a faculty evaluation process. The book places heavy emphasis on contextual factors and is filled with real-world examples. Evaluating Online Teaching is a must-read for distance learning administrators tasked with faculty evaluations.},
journal = {ELearn},
month = {aug},
articleno = {1}
}

@inproceedings{10.5555/564124.564362,
author = {Standridge, Charles R.},
title = {Teaching manufacturing systems simulation in a computer aided teaching studio},
year = {2001},
isbn = {078037309X},
publisher = {IEEE Computer Society},
address = {USA},
abstract = {A computer aided teaching studio provides a unique environment for teaching an introductory simulation course to manufacturing engineers. Each meeting can consist of an appropriate combination of lecture and computer-based activities, depending on the topic. Assigned exercises aid students in learning methods. Emphasis can be placed on the solution of case problems that serve as metaphors for realistic simulation projects. Since students have co-op or full time industrial experience, an industry-based project of the student's own definition serves as a course capstone. The case problem and project orientation of the course supported by the computer aided teaching studio makes examinations unnecessary. Case problems are based on a set of case studies derived from topics of interest to practicing manufacturing engineers. Cases are organized into four modules: basic systems organizations, lean manufacturing, material handling, and supply chain management. Only the simulation methods needed to support the case studies are presented.},
booktitle = {Proceedings of the 33nd Conference on Winter Simulation},
pages = {1613–1618},
numpages = {6},
location = {Arlington, Virginia},
series = {WSC '01}
}

@inproceedings{10.1145/2157136.2157288,
author = {Lupo, Chris and Wood, Zoe J. and Victorino, Christine},
title = {Cross teaching parallelism and ray tracing: a project-based approach to teaching applied parallel computing},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157288},
doi = {10.1145/2157136.2157288},
abstract = {Massively parallel Graphics Processing Unit (GPU) hardware has become increasingly powerful, available and affordable. Software tools have also advanced to the point that programmers can write general purpose parallel programs that take advantage of the large number of compute cores available in the hardware. With literally hundreds of compute cores available on a single device, program performance can increase by orders of magnitude. We believe that introducing students to the concepts of parallel programming for massively parallel hardware is of increasing importance in an undergraduate computer science curriculum. Furthermore, we believe that students learn best when given projects that reflect real problems in computer science. This paper describes the experience of integrating two undergraduate computer science courses to enhance student learning in parallel computing concepts. In this cross teaching experience we structured the integration of the courses such that students studying parallel computing worked with students studying advanced rendering for approximately 30% of the quarter long courses. Working in teams on a joint project, both groups of students were able to see the application of parallelization to an existing software project with both the benefits and complications exposed early in the curriculum of both courses. Motivating projects and performance gains are discussed, as well as student survey data on the effectiveness of the learning outcomes. Both performance and survey data indicate a positive gain from the cross teaching experience.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {523–528},
numpages = {6},
keywords = {CUDA, GPU, graphics},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/3572647.3572689,
author = {Li, Minyi and Zhou, Yi},
title = {Practical Teaching of Finance Major Based on Computer Teaching Platform},
year = {2023},
isbn = {9781450398640},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572647.3572689},
doi = {10.1145/3572647.3572689},
abstract = {The Internet itself and various Internet-based applications have become the content of school teaching, and a platform is needed to support the implementation of such teaching activities. The teaching platform uses the school's original internal local area network to build a network teaching platform by building WEB servers, FTP servers, forums, online streaming media, etc. Due to the rapid development of China's financial industry, the state attaches more and more importance to its development. In this situation of rapid development, my country's financial industry is facing changes. Based on the perspective of computer teaching platform, this paper analyzes the problems existing in the current practical teaching of financial majors, and puts forward corresponding improvement measures after in-depth discussion of the problems. In view of the complete computer resources, the relatively mature and stable campus network, an independent computer network teaching platform has been established. This platform has the functions of organizing, tracking, evaluating, delivering, presenting and managing learning activities, which can promote interactive learning among learners. The first task is to base on classroom practice teaching, and secondly, it is important to comprehensively strengthen the practical ability of finance majors. On this basis, provide more high-quality talents for the financial industry.},
booktitle = {Proceedings of the 2022 6th International Conference on E-Business and Internet},
pages = {283–288},
numpages = {6},
keywords = {Computer Teaching Platform, Finance Major, Network Teaching Platform, Practical Teaching},
location = {Singapore, Singapore},
series = {ICEBI '22}
}

@inproceedings{10.1145/3410352.3410742,
author = {Younis, Younis A. and Kifayat, Kashif and Shi, Qi and Matthews, Ellie and Griffiths, Gage and Lambertse, Rene},
title = {Teaching Cryptography Using CYPHER (InteraCtive CrYPtograpHic Protocol TEaching and LeaRning)},
year = {2020},
isbn = {9781450377362},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3410352.3410742},
doi = {10.1145/3410352.3410742},
abstract = {The lack of cryptographic knowledge is one factor contributing to the cybersecurity skills gap. Cryptography is the core of the research in data security and a fundamental component in information assurance yet complex topic, with its purpose to conceal and authenticate information. Hence, teaching cryptography-based security protocols in an effective and engaging manner is a challenging problem throughout international HE sectors. With explanations usually based around mathematical notations, it can be a daunting and difficult subject for many students. This point is emphasized by the consistently lower marks achieved, in comparison to other course modules. To combat this, we propose the CYPHER platform, which delivers a motivating and engaging practical element to teaching and learning popular cryptographic protocols. It customizes a real-world scenarios that are illustrated by animation videos to depict and simplify a number of well-known cryptographic protocols. CYPHER provides an interactive learning experience, allowing the breakdown of complex topics to a level understood by each student. By providing assessment gamification, the delivered knowledge will be assessed in a fun way by playing a game to pass a number of stages and measure the level of understanding. The analysis of the evaluations' results showed that over 88% of the students surveyed had found the CYPHER platform increased the overall speed of understanding.},
booktitle = {Proceedings of the 6th International Conference on Engineering &amp; MIS 2020},
articleno = {12},
numpages = {7},
keywords = {Cybersecurity, animation, gamification, teaching and learning, cryptography},
location = {Almaty, Kazakhstan},
series = {ICEMIS'20}
}

@inproceedings{10.1145/1275521.1275524,
author = {Patt, Yale N.},
title = {Teaching and teaching computer architecture: two very different topics: (some opinions about each)},
year = {2003},
isbn = {9781450347327},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1275521.1275524},
doi = {10.1145/1275521.1275524},
abstract = {This year's Computer Architecture Education workshop is remarkable in its recognition that to teach computer architecture well, one has to pay attention to two things (a) teaching and (b) computer architecture. Having been doing both for a good number of years, I harbor a fair number of opinions on what one should do and what one should not do with respect to each. This talk will get into some of those opinions. With respect to teaching, I will discuss some of my Ten Commandments of Good Teaching, what I think of distance learning, political correctness, emphasis on memorization, the inability of American students to write English, the value of having students study in groups, and what I feel is often the sad misuse of technology. Most importantly, I will discuss my motivated bottom up approach to learning. With respect to teaching computer architecture, I believe the single most important point to get across is that computer architecture, if it is a science at all, is a science of tradeoffs. The student is best served if he/she thoroughly understands the fundamental principles so as to be able to make the appropriate tradeoffs in reaching a particular design objective. I also plan to discuss the use (and too often, misuse) of measurements, simulation, and real ISAs as opposed to concocted ISAs.},
booktitle = {Proceedings of the 2003 Workshop on Computer Architecture Education: Held in Conjunction with the 30th International Symposium on Computer Architecture},
pages = {2–es},
location = {San Diego, California},
series = {WCAE '03}
}

@inproceedings{10.1145/237466.237649,
author = {Hartley, Stephen and Gerhardt-Powals, Jill and Jones, David and McCormack, Colin and Medley, M. Dee and Price, Blaine and Reek, Margaret and Summers, Marguerite K.},
title = {Enhancing teaching using the Internet: report of the working group on the World Wide Web as an interactive teaching resource},
year = {1996},
isbn = {0897918444},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/237466.237649},
doi = {10.1145/237466.237649},
booktitle = {Proceedings of the 1st Conference on Integrating Technology into Computer Science Education},
pages = {218–228},
numpages = {11},
location = {Barcelona, Spain},
series = {ITiCSE '96}
}

@inproceedings{10.1145/3338147.3338180,
author = {Zhang, Jing and Chen, Zengzhao and Duan, Chao and He, Xiuling},
title = {Reshaping the Teaching Ecology with the Construction of Informationalized Teaching Mode},
year = {2019},
isbn = {9781450362658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3338147.3338180},
doi = {10.1145/3338147.3338180},
abstract = {With the further application of information technology in the field of education, the education informationization gradually moves from shallow application to deep integration. The promotion of education informationization makes the integration problem more complicated, so it is urgent to study and discuss how to promote the deepening of the application of information instruction in school. Based on the view of education ecology, this paper puts forward a teaching model to promote the deep integration of information technology in teaching, and to establish an information-based teaching ecological model, and also puts forward the idea to reconstruct the school teaching ecology from the concept layer, pattern layer and practice layer. At the same time, combined with the examples of middle school information teaching ecology remodeling, this paper expounds how to optimize and reform the teaching ways, organization management mode and campus culture through teaching model construction.},
booktitle = {Proceedings of the 2019 4th International Conference on Distance Education and Learning},
pages = {184–188},
numpages = {5},
keywords = {informationalized instruction, teaching ecology, teaching mode},
location = {Shanghai, China},
series = {ICDEL '19}
}

@inproceedings{10.1145/3537674.3555781,
author = {Yang, Feng-Jen},
title = {Machine Teaching},
year = {2022},
isbn = {9781450393911},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3537674.3555781},
doi = {10.1145/3537674.3555781},
abstract = {While machine learning is catching most researchers’ eyes and has been practiced in many different aspects of our daily life, humans are equally benefited from machine teaching for a variety of purposes ranging from basic practical training to further advanced knowledge conveying. I, thus, am reemphasizing the teaching capabilities that machines could be equipped with. This paper is not for the purpose of coining a new term called ”machine teaching” which is contrary to ”machine learning”, but for the sake of restating a contrasting capability of machines that not only machines can learn but also can teach.},
booktitle = {Proceedings of the 23rd Annual Conference on Information Technology Education},
pages = {121–123},
numpages = {3},
keywords = {cognitive modeling, dynamic planning, machine teaching},
location = {Chicago, IL, USA},
series = {SIGITE '22}
}

@article{10.1145/3471469.3471482,
author = {Richards, Dana},
title = {Teaching Nondeterminism},
year = {2021},
issue_date = {June 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {2},
issn = {0163-5700},
url = {https://doi.org/10.1145/3471469.3471482},
doi = {10.1145/3471469.3471482},
abstract = {Nondeterminism is an important topic that is difficult to teach. We give a plan that starts with a new abstraction of nondeterminism. We present language models rst and foremost. The use of pseudo-code augmented by a new construct makes it easier to follow.},
journal = {SIGACT News},
month = {jun},
pages = {85–90},
numpages = {6}
}

@inproceedings{10.1145/17701.255334,
author = {Polivka, Raymond},
title = {Teaching APL2},
year = {1985},
isbn = {0897911571},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/17701.255334},
doi = {10.1145/17701.255334},
booktitle = {Proceedings of the International Conference on APL: APL and the Future},
pages = {45–46},
numpages = {2},
location = {Seattle, Washington, USA},
series = {APL '85}
}

@inproceedings{10.1145/3513142.3513227,
author = {Li, Yupeng},
title = {Teaching research on visualization of uav remote sensing image teaching experiment},
year = {2022},
isbn = {9781450386494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3513142.3513227},
doi = {10.1145/3513142.3513227},
abstract = {In the innovation and development of human space observation technology, faced with increasing spatial information, virtual reality technology, the main tool of human space cognition, should be regarded as the main direction of practical research in order to quickly analyze and express relevant content in practice development. According to the understanding and research of researchers on virtual reality technology in recent years, its application in the field of spatial information is very critical, and it is also a relatively rapid development of the emerging discipline, both theory and technology have formed a profound impact on the analysis and expression of geo-information. Therefore, on the basis of understanding the development trend of UAV remote sensing image visualization technology, this paper verifies and analyzes practical teaching experiment cases according to the practical design system, and the final results prove the effectiveness of uav remote sensing image visualization teaching experiment teaching research},
booktitle = {Proceedings of the 4th International Conference on Information Technologies and Electrical Engineering},
articleno = {83},
numpages = {5},
keywords = {Remote, sensing image, Teaching experiment, UAV, visualization},
location = {Changde, Hunan, China},
series = {ICITEE '21}
}

@inproceedings{10.1145/3482632.3483135,
author = {Tian, Hongmei},
title = {Comparative and Development of Network Information Teaching and Traditional Teaching Methods},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3483135},
doi = {10.1145/3482632.3483135},
abstract = {With the gradual enrichment of the theory and practice of information-based teaching, the proportion of network information-based teaching methods is increasing, but the traditional teaching methods are weakened. The traditional teaching method for students to master the basic knowledge and skills of the system has its effect can not be ignored, but it ignores the initiative of students as cognitive subjects, is not conducive to the formation of students' innovative development and cooperation and communication ability and creative ability. Network information teaching method will be a student-centered, comprehensive and diversified development of students, and can promote the common progress of education and teachers and students. The implementation of the two teaching methods is quite controversial, so the analysis and comparison is particularly important.This paper first expounds the importance and inevitability of this study from the significance of the times and national policy support. Using questionnaire survey, data analysis and literature analysis to compare and analyze the network information teaching and traditional teaching methods, from the development and selection of teaching methods and the teaching effect and satisfaction brought by teaching methods. This paper adopts questionnaire survey and data analysis method, 70% of the teachers choose the traditional teaching methods, in terms of satisfaction and learning interest, the information-based teaching methods tend to be extreme, the data tends to both ends, the data of the traditional teaching methods tends to be stable, and then comes to the limitations of the development of network information-based teaching and the stability of the development of traditional teaching methods.},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {1289–1293},
numpages = {5},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@inproceedings{10.5555/1041530.1041552,
author = {Hu, James H. and Hu, Grace M.},
title = {Teaching web design and web programming using an enhanced teaching environment},
year = {2004},
publisher = {Mid-South College Computing Conference},
address = {Little Rock, Arkansas, USA},
abstract = {The Internet and the Web has provided many advantages as an instructional tool. These advantages include efficiency, flexibility and multimedia capability. Using the Web as an instructional tool infuses the ordinary classroom experience with extraordinary benefits, both for the teacher and students. Increasingly more teachers are placing their own instructional materials on the Web. A recent national survey of information technology in US higher education reported that 30.7 percent of all college courses had web pages [1]. Introduction of the Internet and the Web technology into classroom instruction is a national trend in higher education.},
booktitle = {Proceedings of the 2nd Annual Conference on Mid-South College Computing},
pages = {148–154},
numpages = {7},
location = {<conf-loc>, <city>Little Rock</city>, <state>Arkansas</state>, <country>USA</country>, </conf-loc>},
series = {MSCCC '04}
}

@article{10.1145/1515698.1515713,
author = {Lamport, Leslie},
title = {Teaching concurrency},
year = {2009},
issue_date = {March 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {1},
issn = {0163-5700},
url = {https://doi.org/10.1145/1515698.1515713},
doi = {10.1145/1515698.1515713},
journal = {SIGACT News},
month = {feb},
pages = {58–62},
numpages = {5}
}

@article{10.1145/572306.572311,
author = {Kirkup, Gill},
title = {Cyborg teaching},
year = {2001},
issue_date = {December 2001},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {4},
issn = {0095-2737},
url = {https://doi.org/10.1145/572306.572311},
doi = {10.1145/572306.572311},
journal = {SIGCAS Comput. Soc.},
month = {dec},
pages = {23–32},
numpages = {10}
}

@article{10.1145/1057792.1057798,
author = {Ma, Kwan-Liu},
title = {Teaching visualization},
year = {2005},
issue_date = {February 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {1},
issn = {0097-8930},
url = {https://doi.org/10.1145/1057792.1057798},
doi = {10.1145/1057792.1057798},
abstract = {What draws students to computer graphics? For many it is video games and the movies. For many others it is the possibility of using visualization in their field of interest. For the last couple of years, I have been developing a course on visualization at Stanford.},
journal = {SIGGRAPH Comput. Graph.},
month = {feb},
pages = {4–5},
numpages = {2}
}

@inproceedings{10.1145/800183.810443,
author = {Mathis, Robert F.},
title = {Teaching debugging},
year = {1974},
isbn = {9781450374835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800183.810443},
doi = {10.1145/800183.810443},
abstract = {A course in debugging techniques is motivated and described. A course outline, reading list, and projects list are included. Certain debugging aids are described. Debugging techniques for elementary algorithms are illustrated. Particular attention is paid to ways to teach debugging and algorithm structure.},
booktitle = {Proceedings of the Fourth SIGCSE Technical Symposium on Computer Science Education},
pages = {59–63},
numpages = {5},
series = {SIGCSE '74}
}

@inproceedings{10.1145/3450549.3464412,
author = {Jushchyshyn, Nick and Parks, Sandra},
title = {Virtual Production for Remote Teaching Modalities: Adapting Sustainable Remote Teaching and Learning Environments by Leveraging Real-time Computer Graphics},
year = {2021},
isbn = {9781450383639},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450549.3464412},
doi = {10.1145/3450549.3464412},
abstract = {Approaches for leveraging real-time graphics, virtual production technologies to bring the visual richness, diversity and fidelity of bespoke teaching venues into the realm of teleconference-based, distanced learning. A variety of readily accessible tools and implementations are presented that dramatically enhance the experience of teaching and learning through common teleconferencing platforms.},
booktitle = {ACM SIGGRAPH 2021 Educators Forum},
articleno = {1},
numpages = {2},
keywords = {Curricular Development, Education, Virtual Production},
location = {Virtual Event, USA},
series = {SIGGRAPH '21}
}

@article{10.1145/229403.229406,
author = {Martin, C. Dianne},
title = {Teaching practices},
year = {1996},
issue_date = {March 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {1},
issn = {0095-2737},
url = {https://doi.org/10.1145/229403.229406},
doi = {10.1145/229403.229406},
journal = {SIGCAS Comput. Soc.},
month = {mar},
pages = {3–6},
numpages = {4}
}

@inproceedings{10.1145/3175536.3175586,
author = {Feng, Wang and Haozhang, Sun and Wei, Wang},
title = {Deductive Teaching Method Based on the Origin of Reasoning: an Example of Folk Art Teaching},
year = {2017},
isbn = {9781450354356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3175536.3175586},
doi = {10.1145/3175536.3175586},
abstract = {Based on the principle of reasoning, this paper studies and analyzes the problems and causes of traditional teaching methods that tend to appear in reasoning course education. Taking folk art as an example, this paper puts forward the classification and deductive teaching methods, and provides valuable references to optimize methods in education and teaching.},
booktitle = {Proceedings of the 9th International Conference on Education Technology and Computers},
pages = {52–55},
numpages = {4},
keywords = {Deduction, Folk Arts, Reasoning, Teaching Methods},
location = {Barcelona, Spain},
series = {ICETC '17}
}

@inproceedings{10.1145/3456887.3457079,
author = {Li, Hua},
title = {Application Research of Classroom Teaching and Online Teaching in Advanced Mathematics},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457079},
doi = {10.1145/3456887.3457079},
abstract = {This article studies students’ attitude and adaptability to classroom teaching and online teaching before and after the COVID-19 outbreak. The questionnaire survey method was used to investigate the students of the University of Jinan. According to the students’ feedback, this study analyzes the problems caused by the full use of online teaching, and provides reliable information for future teaching research. Finally, the study discusses the self-worth of ordinary teachers and the trend of teaching method with the rapid development of information technology.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {821–826},
numpages = {6},
keywords = {Classroom teaching, Online teaching, Questionnaire survey},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@article{10.1145/3637208,
author = {Edwards, Chris},
title = {Teaching Transformed},
year = {2024},
issue_date = {February 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {67},
number = {2},
issn = {0001-0782},
url = {https://doi.org/10.1145/3637208},
doi = {10.1145/3637208},
abstract = {The apparent ability of LLMs to write functioning source code has caused celebration over the potential for massive increases in programmer productivity and consternation among teachers.},
journal = {Commun. ACM},
month = {jan},
pages = {12–13},
numpages = {2}
}

@inproceedings{10.1145/3017680.3017804,
author = {Ladner, Richard E. and May, Matt},
title = {Teaching Accessibility},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017804},
doi = {10.1145/3017680.3017804},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {691–692},
numpages = {2},
keywords = {WCAG, accessibility, aria, disability},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@article{10.5555/771322.771329,
author = {Gellenbeck, Ed and Yang, Sherry},
title = {Teaching XML},
year = {2002},
issue_date = {December 2002},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {2},
issn = {1937-4771},
abstract = {XML has proven itself as a versatile technology, and is currently being utilized on almost every platform, and in every area of software development. This tutorial will give an introduction to XML and related technologies such as XSLT, DTDs and DOM. After completing this hands-on tutorial, you should have the basic concepts and resources to explore the possibility of integrating XML in your curriculum.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {30–31},
numpages = {2}
}

@article{10.1145/219817.219828,
author = {Baeza-Yates, Ricardo A.},
title = {Teaching algorithms},
year = {1995},
issue_date = {Dec. 1995},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {4},
issn = {0163-5700},
url = {https://doi.org/10.1145/219817.219828},
doi = {10.1145/219817.219828},
abstract = {In this paper we propose and discuss how to teach algorithms, including contents, methodologies, textbooks, and computer labs. We use the ACM/IEEE curricula as a starting point and compare our proposal to theirs. We raise several issues, but we do not provide definite answers. Our main proposal is a paradigm driven methodology for the main algorithmic course, as well as some paradigms and problems not usually covered. An ultimate teaching algorithm is still an open problem.},
journal = {SIGACT News},
month = {dec},
pages = {51–59},
numpages = {9}
}

@inproceedings{10.5555/1030818.1031088,
author = {St\r{a}hl, Ingolf and Hill, Raymond R. and Donohue, Joan M. and Herper, Henry and Harmonosky, Catherine M. and Kelton, W. David},
title = {Teaching the classics of simulation to beginners, panel: teaching the classics of simulation to beginners (panel)},
year = {2003},
isbn = {0780381327},
publisher = {Winter Simulation Conference},
abstract = {In order to get more people to use and understand simulation, improved teaching of simulation to beginners is important. The panel members share their experience in teaching the classic systems of simulation, used for several decades, to novice students.},
booktitle = {Proceedings of the 35th Conference on Winter Simulation: Driving Innovation},
pages = {1941–1951},
numpages = {11},
location = {New Orleans, Louisiana},
series = {WSC '03}
}

@inproceedings{10.1145/2462476.2462482,
author = {Heines, Jesse M. and Jassem, Krzysztof},
title = {Teaching internationalization: internationally},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2462482},
doi = {10.1145/2462476.2462482},
abstract = {This paper describes a foray into teaching internationalization by attempting to do a collaborative project between students in the United States and Poland. The project required Polish students to work with software developed by American students and to provide feedback to the Americans on how easy it was to understand and modify their code. Students communicated via email and online chats as well as in a live session facilitated by Google Hangout. The goals were to get students in both countries to appreciate the clarity needed to communicate and work with international colleagues and to have them experience the myriad issues involved in such collaborations. We report the details of the project we assigned, the processes we went through to set up the collaboration, and our successes and failures as we worked toward our goals.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {93–98},
numpages = {6},
keywords = {gui programming, internationalization, json},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@inproceedings{10.1145/266057.266217,
author = {Sajaniemi, Jorma and Kopponen, Marja},
title = {Three-level teaching material and its implementation in a teaching situation (poster)},
year = {1997},
isbn = {1581130120},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/266057.266217},
doi = {10.1145/266057.266217},
booktitle = {The Supplemental Proceedings of the Conference on Integrating Technology into Computer Science Education: Working Group Reports and Supplemental Proceedings},
pages = {153},
location = {Uppsala, Sweden},
series = {ITiCSE-WGR '97}
}

@inproceedings{10.1145/3456887.3456943,
author = {Yang, Jie},
title = {The Reform of College English Teaching Model under the OBE Teaching Concept},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3456943},
doi = {10.1145/3456887.3456943},
abstract = {The core of the OBE concept is student-centered, results-oriented, continuous improvement, and curriculum reform embodied in the talent training program. Therefore, the introduction of OBE education concept into the training of college English professionals can provide a new basis and model for the reform of talent training. This paper uses OOE teaching concepts as the basis for theoretical analysis to study innovative methods of college English teaching models. This thesis takes the OBE concept as the theoretical basis, and uses research methods such as questionnaire analysis, literature analysis, case analysis, and comparative research to construct a college English teaching model. This article firstly defines the concept of English teaching method reform, curriculum reform, English teaching method reform and OBE concept, and secondly, the internal requirements of college English teaching and its existing problems, the internal requirements of English teaching mode reform and the current situation and main problems are carried out. analysis. Then it introduces and analyzes the OBE concept and its existing applications in college English teaching, and finally, applies and innovates the OBE concept. The experimental research results show that the OBE teaching concept is based on the cultivation of people as the starting point, and that the quality control of higher education should be based on the students' learning achievements as the logical starting point and focus, and it is truly student-centered and in line with the goal of reforming college English teaching mode.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {252–255},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3456887.3457107,
author = {Wang, Yuwei},
title = {The Application of Case Teaching Method in Business Teaching—Research on the Teaching Mode of Enterprise Strategic Management Based on “Two Subjects + Cases”},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457107},
doi = {10.1145/3456887.3457107},
abstract = {In the current teaching of business management, case teaching is a widely used teaching method. Case teaching has the characteristics of openness, cooperation and interactivity, which plays an important role in enhancing students 'interest in learning and strengthening students' comprehensive ability. Therefore, this paper analyzes the application of case teaching method in business management teaching. This paper conducts research through the combination of experimental comparison method and questionnaire survey method, and finds that the traditional teaching model can no longer meet the needs of modern teaching in business management teaching. The experimental results show that the experimental group through the case teaching method has been significantly improved in all aspects, the average score of the management course increased by 18 points, the average score of the enterprise management course increased by 17 points, and the average score of the human resources management course increased by 22 points. The average score of marketing management courses increased by 25 points, and the average score of strategic management courses increased by 22 points, which shows the importance and necessity of case teaching method in business management teaching. This article combines the experiment and questionnaire survey to analyze the specific application of the case teaching method in business management teaching, which provides a reference for the reform of business management teaching mode.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {927–930},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/349316.349567,
author = {F\r{a}hr\ae{}us, Eva R. and Bridgeman, Noel and Rugelj, Joze and Chamberlain, Barbara and Fuller, Ursula},
title = {Teaching with electronic collaborative learning groups: report of the ITiCSE'99 working group on creative teaching of electronic collaborative learning groups},
year = {1999},
isbn = {9781450373258},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/349316.349567},
doi = {10.1145/349316.349567},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {121–128},
numpages = {8},
location = {<conf-loc>, <city>Cracow</city>, <country>Poland</country>, </conf-loc>},
series = {ITiCSE-WGR '99}
}

@inproceedings{10.1145/3482632.3482688,
author = {Tang, Bo},
title = {Diversified development of national vocal music teaching based on online teaching system},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3482688},
doi = {10.1145/3482632.3482688},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {269–273},
numpages = {5},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@inproceedings{10.1145/1007996.1008084,
author = {Borge, Richard},
title = {Teaching OOP: experimental studies},
year = {2004},
isbn = {1581138369},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1007996.1008084},
doi = {10.1145/1007996.1008084},
abstract = {Last year, an experiment was conducted on six novice students, attempting to teach them OOP (Object Oriented Programming) in 2.5 days using Karel J. The students learnt making their own subclasses with methods after 8 hours. A follow-up experiment will be attempted, spanning over more days using children in elementary school.},
booktitle = {Proceedings of the 9th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {252},
numpages = {1},
keywords = {experimental study, teaching OOP},
location = {Leeds, United Kingdom},
series = {ITiCSE '04}
}

@inproceedings{10.1145/3377814.3381718,
author = {Glassey, Richard and B\"{a}lter, Olle and Haller, Philipp and Wiggberg, Mattias},
title = {Addressing the double challenge of learning and teaching enterprise technologies through peer teaching},
year = {2020},
isbn = {9781450371247},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3377814.3381718},
doi = {10.1145/3377814.3381718},
abstract = {Students face difficulties when transitioning from introductory programming to using more complex enterprise technologies, such as libraries, software frameworks and development kits. Whilst much literature has been devoted to how to teach introductory programming effectively, less attention is devoted towards managing the transition towards more complex technologies. This work presents the design, experience and evaluation of a module that engages students with a range of enterprise technologies. The module uses peer teaching to transfer the responsibility to students for teaching each other about the technologies. As such, this reduces the need for the teacher to invest time in preparing materials, and it is feasible to cover more technologies depending upon the number of teaching teams. The evaluation, conducted on a cohort of 34 students studying six enterprise technologies over the course of one week, revealed overwhelmingly positive experiences with this approach. For the teacher, effort for preparation and delivery was minimal, and the feedback on the module was highly positive.},
booktitle = {Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Software Engineering Education and Training},
pages = {130–138},
numpages = {9},
keywords = {computer science education, peer teaching, software frameworks},
location = {Seoul, South Korea},
series = {ICSE-SEET '20}
}

@inproceedings{10.1145/3482632.3483054,
author = {Wang, Qian and Yang, Xiaolong},
title = {Construction of Blended Teaching Mode of Accounting Major Based on Mobile Teaching Platform},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3483054},
doi = {10.1145/3482632.3483054},
abstract = {At present, novel coronavirus epidemic is spreading and continuing worldwide, reducing personnel aggregation and effectively reducing transmission risk. “Internet + education” has become a hot topic in the field of education. Based on the mobile teaching platform of superstar learning, this paper innovatively designs the Blended teaching mode of accounting major in Colleges and universities, and deeply explores the design, implementation process and teaching effect evaluation of the Blended teaching mode of accounting major in Colleges and universities. Based on the one semester practical teaching of 2018 accounting major in a university, the practice proves that this mode can effectively improve the learning interest and enthusiasm of accounting major students, improve the learning effect of students, and promote the ability cultivation of students. At the same time, it is conducive to further enrich the hybrid teaching theory and promote the deepening of teaching reform in Colleges and universities.},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {933–937},
numpages = {5},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@inproceedings{10.1145/3513142.3513222,
author = {Li, Yupeng},
title = {Research on Teaching Design of "UAV Teaching Experiment Platform" Based on Image Recognition},
year = {2022},
isbn = {9781450386494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3513142.3513222},
doi = {10.1145/3513142.3513222},
abstract = {In the innovation and development of modern UAV technology, the actual research is mainly focused on rotorcraft UAV, and it meets the requirements of navigation control with too low speed. In this paper, the design and construction of a four-rotor UAV teaching experimental platform with photoelectric image processing as the core is the key point of this study. This experimental platform uses attitude sensor MPU 6050 and camera OV 7725, both of which are core airborne sensors, while ARM embedded system chip STM32F4 series belongs to the main control chip. R5F100 LEA series are auxiliary control chips. By using the optimized single loop PID control algorithm and accurately identifying the specific target material according to the photograph image processing algorithm, the automatic control experiment operation of the quadrotor UAV can be completed. The final experimental results show that the constructed airborne control system can effectively carry out flight control experiments, and can walk according to the set route, accurately deliver the expected set of substances, and search for specific substances. These functions are the basic contents of the practical operation of uav teaching experiment platform.},
booktitle = {Proceedings of the 4th International Conference on Information Technologies and Electrical Engineering},
articleno = {78},
numpages = {5},
keywords = {Flight control algorithm, Four rotor, Image recognition, Uav teaching},
location = {Changde, Hunan, China},
series = {ICITEE '21}
}

@inproceedings{10.1145/3513130.3559008,
author = {Tetu, Imari Cheyne},
title = {Accessible Communication App for Teaching Technical Writing: Teaching Technical Writing with Accessibly Designed App for Hybrid and Hyflex Classrooms},
year = {2022},
isbn = {9781450392464},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3513130.3559008},
doi = {10.1145/3513130.3559008},
abstract = {This project addresses the need for accessible classroom learning technologies that replicate the tools students have used in online learning during the COVID-19 pandemic. My research offers a concept for a communication app designed for use in in-person, hybrid, and hyflex classrooms. This app focuses on user experience (UX) research and universal design for learning (UDL) and is grounded in disability studies and principles of accessibility in higher education.},
booktitle = {Proceedings of the 40th ACM International Conference on Design of Communication},
pages = {186–187},
numpages = {2},
keywords = {UDL, UX, accessibility, communication, universal design for learning, user experience},
location = {Boston, MA, USA},
series = {SIGDOC '22}
}

@inproceedings{10.1145/3456887.3457519,
author = {Zhu, Weihua},
title = {A Study on the Event Teaching Mode of College Environmental Protection English Teaching},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457519},
doi = {10.1145/3456887.3457519},
abstract = {Environmental issues have become a topic of increasing concern around the world. With the increasing frequency of international cooperation and exchanges, people pay more and more attention to the role of environmental protection professional English in modern talent training. In English teaching, teachers can effectively use a variety of teaching resources to select the entry point of environmental protection education and English teaching, promote the organic integration of English teaching and environmental protection awareness, and organize students to study and explore environmental protection issues , Through various ways to dig deep, carry out environmental protection education penetration, so that students can enhance their environmental awareness while improving their English learning ability. Therefore, this article explores the integration of environmental protection awareness in English teaching.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {1338–1343},
numpages = {6},
keywords = {English classroom teaching, English teaching system, Environmental protection, English teaching},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3452446.3452701,
author = {Xu, Lijuan},
title = {Research on the Application of New Teaching Mode in College Curriculum Teaching-Taking the Teaching of "Resources and Environmental Protection Law" as an Example},
year = {2021},
isbn = {9781450389815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3452446.3452701},
doi = {10.1145/3452446.3452701},
abstract = {At present, with the rapid development of network technology and social economy, the reform of teaching concept is deepening. The traditional teaching mode can no longer meet people's growing learning needs. The application of network technology in teaching is more and more common. The corresponding network teaching platform is also in continuous development, at the same time, its hybrid teaching mode combined with traditional teaching is also constantly deepening into the classroom of colleges and universities. In this paper, through a comparative experiment of two classes of law major in a school, taking the "resource and environmental protection law" course as the theme, through questionnaire survey and interview, students' views on the new mode of education have been counted. Through data analysis, the help of the new education mode to students' learning results has been analyzed. According to statistics, the average score of students in the new education mode is higher than that in the traditional education mode The students are 11 points higher, the passing rate is 94%, and the excellent rate is 6%. Compared with the traditional education mode, the new education mode can enhance students' interest in learning and improve their academic performance.},
booktitle = {2021 2nd Asia-Pacific Conference on Image Processing, Electronics and Computers},
pages = {1064–1068},
numpages = {5},
keywords = {Blended Teaching, Data Analysis, Internet Technology, Questionnaire Survey},
location = {Dalian, China},
series = {IPEC2021}
}

@inproceedings{10.1145/288335.288542,
author = {Tucker, Robert J. and Cordani, John},
title = {Teaching teachers to teach on-line},
year = {1998},
isbn = {1581130066},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/288335.288542},
doi = {10.1145/288335.288542},
booktitle = {Proceedings of the 26th Annual ACM SIGUCCS Conference on User Services},
pages = {293–297},
numpages = {5},
location = {Bloomington, Indiana, USA},
series = {SIGUCCS '98}
}

@inproceedings{10.1145/3626252.3630789,
author = {Liu, Mengqi and M'Hiri, Faten},
title = {Beyond Traditional Teaching: Large Language Models as Simulated Teaching Assistants in Computer Science},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630789},
doi = {10.1145/3626252.3630789},
abstract = {As the prominence of Large Language Models (LLMs) grows in various sectors, their potential in education warrants exploration. In this study, we investigate the feasibility of employing GPT-3.5 from OpenAI, as an LLM teaching assistant (TA) or a virtual TA in computer science (CS) courses. The objective is to enhance the accessibility of CS education while maintaining academic integrity by refraining from providing direct solutions to current-semester assignments. Targeting Foundations of Programming (COMP202), an undergraduate course that introduces students to programming with Python, we have developed a virtual TA using the LangChain framework, known for integrating language models with diverse data sources and environments. The virtual TA assists students with their code and clarifies complex concepts. For homework questions, it is designed to guide students with hints rather than giving out direct solutions. We assessed its performance first through a qualitative evaluation, then a survey-based comparative analysis, using a mix of questions commonly asked on the COMP202 discussion board and questions created by the authors. Our preliminary results indicate that the virtual TA outperforms human TAs on clarity and engagement, matching them on accuracy when the question is non-assignment-specific, for which human TAs still proved more reliable. These findings suggest that while virtual TAs, leveraging the capabilities of LLMs, hold great promise towards making CS education experience more accessible and engaging, their optimal use necessitates human supervision. We conclude by identifying several directions that could be explored in future implementations.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {743–749},
numpages = {7},
keywords = {adaptive teaching, chatgpt, cs education, gpt, llm, machine learning, novice programmers, openai, programming},
location = {<conf-loc>, <city>Portland</city>, <state>OR</state>, <country>USA</country>, </conf-loc>},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/349316.349548,
author = {Knox, Deborah and Fincher, Sally and Dale, Nell and Adams, Elizabeth and Goelman, Don and Hightower, James and Loose, Ken and Springsteel, Fred},
title = {The peer review process of teaching materials: report of the ITiCSE'99 working group on validation of the quality of teaching materials},
year = {1999},
isbn = {9781450373258},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/349316.349548},
doi = {10.1145/349316.349548},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {87–100},
numpages = {14},
location = {<conf-loc>, <city>Cracow</city>, <country>Poland</country>, </conf-loc>},
series = {ITiCSE-WGR '99}
}

@inproceedings{10.1145/800138.804498,
author = {Beidler, John},
title = {Teaching project management},
year = {1979},
isbn = {9781450374439},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800138.804498},
doi = {10.1145/800138.804498},
abstract = {In this paper we make some observations about several items which should receive heavier emphasis in undergraduate curricula. We make no pretense about having all the answers about how these things can be ideally fit into undergraduate curricula. On the contrary, what we do have is a mixed bag of successes and failures which we believe might prove useful to others. We would prefer to emphasize three items:1. Promotion of some understanding of the life cycles of a system;2. More emphasis on documentation, its purpose, level, and methods of organization;3. Software tools for analysis, design, and systems documentation and communication.More consideration of these items must appear in undergraduate curricula. They all have a direct bearing on the problems of project management.},
booktitle = {Proceedings of the Sixteenth Annual SIGCPR Conference},
pages = {20–24},
numpages = {5},
location = {Princeton, New Jersey, USA},
series = {SIGCPR '79}
}

@inproceedings{10.1145/143557.143627,
author = {Schonberg, Edmond},
title = {Teaching Ada 9X},
year = {1992},
isbn = {0897915291},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/143557.143627},
doi = {10.1145/143557.143627},
booktitle = {Proceedings of the Conference on TRI-Ada '92},
pages = {101–106},
numpages = {6},
location = {Orlando, Florida, USA},
series = {TRI-Ada '92}
}

@article{10.5555/3069621.3069629,
author = {Works, Karen},
title = {Teaching UX design},
year = {2017},
issue_date = {May 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {5},
issn = {1937-4771},
abstract = {UX Design (or User Experience design) is becoming the industry standard method of ensuring that applications provide good experiences for their intended audiences. According to Stuart MacDougall, "While some buzzwords and online trends will come and go, the art of user experience may evolve; but with an increase in online content, expansion of websites and increasing expectations of your users, it will only become more important" [1].},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {39–40},
numpages = {2}
}

@article{10.1145/228296.228306,
author = {Bell, D. H.},
title = {Teaching virtual reality},
year = {1996},
issue_date = {June 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {28},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/228296.228306},
doi = {10.1145/228296.228306},
abstract = {This paper reports on the design and implementation of a two-semester course on Virtual Reality (VR). The course is aimed at final year undergraduates on programmes leading to specialist degrees such as Information Technology, Software Engineering, Computer Studies, Business Information Systems.Entitled "VR - implementation and applications", the course embraces novel devices, interfacing, software toolkits, graphics algorithms, system evaluation, technology prediction, Human Computer Interaction (HCI), social, psychological and philosophical aspects.The course focuses on the evaluation of current and expected technology and on the assessment of current and future applications in its complete variety. It thereby encompasses transferable skills in the mainstream areas of technology evaluation, system evaluation.This paper reviews the aims of the course, the curriculum content, a novel learning approach, assessment and an evaluation of the course.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {56–61},
numpages = {6}
}

@article{10.1145/51594.51603,
author = {Searls, Delmar E.},
title = {Teaching computer ethics},
year = {1988},
issue_date = {Sept. 1988},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/51594.51603},
doi = {10.1145/51594.51603},
journal = {SIGCSE Bull.},
month = {sep},
pages = {45–48},
numpages = {4}
}

@article{10.1145/1111122.1111123,
author = {Pelt, D. Van},
title = {Teaching technical writing},
year = {1982},
issue_date = {September 1982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {4},
issn = {0731-1001},
url = {https://doi.org/10.1145/1111122.1111123},
doi = {10.1145/1111122.1111123},
abstract = {The rapid growth of the computer industry has created an increasing demand for technical writers who can address the specialized problems of computer documentation. Since information science is still a very young discipline, university and college writing programs have only begun to identify the needs of this new industry and develop courses that satisfy those needs. Two interrelated factors have severely aggravated the problem. First, writing for computer systems places the writer in a rigorously specialized context as different from writing for business, law, or medicine as those disciplines are from each other. Since most computer documentation instructs readers on how to use a specific system or set of procedures to perform a specialized task, writing instruction manuals and other supporting documentation for computers must be sharply distinguished from the more traditional forms of business writing, technical report writing, and scholarly journal articles written for publication. The second factor hindering the development of new courses in this area involves the rapid advance of computer technology itself: a bewildering array of new devices and systems appear every week, training documents and reference manuals are often outdated before they are even completed, and the increased complexity of the new technology frequently requires addressing several different audiences, each possessing a widely varying level of technical knowledge. These problems require specialized teaching approaches to create a situational context resembling that of the working world. Students need large conceptual guidelines for addressing different groups of readers, yet the learning environment must remain flexible enought to adapt to rapid technological change and multiple levels of specific information needs. This article describes a course developed at the University of California, Santa Cruz which addresses these problems.},
journal = {SIGDOC Asterisk J. Comput. Doc.},
month = {sep},
pages = {4–7},
numpages = {4}
}

@article{10.1145/362280.362294,
author = {Rosin, Robert F.},
title = {Teaching “about programming”},
year = {1973},
issue_date = {July 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {7},
issn = {0001-0782},
url = {https://doi.org/10.1145/362280.362294},
doi = {10.1145/362280.362294},
abstract = {This paper presents the goals and organization of a course about programming designed to provide entering students in a graduate program with a cultural enrichment in their professional lives. The students are expected to have taken at least two programming courses prior to this one and, therefore, to be familiar with at least two programming languages, both as students and users.Teaching someone how to program is similar to teaching him to play a musical instrument: neither skill can be taught—they must be learned. However, the teacher still serves several vital purposes: to present a set of rules for producing well-formed utterances; to offer numerous demonstrations of his own skill; and to function as an involved critic. Finally, the teacher is the source of information about the process in which the student is involved.},
journal = {Commun. ACM},
month = {jul},
pages = {435–439},
numpages = {5},
keywords = {education, professionalism, programming concepts}
}

@inproceedings{10.1145/3322276.3322327,
author = {Tsaknaki, Vasiliki and Balaam, Madeline and St\r{a}hl, Anna and Sanches, Pedro and Windlin, Charles and Karpashevich, Pavel and H\"{o}\"{o}k, Kristina},
title = {Teaching Soma Design},
year = {2019},
isbn = {9781450358507},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3322276.3322327},
doi = {10.1145/3322276.3322327},
abstract = {We devised a Soma Design curriculum with accompanying teaching approaches for a seven-week course at a technical university. In our analysis of students' design concepts and process accounts, we found that they had opened an unusually rich and aesthetically engaging design space. But we also noted how they sometimes struggled with processes such as: "staying in the undecided" long enough to engage deeply with somaesthetic design imaginings; finding, refining and repeatedly returning to an aesthetic quality through the different phases of their design work; liberating them-selves from pre-existing practices or objects in order to find entirely novel design possibilities; shifting from a more rationalistic design process, mainly based on argumenta-tion, into a felt engagement were imaginations are acted out - not talked about; and lacking a technical toolkit for somaesthetically experiencing interactive sociodigital materials. Based on these insights, we provide a set of recommendations for how to teach Soma Design, and we have created an accompanying Soma Design toolkit that will support exploration and design.},
booktitle = {Proceedings of the 2019 on Designing Interactive Systems Conference},
pages = {1237–1249},
numpages = {13},
keywords = {interaction design curriculum, soma design, somaesthetics, teaching},
location = {San Diego, CA, USA},
series = {DIS '19}
}

@inproceedings{10.1145/2662155.2662202,
author = {Andrews, Barbara and Bardzell, Shaowen and Clement, Andrew and D'Andrea, Vincenzo and Hakken, David and Poderi, Giacomo and Simonsen, Jesper and Teli, Maurizio},
title = {Teaching participatory design},
year = {2014},
isbn = {9781450332149},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2662155.2662202},
doi = {10.1145/2662155.2662202},
abstract = {The goal of this full-day workshop is to create a place where people can share experiences, plans, and questions about teaching Participatory Design (PD). We aim to create a context for all of us to talk about how we design and set up courses, what challenges we face and how we solve them. The workshop is for people who are interested in the way people teach as well as in what is taught and what resources are gathered to aid the process. During the workshop, we will explore in an interactive manner how constructivist approaches to teaching can support the teaching and learning of participatory design in academic and non-academic contexts. We will also discuss experiences in using recent material such as the new (2012) PD Handbook. We hope that this dialogue can become a regular part of PDC.},
booktitle = {Proceedings of the 13th Participatory Design Conference: Short Papers, Industry Cases, Workshop Descriptions, Doctoral Consortium Papers, and Keynote Abstracts - Volume 2},
pages = {203–204},
numpages = {2},
keywords = {participatory design, pedagogy, teaching, universities},
location = {Windhoek, Namibia},
series = {PDC '14}
}

@inproceedings{10.5555/2432523.2432534,
author = {VanDevender, Steve},
title = {Teaching system administration},
year = {2012},
publisher = {USENIX Association},
address = {USA},
abstract = {For the past twelve years I have taught a one-term college-level class introducing students to the discipline of system administration. I discuss how the class was created, the considerations that went into designing the class structure and assignments, student outcomes, how the class has evolved over time, and other observations on teaching. Links to detailed course materials and other resources are provided.},
booktitle = {Proceedings of the 26th International Conference on Large Installation System Administration: Strategies, Tools, and Techniques},
pages = {135–142},
numpages = {8},
location = {San Diego, CA},
series = {lisa'12}
}

@inproceedings{10.5555/1978702.1978704,
author = {Oshlyansky, Lidia},
title = {Doing, teaching, learning},
year = {2010},
publisher = {Universidad Polit\'{e}cnica de San Luis Potos\'{\i}},
address = {San Luis Potos\'{\i}, S.L.P, MEX},
abstract = {Every few years we think about what we teach our students before they go out into industry to find jobs and every few years we discover that there are gaps in their knowledge. This is not a problem unique to HCI, but we are talking here about our field and our professions. More often then not we hear back from our students saying that they found a wonderful job but there was so much for them to learn on the job, so many skills to acquire and so many concepts to understand. What is it we are teaching, what is it our students are learning and what is it they are doing when they go to jobs in HCI? From methods to tools to concepts where are the gaps between what industry wants and needs from our graduates and what academia teaches them? And most importantly what can or should we do about these gaps?},
booktitle = {Proceedings of the 3rd Mexican Workshop on Human Computer Interaction},
pages = {8},
numpages = {1},
location = {San Luis Potos\'{\i}, Mexico},
series = {MexIHC '10}
}

@inproceedings{10.1145/1160633.1160757,
author = {Chakraborty, Doran and Sen, Sandip},
title = {Teaching new teammates},
year = {2006},
isbn = {1595933034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1160633.1160757},
doi = {10.1145/1160633.1160757},
abstract = {Knowledge transfer between expert and novice agents is a challenging problem given that the knowledge representation and learning algorithms used by the novice learner can be fundamentally different from and inaccessible to the expert trainer. We are particularly interested in team tasks, robotic or otherwise, where new teammates need to replace currently indisposed team member(s). We are interested in a general knowledge transfer framework where existing team members or experts can train a new agent to follow its role in team coordination by using exemplars of desirable behavior. Each such exemplar presents a team situation and a preferred action. We envisage an iterative training process where the trainer selects more exemplars in the next iteration based on the errors made by the learner in action choices for test exemplars presented in the current iteration. Such an iterative, exemplar based generic knowledge transfer scheme can be used by agents using arbitrary knowledge representation and learning methods. We evaluate the success of training new teammates in the well-known pursuit problem, where some of the current set of expert predators is being replaced by new ones with no a priori hunting knowledge. Experimental results demonstrate the robustness of our knowledge transfer scheme with a graceful performance degradation.},
booktitle = {Proceedings of the Fifth International Joint Conference on Autonomous Agents and Multiagent Systems},
pages = {691–693},
numpages = {3},
keywords = {coordination, knowledge transfer, training},
location = {Hakodate, Japan},
series = {AAMAS '06}
}

@inproceedings{10.1145/1067445.1067533,
author = {Flood, Raymond and Lockhart, Bob},
title = {Teaching programming collaboratively},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067533},
doi = {10.1145/1067445.1067533},
abstract = {We describe a collaborative approach to teaching core programming concepts based on student debate and involving the Phoenix meta-language generator.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {321–324},
numpages = {4},
keywords = {classroom dialogue, collaborative learning, meta-languages, problem-based learning, teaching programming concepts},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@article{10.5555/1060405.1060406,
author = {Gries, David},
title = {Teaching program development},
year = {2005},
issue_date = {June 2005},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {6},
issn = {1937-4771},
abstract = {Few introductory programming texts--and therefore few introductory programming courses-- teach the DEVELOPMENT of programs (or algorithms). Instead, they just present completed algorithms, one after the other, with little attention paid to how they were developed. This results in programmers who simply hack, who have no conscious idea about how they develop programs and why.It doesn't have to be that way. Instead, one can teach the rudiments of a theory of program correctness and then show how the ideas can be used in a PRACTICAL way in developing programs. Programming becomes a "science" --a department of practical work in which the work gets done by conscious application of principles-- as opposed to an art, where the work requires merely knowledge of traditional rules and expertise acquired by habit.Even in the first programming course, teaching the development of loops as shown above can result in increased efficiency and effectiveness in students' programming. Further, many algorithms (e.g. searching and sorting) become memorable --not because one memorizes code but because one can develop them at will.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {1–2},
numpages = {2}
}

@inproceedings{10.1145/364447.364561,
author = {Goodrich, Michael T. and Tamassia, Roberto},
title = {Teaching internet algorithmics},
year = {2001},
isbn = {1581133294},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/364447.364561},
doi = {10.1145/364447.364561},
abstract = {We describe an Internet-based approach for teaching important concepts in a Junior-Senior level course on the design and analysis of data structures and algorithms (traditionally called CS7 or DS&amp;A). The main idea of this educational paradigm is twofold. First, it provides fresh motivation for fundamental algorithms and data structures that are finding new applications in the context of the Internet. Second, it provides a source for introducing new algorithms and data structures that are derived from specific Internet applications. In this paper, we suggest some key pedagogical and curriculum updates that can be made to the classic CS7/DS&amp;A course to turn it into a course on Internet Algorithmics. We believe that such a course will stimulate new interest and excitement in material that is perceived by some students to be stale, boring, and purely theoretical. We argue that the foundational topics from CS7/DS&amp;A should remain even when it is taught in an Internet-centric manner. This, of course, should come as no surprise to the seasoned computer scientist, who understands the value of algorithmic thinking.},
booktitle = {Proceedings of the Thirty-Second SIGCSE Technical Symposium on Computer Science Education},
pages = {129–133},
numpages = {5},
location = {Charlotte, North Carolina, USA},
series = {SIGCSE '01}
}

@inproceedings{10.1145/299359.299369,
author = {Carrington, David},
title = {Teaching software testing},
year = {1997},
isbn = {0897919580},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299359.299369},
doi = {10.1145/299359.299369},
booktitle = {Proceedings of the 2nd Australasian Conference on Computer Science Education},
pages = {59–64},
numpages = {6},
location = {The Univ. of Melbourne, Australia},
series = {ACSE '97}
}

@inproceedings{10.1145/3328778.3366987,
author = {Ball, Michael and Hsia, Justin and Pon-Barry, Heather and DeOrio, Andrew and Blank, Adam},
title = {Teaching TAs To Teach: Strategies for TA Training},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366987},
doi = {10.1145/3328778.3366987},
abstract = {"The only thing that scales with undergrads is undergrads". As Computer Science course enrollments have grown, there has been a necessary increase in the number of undergraduate and graduate teaching assistants (TAs, and UTAs). TA duties often extend far beyond grading, including designing and leading lab or recitation sections, holding office hours and creating assignments. Though advanced students, TAs need proper pedagogical training to be the most effective in their roles. Training strategies have widely varied from no training at all, to semester-long prep courses. We will explore the challenges of TA training across both large and small departments. While much of the effort has focused on teams of undergraduates, most presenters have used the same tools and strategies with their graduate students. Training for TAs should not just include the mechanics of managing a classroom, but culturally relevant pedagogy. The panel will focus on the challenges of providing "just in time", and how we manage both intra-course training and department or campus led courses.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {477–478},
numpages = {2},
keywords = {graduate student instructors, pedagogy, ta training, teaching assistants, undergraduate student instructors},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/2998581.2998618,
author = {Peters, Anicia and Jordan, Zayira and Merkle, Luiz and Rocha, Mario Moreno and Nocera, Jose Abdelnour and van der Veer, Gerrit C. and Dray, Susan and Preece, Jennifer and Churchill, Elizabeth},
title = {Teaching HCI: A Living Curriculum?},
year = {2016},
isbn = {9781450348300},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2998581.2998618},
doi = {10.1145/2998581.2998618},
abstract = {The results of a study on HCI education in 2014 prompted the proposal to create a living curriculum that responds to the needs of multiple stakeholders. A workshop held during CHI 2014 signaled coalescence in the requirements for the establishment of said curriculum. This workshop seeks to further explore among multiple diverse HCI educators on how to proceed with the establishment of an HCI living curriculum that integrates different cultural contexts and requirements. The workshop will also focus particularly on the African context of HCI education. The envisaged outcome is a plan to proceed with the creation of such a culturally sensitive living curriculum/a and its implementation.},
booktitle = {Proceedings of the First African Conference on Human Computer Interaction},
pages = {267–270},
numpages = {4},
keywords = {Human-Computer interaction, community, curriculum development, education, living curriculum, progressional},
location = {<conf-loc>, <city>Nairobi</city>, <country>Kenya</country>, </conf-loc>},
series = {AfriCHI '16}
}

@inproceedings{10.1145/3408877.3432579,
author = {Ball, Michael and DeOrio, Andrew and Hsia, Justin and Blank, Adam},
title = {Teaching TAs to Teach: Strategies for TA Training},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432579},
doi = {10.1145/3408877.3432579},
abstract = {"The only thing that scales with undergrads is undergrads". As Computer Science course enrollments have grown, there has been a necessary increase in the number of undergraduate and graduate teaching assistants (TAs, and UTAs). TA duties often extend far beyond grading, including designing and leading lab or recitation sections, holding office hours and creating assignments. Though advanced students, TAs need proper pedagogical training to be the most effective in their roles. Training strategies have widely varied from no training at all, to semester-long prep courses. We will explore the challenges of TA training across both large and small departments. While much of the effort has focused on teams of undergraduates, most presenters have used the same tools and strategies with their graduate students. Training for TAs should not just include the mechanics of managing a classroom, but culturally relevant pedagogy. The panel will focus on the challenges of providing "just in time", and how we manage both intra-course training and department or campus led courses.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {461–462},
numpages = {2},
keywords = {graduate student instructors, pedagogy, ta training, teaching assistants, undergraduate student instructors},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3463531.3463535,
author = {Jiqiu, Li},
title = {Online teaching in China: Interactive teaching and learning methods for secondary school education},
year = {2021},
isbn = {9781450389662},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3463531.3463535},
doi = {10.1145/3463531.3463535},
abstract = {Online teaching is a new booming industry in China. Since 2011, China's online education has benefited from the development and popularization of the mobile Internet and the user scale and market scale of the online education industry have grown rapidly.. Though there is a huge market inside China for online teaching it is still underdeveloped. The first hurdle was the teachers, as they were not adequately trained in online teaching. Though now a day the teachers are starting to train themselves and the institutes are also supporting online teaching it still has a long way to go. While online teaching is very effective for language courses, other courses need special attention. Avatar, graphs, and video presentation can be very helpful to deliver lessons online and this also helps to keep the cost low, making the course affordable. However, if the online courses are not satisfactory to the students they will not enroll in them. For the exploration and reflection of online teaching, it should be recognized that information technology is only one aspect that promotes teaching reform. More importantly, it is to pay attention to students' "learning, real learning". Learning motivation is the key. Teachers should make the content of teaching materials interesting, useful and meaningful teaching content, improve the "viscosity" of students' learning, "home online learning" triggers thinking about learning in the informal learning environment and the development of learning resources in the informal learning environment should point to the education goals and development. The core literacy must adhere to the principles of priority, inclusiveness and scientificity.If online courses are paired with virtual group discussion and peer learning, it can enhance the learning ability of students.},
booktitle = {Proceedings of the 2021 7th International Conference on Education and Training Technologies},
pages = {20–27},
numpages = {8},
keywords = {Internet education, Online teaching, curriculum design, educational technology, interactive teaching, school teaching},
location = {Macau, China},
series = {ICETT '21}
}

@inproceedings{10.5555/1795234.1795262,
author = {Hecht, K. Maike and Maass, Susanne},
title = {Teaching participatory design},
year = {2008},
isbn = {9780981856100},
publisher = {Indiana University},
address = {USA},
abstract = {In this paper we reflect on how to teach methods used in participatory design (PD) to graduate students. We describe a course concept that has proved very successful both in terms of student satisfaction and course results during the last years. Lectures introduce the concept of PD and a wide variety of participatory methods for analysis and design; exercises prepared and facilitated by small groups of students permit hands-on experience and further the development of necessary group moderation skills. As there are only few descriptions of teaching concepts in the literature, we would like to invite the PD community to share their experiences and start a discussion about teaching participatory design.},
booktitle = {Proceedings of the Tenth Anniversary Conference on Participatory Design 2008},
pages = {166–169},
numpages = {4},
keywords = {education, methods, participatory design, teaching},
location = {Bloomington, Indiana},
series = {PDC '08}
}

@inproceedings{10.1145/1067445.1067541,
author = {Bergin, Joseph and Wallingford, Eugene and Caspersen, Michael and Goldweber, Michael and Kolling, Michael},
title = {Teaching polymorphism early},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067541},
doi = {10.1145/1067445.1067541},
abstract = {Is it possible to teach dynamic polymorphism early? What techniques could facilitate teaching it in Java. This panel will bring together people who have considered this question and attempted to implement it in various ways, some more completely than others. It will also give participants an opportunity to explore the topic and to share their own ideas.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {342–343},
numpages = {2},
keywords = {first course, object-oriented programming, polymorphism},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@inproceedings{10.1145/330908.331883,
author = {Doube, Wendy},
title = {Distance teaching workloads},
year = {2000},
isbn = {1581132131},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/330908.331883},
doi = {10.1145/330908.331883},
abstract = {In this paper, we describe a formula for calculating the teaching workload for students who are studying off campus both on and off-line. Initially the faculty of information technology developed a proposal for calculating academic workloads. This proposal reflected the rigid teacher centred learning structures of traditional on-campus delivery and made no allowance for the services required by off-campus students. In response, teachers of off-campus students developed a complementary proposal, based on actual time logs, which reflected their student centred approach to learning. Contrary to popular wisdom, off-campus teaching was found to be more time-consuming than on-campus.},
booktitle = {Proceedings of the Thirty-First SIGCSE Technical Symposium on Computer Science Education},
pages = {347–351},
numpages = {5},
keywords = {distance education, electronic educational environments, flexible delivery, student centered learning, teaching workload},
location = {Austin, Texas, USA},
series = {SIGCSE '00}
}

@inproceedings{10.1145/17701.255345,
author = {Peelle, Howard A. and Eisenberg, Murray},
title = {APL teaching bugs},
year = {1985},
isbn = {0897911571},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/17701.255345},
doi = {10.1145/17701.255345},
abstract = {This paper discusses “APL teaching bugs”, in three senses: (1) issues inherent in the teaching of APL that confront the instructor with difficult choices; (2) potential mistakes sometimes made by instructors teaching APL; and (3) problematic aspects of the design of APL that are especially difficult to explain. These teaching bugs are presented as provocative questions, but the “answers” are left to individual instructors. By facing these questions, teachers may make APL more comprehensible and hence foster its acceptance and growth.},
booktitle = {Proceedings of the International Conference on APL: APL and the Future},
pages = {86–93},
numpages = {8},
location = {Seattle, Washington, USA},
series = {APL '85}
}

@inproceedings{10.1007/978-3-642-12261-3_6,
author = {Bezivin, Jean and France, Robert and Gogolla, Martin and Haugen, Oystein and Taentzer, Gabriele and Varro, Daniel},
title = {Teaching modeling: why, when, what?},
year = {2009},
isbn = {3642122604},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-642-12261-3_6},
doi = {10.1007/978-3-642-12261-3_6},
abstract = {This paper reports on a panel discussion held during the Educators' Symposium at MODELS'2009. It shortly explains the context provided for the discussion and outlines the statements made by the panelists. The panelists were asked to make their statements along a number of topics relevant to teaching modeling like: Notation, Semantics, Programming, Tooling, Suitability, Metamodeling.},
booktitle = {Proceedings of the 2009 International Conference on Models in Software Engineering},
pages = {55–62},
numpages = {8},
location = {Denver, CO},
series = {MODELS'09}
}

@inproceedings{10.5555/193201.194904,
author = {Jacobson, Sheldon H. and Morrice, Douglas J. and Withers, David H. and Y\"{u}cesan, Enver and Kelton, W. David},
title = {Teaching simulation: a panel discussion},
year = {1994},
isbn = {078032109X},
publisher = {Society for Computer Simulation International},
address = {San Diego, CA, USA},
booktitle = {Proceedings of the 26th Conference on Winter Simulation},
pages = {1378–1381},
numpages = {4},
location = {Orlando, Florida, USA},
series = {WSC '94}
}

@inproceedings{10.1145/3265757.3265761,
author = {Waite, Jane and Curzon, Paul and Marsh, William and Sentance, Sue},
title = {Comparing K-5 teachers' reported use of design in teaching programming and planning in teaching writing},
year = {2018},
isbn = {9781450365888},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3265757.3265761},
doi = {10.1145/3265757.3265761},
abstract = {K-5 teachers teach a range of subjects &amp; develop generic teaching skills; when starting to teach computing, particularly programming, practitioners may not realise that they can draw on these other skills to support their teaching. In a small study of K-5 teachers, potential synergies were suggested between using planning in the the teaching of writing and design in the teaching of programming. In this paper, we explore these synergies by surveying a wider group of teachers (n=207) on their uses of planning and design. Teachers reported the usefulness of planning for writing and design for programmingas equally important. However, there were significant differences in their uses. The majority saw planning as essential in writing &amp; put this into practice in their teaching. For example, they demonstrated the creation of plans, expected students to annotate plans, required students to refer to plans when writing and used plans to differentiate. By contrast, these uses were implemented less frequently in programming tasks. We also report on differences in the confidence of male &amp; female respondents, &amp; between generalists (who teach programming &amp; writing) &amp; specialists (who do not teach writing). For example, females were more confident to teach writing than programming, with males vice versa. Having revealed opportunities for reuse of successful techniques used in teaching writing for the teaching of programming we recommend further work is needed to explore this transfer of pedagogical knowledge.},
booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
articleno = {4},
numpages = {10},
keywords = {K-5 computing education, design, programming, teachers},
location = {Potsdam, Germany},
series = {WiPSCE '18}
}

@inproceedings{10.1145/3078072.3078073,
author = {Miele, Joshua},
title = {Teaching Teachers and Making Makers: What the Maker Movement Can Teach the World about Accessibility and Design},
year = {2017},
isbn = {9781450349215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3078072.3078073},
doi = {10.1145/3078072.3078073},
abstract = {Although interactive technologies and the maker movement offer stunning prospects for the next 50 years of educational inclusion and accessibility for learners with visual disabilities, a surprising array of physical, digital, and cultural barriers continue to communicate lessons of exclusion and inequity. Accessibility is a fundamental aspect of digital and physical design which, when present, allows a user with a disability to have an effective and substantively equivalent experience to that of a user without a disability. Here we consider interaction barriers for people with visual disabilities, but the themes readily apply to other disability-specific challenges in universal design and inclusion.Consider any cross section of exciting instructional technologies, and chances are they are dominated by visual metaphors, graphical user interfaces, data visualizations, and interactive video. Systems that incorporate ostensibly non-visual, multi-modal interactives such as haptics and active manipulation do not necessarily expand access for blind and visually-impaired learners, as such tools are likely also to include key interface elements that are visual.The same may be said of mainstream information technologies accessibility is still temperamental and far from complete for such seemingly simple and ubiquitous resources as Google Suite, Facebook, and YouTube, let alone advanced immersive experiences such as Oculus Rift. The iconic tools of the maker movement and experiential learning -- 3D design, modeling, and printing -- while lauded and enthusiastically embraced by sighted designers of accessible instructional materials, remain largely unusable by independent blind makers.},
booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
pages = {5–6},
numpages = {2},
keywords = {keynote},
location = {Stanford, California, USA},
series = {IDC '17}
}

@inproceedings{10.1145/800107.803454,
author = {Marsh, Barbara},
title = {Teaching teachers about computers: A course description},
year = {1976},
isbn = {9781450374125},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800107.803454},
doi = {10.1145/800107.803454},
abstract = {I believe computers will continue to expand their areas of application, and so am forced to the conclusion that school curricula will have to deal with them. And if computer curricula are to be introduced into the schools, teacher training institutions must prepare teachers to teach about computers.The context I choose is education itself. "Education" is of course rather a broad term; computer uses in education are many and varied. Some of these applications are similar enough to those in other areas that some very general principles of computer use will automatically be raised. Others are quite unique, and raise specific questions which teachers will have to deal with in their own professional lives, so that the study of computers can be seen to be very relevant to being a teacher. By teaching about computers in this context instead of more abstractly or generally, and by drawing attention constantly to the educational implications of computer uses, I hope that the teachers who are my students will in turn pass on to their own students the habit of attending to the social implications of what is done by computers.},
booktitle = {Proceedings of the ACM SIGCSE-SIGCUE Technical Symposium on Computer Science and Education},
pages = {86–89},
numpages = {4},
series = {SIGCSE '76}
}

@article{10.5555/3122009.3122040,
author = {Gao, Ziyuan and Ries, Christoph and Simon, Hans U. and Zilles, Sandra},
title = {Preference-based teaching},
year = {2017},
issue_date = {January 2017},
publisher = {JMLR.org},
volume = {18},
number = {1},
issn = {1532-4435},
abstract = {We introduce a new model of teaching named "preference-based teaching" and a corresponding complexity parameter--the preference-based teaching dimension (PBTD)--representing the worstcase number of examples needed to teach any concept in a given concept class. Although the PBTD coincides with the well-known recursive teaching dimension (RTD) on finite classes, it is radically different on infinite ones: the RTD becomes infinite already for trivial infinite classes (such as half-intervals) whereas the PBTD evaluates to reasonably small values for a wide collection of infinite classes including classes consisting of so-called closed sets w.r.t. a given closure operator, including various classes related to linear sets over N0 (whose RTD had been studied quite recently) and including the class of Euclidean half-spaces. On top of presenting these concrete results, we provide the reader with a theoretical framework (of a combinatorial flavor) which helps to derive bounds on the PBTD.},
journal = {J. Mach. Learn. Res.},
month = {jan},
pages = {1012–1043},
numpages = {32},
keywords = {learning half-spaces, linear sets, preference relation, recursive teaching dimension, teaching dimension}
}

@inproceedings{10.1145/1999747.1999868,
author = {Almstrum, Vicki L. and Muralidhar, Deepa and Last, Mary Z. and Owens, Barbara Boucher},
title = {Teaching with CEOHP},
year = {2011},
isbn = {9781450306973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1999747.1999868},
doi = {10.1145/1999747.1999868},
abstract = {The Computing Educators Oral History Project (CEOHP) is a collection of interviews with computing educators. During 2010, evaluation efforts guided major updates of the CEOHP website (ceohp.org) and the addition of new sections with activities appropriate for use in secondary and post-secondary classes. This poster introduces the CEOHP project, describes the pedagogical aspects of the site, and suggests uses for the educational materials.},
booktitle = {Proceedings of the 16th Annual Joint Conference on Innovation and Technology in Computer Science Education},
pages = {354},
numpages = {1},
keywords = {careers, curriculum, equity, evaluation, gender, lesson plans, life stories, oral history, pedagogy},
location = {Darmstadt, Germany},
series = {ITiCSE '11}
}

@inproceedings{10.1145/800038.801029,
author = {Cuha, Ratan K.},
title = {Teaching microprocessor architectures},
year = {1983},
isbn = {0897910915},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800038.801029},
doi = {10.1145/800038.801029},
abstract = {For our undergraduate computer science architecture majors, we are making a major revision of our existing course sequence (three courses) on microprocessors. For effective utilization of microprocessors, a total system design and development methodology approach is used. In this paper, we discuss the development of the first course of the sequence. The first course emphasizes on various microprocessor architectures. Since our non-architecture major undergraduate students may take this first course as an elective, this course is designed as a self contained foundation course with proper mixes of hardware and software.},
booktitle = {Proceedings of the Fourteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {120–123},
numpages = {4},
location = {Orlando, Florida, USA},
series = {SIGCSE '83}
}

@article{10.1145/1217116.1217118,
author = {Lewis, T. G. and DeKock, A. R. and Alcorn, H. R.},
title = {Teaching microprogramming: a firmware laboratory},
year = {1973},
issue_date = {April 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {1},
issn = {1050-916X},
url = {https://doi.org/10.1145/1217116.1217118},
doi = {10.1145/1217116.1217118},
abstract = {Many computer science departments are entering into what might be termed 3rd generation teaching of computer science. The first generation of computer science teaching was done in primarily an open shop, hands-on environment. The machines were slow, the operating systems were simple or nonexistent, and debugging quite often depended on reading the state of the machine when it died. One author, for example, fondly recalls his experience on a drum memory machine that used paper tape/flexowriter I/O. The machine had a speaker attached to the accumulator register so that one could hear his program run! It was possible to process very few student programs per day.},
journal = {SIGMICRO Newsl.},
month = {apr},
pages = {18–23},
numpages = {6}
}

@inproceedings{10.1145/3337722.3341823,
author = {Kayali, Fares and Luckner, Naemi and Purgathofer, Peter},
title = {Teaching gameful design},
year = {2019},
isbn = {9781450372176},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3337722.3341823},
doi = {10.1145/3337722.3341823},
abstract = {This paper discusses the course 'Gameful Design' held as part of the computer science master curriculum at Vienna University of Technology (TU Wien). We argue that the challenge of meaningfully teaching serious game design and gamification design is not solved by solely imparting design guidelines. It is a matter of conveying a method of how to engage with a real-world problem, how to ideate and explore, and how to iterate and reflect on gameful design. We describe the three methodological cornerstones the course is built on - research-based teaching, design thinking and explorative design - and outline the format of the course. From a relective practice perspective, we give structured tangible advice how to run such a course in the form of guidelines and we describe the impact it had on our own research.},
booktitle = {Proceedings of the 14th International Conference on the Foundations of Digital Games},
articleno = {62},
numpages = {4},
keywords = {design thinking, explo rative design, gameful design, research-based teaching},
location = {San Luis Obispo, California, USA},
series = {FDG '19}
}

@inproceedings{10.1145/2839509.2844666,
author = {Lewis, Mark C. and Blank, Douglas and Bruce, Kim and Osera, Peter-Michael},
title = {Uncommon Teaching Languages},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844666},
doi = {10.1145/2839509.2844666},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {492–493},
numpages = {2},
keywords = {cs1, cs2, programming-languages},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.1145/1067445.1067503,
author = {Casado, Martin and Watson, Gregory and McKeown, Nick},
title = {Teaching networking hardware},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067503},
doi = {10.1145/1067445.1067503},
abstract = {We present our experience with the design and teaching of a graduate-level networking hardware course in which students design and build an Internet router. Each team of two students (one proficient in hardware and one proficient in software) design and develop a fully functional router that routes live Internet traffic and inter-operates with other students' routers via a simple routing protocol. Hardware is designed in Verilog using an industry-standard design flow on a specially designed platform, called NetFPGA. Software is written in user-space using a high-level language. Software and hardware are combined and tested using real network traffic over arbitrary private topologies using a custom tool, called VNS. Our approach is distinguished in that both hardware and software can be designed, tested and deployed remotely over the Internet. Our goal is to give students experience in the design of complex networking systems. In our initial course offering in Spring 2004, all teams successfully implemented fully functional routers in less than ten weeks. We will pilot courses outside of Stanford using the remote teaching infrastructure presented in this paper.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {208–212},
numpages = {5},
keywords = {network internals, network project, pedagogy},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@article{10.1145/988938.988943,
author = {Jones, Bush},
title = {Teaching algorithm design},
year = {1979},
issue_date = {December 1979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/988938.988943},
doi = {10.1145/988938.988943},
journal = {SIGCSE Bull.},
month = {dec},
pages = {27–30},
numpages = {4}
}

@inproceedings{10.1145/3465631.3465864,
author = {Wang, Min and Wang, Fengze},
title = {Comparative Analysis of University Education Effect under the Traditional Teaching and Online Teaching Mode},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465864},
doi = {10.1145/3465631.3465864},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {193},
numpages = {6},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/2960310.2960348,
author = {Alse, Kavya},
title = {Teaching: Learning of Troubleshooting Skills for Computer Science Undergraduates},
year = {2016},
isbn = {9781450344494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2960310.2960348},
doi = {10.1145/2960310.2960348},
abstract = {Every CS graduate working with different technologies will need troubleshooting in one or other way. This document provides an overview of the research work I am pursuing on teaching troubleshooting skills. The focus of my thesis is building a learning environment for teaching troubleshooting in Computer Networks. At the end of my thesis, I intend to come up with some design principles for building learning environments in related domain. Both of these will be contributions for the CS education Research community.},
booktitle = {Proceedings of the 2016 ACM Conference on International Computing Education Research},
pages = {281–282},
numpages = {2},
keywords = {computer networks, design based research, thinking skill, troubleshooting skill},
location = {Melbourne, VIC, Australia},
series = {ICER '16}
}

@inproceedings{10.1145/3178158.3178185,
author = {Tong, Yanrong and Song, Pengbo},
title = {Research on blended teaching model in the teaching of 'micro-controller principles and applications'},
year = {2018},
isbn = {9781450353595},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3178158.3178185},
doi = {10.1145/3178158.3178185},
abstract = {Blended teaching model combines the advantages of traditional face-to-face teaching mode and web-based online teaching mode. It is an important research aspect of college teaching reform at present. The course of 'micro-controller principles and applications' is significantly important to be taken by the optoelectronic information science and engineering major. The course is both comprehensive and practical. The main aim of the course is to enhance students' learning initiative and the ability to apply the micro-controller. The paper discusses the method of applying blended teaching model into this course, and builds a 'Project based-learning, Collaborative learning, Flipped-classroom, Innovative Practice' four-in-one blended teaching model. This paper describes the design, implementation and results of the model, showing the benefits of these new teaching methods, which can improve student's motivation and enhance students' learning initiative and their ability to apply the micro-controller.},
booktitle = {Proceedings of the 6th International Conference on Information and Education Technology},
pages = {38–41},
numpages = {4},
keywords = {blended teaching mode, collaborative learning, flipped classroom, micro class, project based-learning},
location = {Osaka, Japan},
series = {ICIET '18}
}

@inproceedings{10.1145/1999747.1999887,
author = {Ben-Bassat Levy, Ronit and Vel\'{a}zquez Iturbide, J. Angel},
title = {A problem solving teaching guide based on a procedure intertwined with a teaching model},
year = {2011},
isbn = {9781450306973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1999747.1999887},
doi = {10.1145/1999747.1999887},
abstract = {The difficulties Computer Science (CS) students encounter with solving problems have been documented extensively. The literature in CS education (CSE) provides many successful ways to enhance students' performance in problem-solving. Nevertheless, those difficulties have been reported to persist. This has prompted us to develop a Problem-Solving Teaching Guide (PSTG) that emphasizes a structured teaching model. This PSTG was used by our undergraduate university instructors. We investigated its effect on students' performance and documented students' attitudes towards the PSTG.},
booktitle = {Proceedings of the 16th Annual Joint Conference on Innovation and Technology in Computer Science Education},
pages = {374},
numpages = {1},
keywords = {learning styles, problem solving},
location = {Darmstadt, Germany},
series = {ITiCSE '11}
}

@article{10.5555/771141.771180,
author = {Landram, Frank G.},
title = {Online teaching: say goodby to chat},
year = {2002},
issue_date = {October 2002},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {1},
issn = {1937-4771},
abstract = {Online teaching must be structured where students are on a specific timeline and feel they are in a "classroom" learning environment. This philosophy has evolved into meaning that online teaching requires a high interaction with students using e-mail and chat. This paper describes an online study in introductory statistics which used computer tutorial supplements and computer graded quizzes (over 25 quizzes) with immediate feedback to monitor the progress of students. This type of learning environment is modeled after certification programs conducted by corporations such as Microsoft and Novell. These programs are not limited by a large number of participants nor are they labor intense. Benefits from this study will include how to teach large online classes in a more efficient yet less time consuming manner.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {228–231},
numpages = {4}
}

@article{10.1145/989341.989352,
author = {Citron, Judith},
title = {Teaching Cobol: less listening, more doing},
year = {1984},
issue_date = {June 1984},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/989341.989352},
doi = {10.1145/989341.989352},
abstract = {COBOL courses have traditionally relied heavily on lectures. Research indicates, however, that lectures have little effect on problem solving ability which is the most taxing aspect of writing programs.This article describes an experimental course design for teaching COBOL, that stresses problem solving by more active involvement than lectures. Independent reading, followed by a consolidating lecture, then group tutorial work followed by program writing are integrated in a spiral fashion, each block building on the previous one, gradually combining syntax and semantics.The monitoring of the course showed that students found that tutorials prepared them well for coursework (writing complete COBOL programs) which was considered the most beneficial activity of the course. Tutorials were seen to expose the students to alternative solutions which is an essential ingredient of problem solving, although students could not always see the direct relevance of the tutorials to COBOL knowledge. Lectures it was felt could not be discarded altogether as they helped clarify the reading. The gradual build-up of knowledge integrated with practice was felt to be helpful.In summary, further development of courses along these lines was considered worthwhile to achieve the broader objectives of improved problem solving ability, team work, and a more motivating learning environment for the learning of COBOL, which lectures cannot achieve.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {42–47},
numpages = {6}
}

@article{10.1145/3101104,
author = {Gajendar, Uday},
title = {Teaching design online},
year = {2017},
issue_date = {July-August 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {4},
issn = {1072-5520},
url = {https://doi.org/10.1145/3101104},
doi = {10.1145/3101104},
journal = {Interactions},
month = {jun},
pages = {24–26},
numpages = {3}
}

@inproceedings{10.1145/2559206.2578872,
author = {Nitsche, Michael and Quitmeyer, Andrew and Farina, Kate and Zwaan, Samuel and Nam, Hye Yeon},
title = {Teaching digital craft},
year = {2014},
isbn = {9781450324748},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2559206.2578872},
doi = {10.1145/2559206.2578872},
abstract = {At the overlap of maker culture, ubiquitous computing, critical making, and novel interfaces, digital craft emerges as a new research and teaching domain. It offers new opportunities in interaction design but it also poses particular challenges to academic curricula. This paper first discusses the value and challenges connected to digital craft. Then, based on our experience with exploring digital craft in a research university's teaching environment, we highlight viable approaches and teaching practices in this new field. It closes with a discussion of the prototype results achieved in those classes.},
booktitle = {CHI '14 Extended Abstracts on Human Factors in Computing Systems},
pages = {719–730},
numpages = {12},
keywords = {craft, higher education, interaction design},
location = {Toronto, Ontario, Canada},
series = {CHI EA '14}
}

@article{10.1145/1024338.1024374,
author = {Carlson, David},
title = {Teaching computer security},
year = {2004},
issue_date = {June 2004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {36},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/1024338.1024374},
doi = {10.1145/1024338.1024374},
abstract = {This paper provides advice on how to create a first course on computer and network security. It is based on the author's teaching of such a course in a small college setting. The main emphasis is on a set of lab exercises that provide students with practical experience appropriate to the course.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {64–67},
numpages = {4},
keywords = {computer security, computer security labs, information technology security, network security, security}
}

@article{10.1145/292422.292444,
author = {O'Gorman, John},
title = {Teaching operating systems},
year = {1998},
issue_date = {June 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/292422.292444},
doi = {10.1145/292422.292444},
abstract = {This article surveys the motives for including operating systems in a computing course, and from these deduces the content of a module in operating systems, and how it should be taught. It suggests an approach involving theory, internals, and system services.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {61–63},
numpages = {3}
}

@article{10.1145/216218.216224,
author = {Overmars, Mark H.},
title = {Teaching computational geometry},
year = {1995},
issue_date = {Feb. 1995},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {1},
issn = {0097-8930},
url = {https://doi.org/10.1145/216218.216224},
doi = {10.1145/216218.216224},
abstract = {This paper describes a possible approach to teaching computational geometry to students. It gives a brief introduction in computational geometry, followed by three ways of treating the area: mathematically, algorithmically and application-oriented. Next a course outline is described, introducing computational geometry from an application-oriented point of view. Finally, some remarks are made about implementation issues.},
journal = {SIGGRAPH Comput. Graph.},
month = {feb},
pages = {18–22},
numpages = {5}
}

@inproceedings{10.1145/800038.801027,
author = {Moore, Freeman L.},
title = {Teaching microcoding principles},
year = {1983},
isbn = {0897910915},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800038.801027},
doi = {10.1145/800038.801027},
abstract = {Students are typically exposed to programming in various languages as part of their experience in computer science. Assembly language and hardware concepts are considered standard knowledge in addition to other related topics. Teaching firmware, the integration of hardware and software, is the subject of this paper. The need for teaching firmware is presented, followed by a description of a project assigned to students. Lastly, a discussion of the portability of the concepts learned is presented.},
booktitle = {Proceedings of the Fourteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {112–115},
numpages = {4},
location = {Orlando, Florida, USA},
series = {SIGCSE '83}
}

@inproceedings{10.1145/800066.801346,
author = {Kruse, Robert L.},
title = {On teaching recursion},
year = {1982},
isbn = {0897910672},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800066.801346},
doi = {10.1145/800066.801346},
abstract = {Tree diagrams can be fruitfully employed in elementary courses to illustrate recursion, explain its implementation, and motivate its applications in algorithm design. At the same time, tree diagrams can lead to guidelines to help the student decide when recursion is a good method, and when it should be avoided. This paper discusses these methods and, as an example, develops an algorithm for generating permutations.},
booktitle = {Proceedings of the Thirteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {92–96},
numpages = {5},
location = {Indianapolis, Indiana, USA},
series = {SIGCSE '82}
}

@inproceedings{10.1145/800126.809546,
author = {Appelbe, Bill},
title = {Teaching Compiler Development},
year = {1979},
isbn = {9781450374316},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800126.809546},
doi = {10.1145/800126.809546},
abstract = {Although a course in Compiler Development is common in both undergraduate and graduate computer science curriculum there has been little agreement on how to achieve a balance between theory and practice within a single semester course. This article proposes a new approach to teaching compiler development, to enable students to gain both the experience of writing a modular compiler and a theoretical background in compiler design, within the scope of a one semester course.The approach advocated is based upon the integration of the course project and the course lectures, enabling students to develop a modular compiler for a general purpose high level algorithmic language. The course project uses a simple parser generator and syntax-directed translation techniques to minimize the programming effort without oversimplifying the design of the compiler.The course was taught at Southern Methodist University to a senior undergraduate class, who developed and debugged useable compilers without the common symptom of major programming projects: programming to meet a deadline rather than a design.},
booktitle = {Proceedings of the Tenth SIGCSE Technical Symposium on Computer Science Education},
pages = {23–27},
numpages = {5},
series = {SIGCSE '79}
}

@inproceedings{10.1145/800284.811138,
author = {Adams, J. M.},
title = {Teaching declarative programming},
year = {1975},
isbn = {9781450373982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800284.811138},
doi = {10.1145/800284.811138},
abstract = {At the Conference on Programming Methodology in January 1974 at Albuquerque, New Mexico Prof. Edsger Dijkstra described a method of program development in which the imperative form of a program is developed from the assertions which form the correctness proof. In other words the declarative (or non-procedural) aspect of an algorithm guides its implementation into an imperative (or procedural) form. While extremely exciting, this methodology is rather alien to those with traditional training in the imperative method of program development. Since this encompasses almost everyone including most instructors and students, a problem arises in introducing the methodology into the standard computer science curriculum. This paper describes our approach to the problem at New Mexico State and the results.},
booktitle = {Proceedings of the Fifth SIGCSE Technical Symposium on Computer Science Education},
pages = {83–85},
numpages = {3},
series = {SIGCSE '75}
}

@inproceedings{10.1145/3482632.3483181,
author = {Wei, Wei and Feng, Kai and Li, Dapeng and Yu, Linying},
title = {Organic Integration of Information Technology and College English Teaching in English Information Teaching System},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3483181},
doi = {10.1145/3482632.3483181},
abstract = {With the more and more extensive use of network information technology in English teaching, the English teaching in colleges and universities is also constantly reformed, the organic integration of network electronic technology and school English teaching has become a key trend in the future English teaching, the English teaching mode has gradually changed from the on-campus English teaching mode to the electronic English teaching mode. On this basis, English teachers need to keep up with the pace of the times, the direction of organic integration of artificial intelligence education technology and English course teaching should be clarified, and the reform of English course education should be further carried out. According to the questionnaire results of students of different majors in a university, 42.42% of university students often use this system to study, 37.37% of university students sometimes use this system to study, and no university students do not use this system to study, indicating this system used by more students to learn English; 51% of students learn English to find a satisfactory job after graduation, and only 7% of college students learn English because they are interested in learning English, indicating that students recognize the importance of English but lack confidence in English learning.},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {1495–1499},
numpages = {5},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@inproceedings{10.1145/1384271.1384382,
author = {Caldeira, Carlos Pampulim},
title = {Teaching SQL: a case study},
year = {2008},
isbn = {9781605580784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1384271.1384382},
doi = {10.1145/1384271.1384382},
abstract = {In this poster we describe a class experiment focused on a different way of teaching SQL language. Classically students are introduced to SQL programming and start right way to write code lines. Based on my teaching experience this is not the ideal methodology. This poster presents a new approach for teaching SQL programming in the context of a Portuguese University: "in order to write first we have to be able to read". This case study - although in its first steps - clearly recognizes the potential benefits of this approach.},
booktitle = {Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {340},
numpages = {1},
keywords = {SQL, databases, programming, teaching methods},
location = {Madrid, Spain},
series = {ITiCSE '08}
}

@inproceedings{10.1145/169070.169098,
author = {Noyes, James L.},
title = {Teaching AI: a breadth-first approach},
year = {1993},
isbn = {0897915658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/169070.169098},
doi = {10.1145/169070.169098},
booktitle = {Proceedings of the Twenty-Fourth SIGCSE Technical Symposium on Computer Science Education},
pages = {33–37},
numpages = {5},
location = {Indianapolis, Indiana, USA},
series = {SIGCSE '93}
}

@inproceedings{10.1145/3545947.3569637,
author = {Holley, Buffie and Garcia, Dan and Bernd, Julia},
title = {Teaching Cybersecurity: Introducing the Security Mindset},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3569637},
doi = {10.1145/3545947.3569637},
abstract = {Cybersecurity is a growing job field--and even for students who don't go on to pursue cybersecurity careers, it is crucial to have some level of security awareness. But until recently, the intrigue and opportunity of cybersecurity was usually not introduced until advanced undergraduate CS courses. However, the real world implications and applied nature of the topic lends itself well to catching the interest of a diverse group of students in CS at a younger age.The Teaching Security lessons (available at teachingsecurity.org for free) introduce the foundational ideas of cybersecurity through threat modeling and exploring the human aspects of identity and authentication. They were prepared by subject-matter experts with research backgrounds in cybersecurity. Our lessons are appropriate for any high school or introductory undergrad computer science class or program, and no previous cybersecurity background or teaching experience is required for attendees.In the interactive workshop, we will model the Teaching Security lessons. Participants will learn how to begin developing the "security mindset" by teaching students a simplified version of threat modeling. We will also model lessons on authentication and social engineering. The workshop will also provide opportunities for attendees who have taught cybersecurity to share their own strategies.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1185},
numpages = {1},
keywords = {cybersecurity, high school computer science, human factors, lesson plans, threat modeling},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3452446.3452537,
author = {Fan, Chunyu and Liu, Jibin},
title = {An Analysis of Russian Language and Culture Teaching under the Information Mobile Teaching Platform},
year = {2021},
isbn = {9781450389815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3452446.3452537},
doi = {10.1145/3452446.3452537},
abstract = {The research on information technology and Russian language teaching is also in the stage of rapid development in China and Russia. Under the background of information technology, the study of Russian language and culture has become more and more the frontier and key topic of current Russian language teaching research. Under this background, the reform of foreign language teaching information becomes very urgent, and Russian teaching lags behind in the development of foreign language teaching. Therefore, this paper puts forward an analysis of Russian language and culture teaching under the information mobile teaching platform. In this paper, we study the characteristics and requirement of college Russian teaching, on the analysis of present situation and existing problems of Russian education informationization, determined on the basis of reform, development and basic principle, put forward some strategies of Russian education informatization reform, for education under the environment of informatization reform of classroom teaching of colleges and universities to provide a theoretical framework, to help students develop Russian comprehensive application ability. The study finds that the teaching mode of Russian language and culture under the information-based mobile teaching platform is not hindered by the time and space of the traditional teaching mode, realizing real-time teaching, effectively linking the classroom with teachers and students, and fully mobilizing students' enthusiasm and interest in learning.},
booktitle = {2021 2nd Asia-Pacific Conference on Image Processing, Electronics and Computers},
pages = {352–355},
numpages = {4},
keywords = {Information Technology, Russian Language and Culture, Teaching Platform, University Classroom},
location = {Dalian, China},
series = {IPEC2021}
}

@inproceedings{10.1145/237466.237659,
author = {Motil, John},
title = {Desktop teaching: on the students desk},
year = {1996},
isbn = {0897918444},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/237466.237659},
doi = {10.1145/237466.237659},
booktitle = {Proceedings of the 1st Conference on Integrating Technology into Computer Science Education},
pages = {231},
location = {Barcelona, Spain},
series = {ITiCSE '96}
}

@inproceedings{10.1145/3448748.3448988,
author = {Song, Bo and Sun, Yan and Guo, Junjie and Zhao, Dan and Tan, Jiayin},
title = {Application of case teaching method and Microteaching Method in experimental teaching based on wechat platform},
year = {2021},
isbn = {9781450390002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3448748.3448988},
doi = {10.1145/3448748.3448988},
abstract = {Case teaching method emphasizes taking students as the main body, guiding students to think with questions, strengthening the understanding and mastery of the knowledge, and has achieved good teaching effect in medical education. The Microteaching Method records the students' practice process through video equipment to improve the students' learning effect. Conventional case teaching method and Microteaching Method need face-to-face communication between teachers and students, which has the limitations of time and space. As a mobile learning platform, wechat can break through the limitation of teaching time and space, and realize the diversification of teaching methods. Through the beneficial complementation of wechat platform with case teaching method and Microteaching Method, it is found that in the application of laboratory teaching, it not only stimulates students' interest in learning, mobilizes students' learning enthusiasm, but also improves students' autonomous learning ability, comprehensive analysis ability and clinical thinking ability, which is worthy of promotion and application in laboratory practice teaching.},
booktitle = {Proceedings of the 2021 International Conference on Bioinformatics and Intelligent Computing},
pages = {407–411},
numpages = {5},
keywords = {Medical Laboratory, Microteaching Method, case teaching method, wechat platform},
location = {<conf-loc>, <city>Harbin</city>, <country>China</country>, </conf-loc>},
series = {BIC 2021}
}

@inproceedings{10.1145/3348445.3348487,
author = {Yang, Rui and Chen, Hongyi and He, Chun},
title = {Study on the reform of integrating project teaching method into the teaching of C programming},
year = {2019},
isbn = {9781450371957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3348445.3348487},
doi = {10.1145/3348445.3348487},
abstract = {In order to meet the new teaching requirements of programming courses and improve students' practical programming ability, the actual practice projects will run through the course 'C programming', which is conducive to students' basic knowledge and students' learning interest.},
booktitle = {Proceedings of the 7th International Conference on Computer and Communications Management},
pages = {53–57},
numpages = {5},
keywords = {Actual practice, C program design, Project teaching, Reform},
location = {Bangkok, Thailand},
series = {ICCCM '19}
}

@inproceedings{10.1145/3474995.3475007,
author = {Xu, Lin and Huang, Zhixing and Chen, Jiaxiao},
title = {Research and Design on the Mixed Teaching Mode of Auditing Course: ——Based on Constructivism Theory and Scaffolding Teaching Method},
year = {2021},
isbn = {9781450390033},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3474995.3475007},
doi = {10.1145/3474995.3475007},
abstract = {The Auditing Course has the characteristics of strong professional theoretical knowledge and meticulous logical system, rich practical content and strong comprehensiveness. It is difficult to cultivate high-quality innovative talents who can adapt to the changes of social and economic environment and the actual needs of enterprises by the traditional “full house” teaching method. Based on combing the learning theory and teaching method of hybrid teaching, this paper reconstructs the teaching content and method of audit course with constructivism theory and scaffolding teaching method, puts forward the implementation process of hybrid teaching, and illustrates the practical application of Scaffolding Teaching Method with examples.},
booktitle = {Proceedings of the 2021 6th International Conference on Distance Education and Learning},
pages = {65–69},
numpages = {5},
keywords = {Auditing Course, constructivism theory, mixed teaching mode, scaffolding teaching method},
location = {Shanghai, China},
series = {ICDEL '21}
}

@inproceedings{10.1145/2425936.2425938,
author = {Bruegge, Bernd and Krusche, Stephan and Wagner, Martin},
title = {Teaching Tornado: from communication models to releases},
year = {2012},
isbn = {9781450318129},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2425936.2425938},
doi = {10.1145/2425936.2425938},
abstract = {In this paper we describe Tornado, which we teach in our software engineering project courses. Tornado is a new process model that combines the Unified Process with Scrum elements.The Tornado model focuses on scenario-based design starting with visionary scenarios funneling down to demo scenarios. Tornado offers models for a broad range of activities. In addition to formal models used for analysis and design, Tornado encourages the developer to use informal models as communication medium for the interaction with the customer and end user. These communication models can be used as the basis of early releases to increase the feedback from customer to developer. We argue that the combination of informal modeling and release management can be introduced early in software engineering project courses.We describe a case study in which we demonstrate the use of communication models and release management in a multi-customer course with 80 students. In three months, the students produced 163 releases for 11 customers.},
booktitle = {Proceedings of the 8th Edition of the Educators' Symposium},
pages = {5–12},
numpages = {8},
keywords = {Scrum, agile techniques, continuous integration, executable prototypes, extreme programming, informal modeling, project courses, prototyping, release management, scenario-based design, software engineering education, unified process},
location = {Innsbruck, Austria},
series = {EduSymp '12}
}

@inproceedings{10.1145/325644.325666,
author = {Bailey, John},
title = {Teaching Ada: a comparison of two approaches},
year = {1984},
isbn = {9781450373197},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/325644.325666},
doi = {10.1145/325644.325666},
booktitle = {Proceedings of the 1st Annual Washington Ada Symposium on Ada Acquisition Management: Both Sides of the Coin},
pages = {63–70},
numpages = {8},
location = {Laurel, Maryland, USA},
series = {WADAS '84}
}

@inproceedings{10.1145/3197091.3197120,
author = {Lamprou, Anna and Repenning, Alexander},
title = {Teaching how to teach computational thinking},
year = {2018},
isbn = {9781450357074},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3197091.3197120},
doi = {10.1145/3197091.3197120},
abstract = {Computational Thinking is argued to be an essential skill for the workforce of the 21st century. As a skill, Computational Thinking should be taught in all schools, employing computational ideas integrated into other disciplines. Up until now, questions about how Computational Thinking can be effectively taught have been underexplored preventing efforts to cross the large gap between early adopters and the early majority, conceptualized as the Computer Science Education chasm. A promising strategy to cross the chasm is underway in Switzerland. Switzerland recently introduced a national curriculum, called Lehrplan 21, mandating Computer Science Education. This mandate requires the Computer Science education of elementary and middle school students. In 2017, the School of Education of Northwestern Switzerland (PH FHNW), introduced a mandatory pre-service teacher Computer Science Education course, to satisfy this mandate. All the PH FHNW students who study to become elementary school teachers must pass this two-semester course. The first part of this course was taught for the first time in fall of 2017. This paper presents the philosophy of this course and an initial analysis of both qualitative data capturing the students’ perceptions of Computational Thinking and quantitative data describing shifts in students’ skills and attitudes as effect sizes. The data suggest that it is possible to teach a basic understanding of programming to non-self-selected pre-service elementary school teachers.},
booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
pages = {69–74},
numpages = {6},
keywords = {Computational Thinking, Computer Science Education, K-12 education, Pre-service teacher, Primary school},
location = {Larnaca, Cyprus},
series = {ITiCSE 2018}
}

@article{10.1145/1644136.1653246,
author = {Knipe, Sally and Edwards, Miriam},
title = {Teaching Teachers to Use Blended Learning},
year = {2009},
issue_date = {November 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2009},
number = {11},
url = {https://doi.org/10.1145/1644136.1653246},
doi = {10.1145/1644136.1653246},
abstract = {Blended learning focuses on what students do and how teachers support the learning process. At Charles Sturt University, Australia, first-year undergraduate preservice teachers use blended learning in their own education as they become more familiar with the physical, emotional, social, and cultural aspects of the early adolescents they will soon teach.},
journal = {ELearn},
month = {nov},
articleno = {3}
}

@inproceedings{10.1145/2528908.2528913,
author = {Murphy, Diane R. and Murphy, Richard H.},
title = {Teaching Cybersecurity: Protecting the Business Environment},
year = {2013},
isbn = {9781450325479},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2528908.2528913},
doi = {10.1145/2528908.2528913},
abstract = {Traditional computer security has focused on protection against known threats, largely from outsider attacks. The number of cybersecurity incidents affecting businesses of all sizes demonstrates that our current cybersecurity posture is not entirely successful and that businesses are slowly moving from a risk avoidance stance to a risk mitigation strategy. The business world is changing and few businesses are able to easily protect their assets within a known business perimeter, particularly with inevitable budget constraints. Technology changes such as cloud computing, e-business, teleworking and bring-your-own device (BYOD) increase the potential for vulnerabilities from attacks to the business information technology infrastructure throughout the supply chain. In addition, business changes such as global suppliers, outsourcing and offshoring, and the need to cut costs in all aspects of manufacturing and operations are creating new vulnerabilities. To respond to these changes, businesses must consider cybersecurity strategies that are not focused primarily on firewall and encryption techniques, as threats are increasing from "trusted sources" including employees, customers, partners and suppliers. Supply chain security is an important consideration that is not covered in most cybersecurity educational programs. This paper addresses the need for a wider perspective on cybersecurity and the increasing need for educational programs that address this issue.},
booktitle = {Proceedings of the 2013 on InfoSecCD '13: Information Security Curriculum Development Conference},
pages = {88–93},
numpages = {6},
keywords = {Risk management, cybersecurity education, supply chain security},
location = {Kennesaw GA, USA},
series = {InfoSecCD '13}
}

@inproceedings{10.1145/3606150.3606172,
author = {Liu, Ke and Su, Lifang},
title = {Enabling science and technology: curriculum teaching experiment in vocational colleges based on STEAM teaching concept},
year = {2023},
isbn = {9798400707353},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3606150.3606172},
doi = {10.1145/3606150.3606172},
abstract = {STEAM teaching concept is a teaching concept with successful precedents. In the teaching experiment of the STEAM teaching concept course in vocational colleges, it has a certain effect on students' mastering knowledge and skills, increasing their ability to solve problems across disciplines, and improving their interest in learning. The course teaching adopted by STEAM teaching concept and the adoption of new media technology are relatively common, which can improve the active atmosphere of classroom teaching and improve students' interest in learning. In the course of the experiment, it was also found that the teaching classroom with STEAM teaching concept was helpful to promote the innovation of teaching mode.},
booktitle = {Proceedings of the 2023 9th International Conference on Frontiers of Educational Technologies},
pages = {133–138},
numpages = {6},
keywords = {STEAM teaching concept, artificial intelligence, classroom teaching, vocational colleges},
location = {<conf-loc>, <city>Bali</city>, <country>Indonesia</country>, </conf-loc>},
series = {ICFET '23}
}

@inproceedings{10.1145/3489410.3489435,
author = {Bourgos, Nikolaos and Chroni, Aigli and Kounalaki, Maria and Papadopoulou, Eirini and Skarmitzos, Alexandros and Triantafilli, Aggeliki and Zagota, Iro and Sintoris, Christos and Avouris, Nikolaos},
title = {On evaluating online teaching and learning experience: A usability evaluation study of synchronous teaching platforms},
year = {2021},
isbn = {9781450385787},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3489410.3489435},
doi = {10.1145/3489410.3489435},
abstract = {Online teaching and learning became everyday practice during the Covid-19 pandemic in education worldwide. There is a strong belief that it will remain part of common practice even in post-pandemic times. Therefore, it is important to systematically measure the user experience from the perspective of key stakeholders. In this paper, we report findings of a large scale multi-faceted usability evaluation study of tools widely used for synchronous online teaching and learning (Zoom vs competitors). The study was conducted by three independent groups of experts, who are presenting the results of the study and an analysis of the findings in this paper. The experts performed a comparative evaluation of Zoom alongside other tools used for online synchronous teaching and triangulated the findings of the study using alternative evaluation methods (personas, heuristics, interviews, etc.). The study highlights the findings of the three evaluation studies and produces a list of suggestions for improvements of the Zoom online teaching/learning platform. We also discuss the contribution of different evaluation methods in the final recommendations.},
booktitle = {CHI Greece 2021: 1st International Conference of the ACM Greek SIGCHI Chapter},
articleno = {25},
numpages = {7},
keywords = {datasets, gaze detection, neural networks, text tagging},
location = {Online (Athens, Greece), Greece},
series = {CHI Greece 2021}
}

@article{10.5555/1619221.1619226,
author = {Wolffe, Greg and Trefftz, Christian},
title = {Teaching parallel computing: new possibilities},
year = {2009},
issue_date = {October 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {1},
issn = {1937-4771},
abstract = {Many universities and colleges offer a course on Parallel Computing, typically as an undergraduate elective. Given the "leading edge" nature of the topic, it is not unusual for the content of this course to change. But recent technological advances and market forces, such as advanced graphics chips and middleware platforms, have dramatically expanded the possibilities and paradigms available to instructors. These same market forces have greatly amplified the need for undergraduates to be exposed to parallel computing concepts. In this paper, we offer a curriculum framework to assist instructors in designing a course in Parallel Computing, or in introducing parallelism concepts into other courses in the curriculum.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {21–28},
numpages = {8}
}

@inproceedings{10.1145/3608218.3608235,
author = {Jing, Shan and Zhao, Chuan and Guo, Lei and Tian, Yang},
title = {Application of case-based PBL teaching method in the teaching of Network and Service Engineering},
year = {2023},
isbn = {9798400708220},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3608218.3608235},
doi = {10.1145/3608218.3608235},
abstract = {The course is guided by the goal of cultivating builders for a strong cyber country. In response to issues such as low teaching goal positioning, difficulty in adapting teaching methods to the cultivation of professional talents in the new era, and an outdated teaching quality evaluation mechanism, the course has established teaching goals for cultivating network technology talents with sustainable competitiveness, constructed a closed-loop course organization and ideological infiltration path based on case-based PBL teaching method, and created a diversified evaluation system oriented towards the process through multi-fusion and multi-integration. A mixed online and offline teaching approach is used to implement innovation in teaching concepts, methods, and evaluation systems. The practice has shown that students' scientific and technological innovation ability has been continuously strengthened, and their cognitive ability, initiative, and executive ability for sustainable competitiveness to adapt to rapid technological development and change have significantly improved. The teaching team has communicated and promoted the experiences through conference reports, visits to colleges and universities, and online seminars with over 20 domestic universities, achieving a good demonstration and leading effect.},
booktitle = {Proceedings of the 2023 6th International Conference on Big Data and Education},
pages = {33–40},
numpages = {8},
keywords = {Network and Service Engineering, case-based PBL teaching, diversified evaluation, sustainable competitiveness},
location = {<conf-loc>, <city>Jinan</city>, <country>China</country>, </conf-loc>},
series = {ICBDE '23}
}

@inproceedings{10.1145/3456887.3456958,
author = {Song, Lingan},
title = {Practical Exploration of Micro-lecture Teaching in the Teaching of Automobile Marketing and Service Specialty},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3456958},
doi = {10.1145/3456887.3456958},
abstract = {With the express development of the Internet and information technology, micro-lecture, as a new teaching model, have gradually entered classroom teaching activities. Micro-lecture is an emerging teaching method with video as the carrier and teaching as the main content. According to the students of higher vocational colleges characteristic, the practical application of micro-lecture teaching in automobile marketing and service teaching has great space. This article attempts to start from the concept and main characteristics of the micro-lecture, combine the micro-lecture with the related courses of automobile marketing and service in higher vocational colleges, and analyze the teaching application value of the micro-lecture in the specific teaching practice of automobile marketing and service, and the existing problems, we look forward to providing reference and reference for the teaching reform of automobile marketing and service.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {319–322},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/2797433.2797473,
author = {Scepanovic, Snezana and Beus-Dukic, Ljerka},
title = {Teaching Requirements Engineering: EUROWEB experience},
year = {2015},
isbn = {9781450333931},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2797433.2797473},
doi = {10.1145/2797433.2797473},
abstract = {In this paper, we describe the results of cooperation between University of Westminster (UK) and Mediterranean University (Montenegro) in the development of a curriculum for teaching Requirements Engineering (RE). RE is traditionally taught in academia using an RE process which starts from a well-defined problem. Our approach focuses on the early stages of requirements discovery, where students have to learn both about the application domain and about what stakeholders think is the problem. We share our experiences gained through teaching RE to several student cohorts in both institutions and discuss some of the advantages and disadvantages of our approach.},
booktitle = {Proceedings of the 2015 European Conference on Software Architecture Workshops},
articleno = {38},
numpages = {5},
keywords = {Requirements Engineering education, Scrum, agile software development},
location = {Dubrovnik, Cavtat, Croatia},
series = {ECSAW '15}
}

@inproceedings{10.1145/1953163.1953313,
author = {Jones, Mary Elizabeth "M.E." and Kisthardt, Melanie and Cooper, Marie A.},
title = {Interdisciplinary teaching: introductory programming via creative writing},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953313},
doi = {10.1145/1953163.1953313},
abstract = {Seizing and retaining student interest in programming is a difficult task. Many students find programming to be a dry and tedious task doable only by students gifted with strong analytical skills. Teaching introductory programming via creative writing begins by connecting the planning, organizing, and detailing of writing a story to the programming process. Creative concepts are taught first and then connected to an equivalent programming concept. Group-oriented activities using art, "Mad-Libs"", "Potato Heads"", and "Legos"" allow students to actively make the connections among the creative concepts, analytical concepts, and programming skills. Students work in pairs. Student pairings are assigned by matching a student with analytical tendencies with a student majoring in one of the humanities disciplines. The pairs apply the concepts and skills by creating stories, designing an animation, and implementing the animation using the Alice programming system. This research recognizes the creative nature of programming, invites students who would not consider studying programming to potentially identify an unrecognized talent, and attempts to develop a new approach for teaching introductory programming. This research and teaching is sponsored by a NSF Grant [11].},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {523–528},
numpages = {6},
keywords = {alice programming, collaboration, creative writing, interdisciplinary teaching, introductory programming, national science foundation, pair programming, pedagogy},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/3456887.3459701,
author = {Zheng, Qing and Zhao, Yan},
title = {Research on Vocal Music Teaching Mode of Preschool Education Major Based on Information Teaching Method},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3459701},
doi = {10.1145/3456887.3459701},
abstract = {As a compulsory course for preschool education majors, vocal music teaching is not only the learning basis of other courses, but also an auxiliary tool for future teaching work. The development of information technology provides students with a more comprehensive opportunity to learn vocal music knowledge. We should find appropriate ways to reform the current vocal music teaching methods through constant attempts. Therefore, it is necessary to carry out vocal music education scientifically and effectively in preschool education, which can effectively improve students' artistic ability, and the application of information technology can make this goal better realized, meet the teaching needs better, and promote the development of vocal music education in preschool education.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {1462–1466},
numpages = {5},
keywords = {Informatization teaching, Pre-school education, Vocal music teaching},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3408877.3432372,
author = {Lane, Audra and Mekonnen, Ruth and Jang, Catherine and Chen, Phoebe and Lewis, Colleen M.},
title = {Motivating Literature and Evaluation of the Teaching Practices Game: Preparing Teaching Assistants to Promote Inclusivity},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432372},
doi = {10.1145/3408877.3432372},
abstract = {In the US, there are longstanding patterns of underrepresentation in computing (see Table 1). To make CS more inclusive, we can train computer science (CS) teaching assistants (TAs) to create inclusive classrooms. The Teaching Practices Game is a scenario-based card game meant to prepare CS TAs for difficult situations they may encounter and help them promote diversity and inclusion. Game participants (N=86) were surveyed from multiple institutions. The majority of survey respondents (N=86) agreed or strongly agreed that the game taught them new strategies for responding to difficult teaching situations (83%) and for discussing diversity and inclusion (69%). Additionally, respondents reported that the game made them more confident (74%) and more likely (66%) to respond to biased statements. Contrary to our hypotheses, we found that there were small and statistically insignificant differences in enjoyment, learning, or likelihood of response to biased statements between participants who do and do not identify as underrepresented in CS. A primary contribution of the research is a review of professional development practices and diversity training strategies that can inform the training of TAs, and we discuss the extent to which best practices from previous research were incorporated in the game.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {816–822},
numpages = {7},
keywords = {diversity, microaggressions, professional development, stereotypes},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/2948076.2948079,
author = {Winter, Jeff and Sharp, Linda},
title = {Teaching PD: learning from a small industrial project},
year = {2016},
isbn = {9781450341363},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2948076.2948079},
doi = {10.1145/2948076.2948079},
abstract = {In this paper we reflect on teaching PD, in an experience report of a student project taking place in an industrial context. The paper contributes to discussions in the PD community about how PD is, and could be, taught. It looks at what happened in the project, and issues that arose, from the point of view of the students and the company. It looks at the way in which uncertainty and power relations have played a role in the project, and how the students have been affected by them. It discusses the importance of the co-design that took place, mainly around prototyping, and the difficulties students experienced when working with PD methods. It looks at the importance of the roles involved in the project. We end with important points for discussion concerning teaching PD.},
booktitle = {Proceedings of the 14th Participatory Design Conference: Short Papers, Interactive Exhibitions, Workshops - Volume 2},
pages = {33–36},
numpages = {4},
keywords = {education, industrial research, methods, participatory design, projects, prototyping, students, teaching, uncertainty},
location = {Aarhus, Denmark},
series = {PDC '16}
}

@article{10.1145/1719292.1734043,
author = {Schank, Roger C.},
title = {Teaching Diagnosis: What Do People Need to Learn?},
year = {2010},
issue_date = {February 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2010},
number = {2},
url = {https://doi.org/10.1145/1719292.1734043},
doi = {10.1145/1719292.1734043},
abstract = {What do people need to learn? Every curriculum committee and every training organization has at one time or another convened a committee to answer this question. Their answers are always given in terms of subjects: "more math," "telecommunication," "risk management," "company policies." But subject matter is far less important in learning than you think.},
journal = {ELearn},
month = {feb},
articleno = {7}
}

@inproceedings{10.1145/282991.283003,
author = {Astrachan, Owen},
title = {Concrete teaching: hooks and props as instructional technology},
year = {1998},
isbn = {1581130007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/282991.283003},
doi = {10.1145/282991.283003},
abstract = {Hooks and props are mental or physical images used in the classroom which help students as they learn new topics. Concrete and constructive teaching are essential in introductory programming courses. In this paper we discuss active teaching and some ideas using physical props and images that in our experience have enhanced the teaching and learning process.},
booktitle = {Proceedings of the 6th Annual Conference on the Teaching of Computing and the 3rd Annual Conference on Integrating Technology into Computer Science Education: Changing the Delivery of Computer Science Education},
pages = {21–24},
numpages = {4},
keywords = {C++, Java, active learning, active teaching, introductory computer science, pointers},
location = {Dublin City Univ., Ireland},
series = {ITiCSE '98}
}

@article{10.1145/989314.989318,
author = {Bell, D. H. and Simpson, D.},
title = {Teaching parallelism: the use of a case study},
year = {1982},
issue_date = {June 1982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/989314.989318},
doi = {10.1145/989314.989318},
journal = {SIGCSE Bull.},
month = {jun},
pages = {26–31},
numpages = {6}
}

@inproceedings{10.1145/3411764.3445198,
author = {Falk, Jeanette and Kannabiran, Gopinaath and Hansen, Nicolai Brodersen},
title = {What Do Hackathons Do? Understanding Participation in Hackathons Through Program Theory Analysis},
year = {2021},
isbn = {9781450380966},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3411764.3445198},
doi = {10.1145/3411764.3445198},
abstract = {Hackathons are increasingly embraced across diverse sectors as a way of democratizing the design of technology. Several attempts have been made to redefine the format and desired end goal of hackathons in recent years thereby warranting closer methodological scrutiny. In this paper, we apply program theory to analyze the processes and effects of 16 hackathon case studies through published research literature. Building upon existing research on hackathons, our work offers a critical perspective examining the methodological validity of hackathons and exemplifies how specific processes for organizing hackathons are modified for different purposes. Our main contribution is a program theory analysis of hackathon formats that provides an exploration and juxtaposition of 16 case studies in terms of causal relations between the input, process and the effects of hackathons. Our cataloguing of examples can serve as an inspirational planning resource for future organizers of hackathons.},
booktitle = {Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems},
articleno = {147},
numpages = {16},
keywords = {hackathons, participatory design, program theory, research methods},
location = {<conf-loc>, <city>Yokohama</city>, <country>Japan</country>, </conf-loc>},
series = {CHI '21}
}

@inproceedings{10.1145/3456565.3460040,
author = {Bosk, Daniel and Glassey, Richard},
title = {When Flying Blind, Bring a Co-pilot: Informal Peer Observation and Cooperative Teaching During Remote Teaching},
year = {2021},
isbn = {9781450383974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456565.3460040},
doi = {10.1145/3456565.3460040},
abstract = {The shift to meeting students online has made traditional forms of interaction difficult or impossible to replicate. In response, we suggest that teachers become co-pilots for each other: joining lectures and extending the abilities of a solo teacher. By doing so, there are clear and distinct benefits for students, the teacher, and the co-pilot, with almost no barrier to entry and very little preparation required. Whilst there is a time cost, we feel this is well spent and acts as a gateway to more established pedagogical practices, such as peer observation and cooperative teaching.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {611–612},
numpages = {2},
keywords = {co-teaching, collaborative teaching, online teaching},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/2526968.2526981,
author = {Patitsas, Elizabeth},
title = {A case study of the development of CS teaching assistants and their experiences with team teaching},
year = {2013},
isbn = {9781450324823},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2526968.2526981},
doi = {10.1145/2526968.2526981},
abstract = {Teaching assistants play a vital role in lab-based teaching at large institutions, with a large impact on students' success in CS1. How do TAs develop as teachers? We extended existing models of teacher development for our context of teaching CS labs in pairs. We found practice, teaching multiple courses, mentoring, effective staff meetings, team teaching, and feedback all contributed to TAs' development. Team teaching was a positive experience for our TAs, and allowed them to learn from each other. While teaching labs, TAs learnt mostly from partners who had more course-specific experience, rather than general teaching experience.},
booktitle = {Proceedings of the 13th Koli Calling International Conference on Computing Education Research},
pages = {115–124},
numpages = {10},
keywords = {computer science education, labs, teaching assistants},
location = {Koli, Finland},
series = {Koli Calling '13}
}

@inproceedings{10.1145/3478432.3499189,
author = {Siegel, Angela A. and Zarb, Mark},
title = {Capturing Lessons Learned from Pandemic Adaptations in CS Teaching: Exploring how COVID-19 has Affected the Future of Teaching and Learning in Computer Science},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499189},
doi = {10.1145/3478432.3499189},
abstract = {Throughout the COVID-19 pandemic, computing instructors have adapted their teaching to meet the needs of students in this ever-changing paradigm. These adaptations include the acquisition of new infrastructure, evolving expectations, revised course development strategies and the adoption of new modes of course delivery. Last year, an ITiCSE Working Group, led by Siegel and Zarb, explored the ways in which higher education computing faculty responded to this dramatic shift in the (educational) world [1]. Based on a survey of computing faculty worldwide, the work explored what the academic landscape might look like beyond the impacts of COVID-19. We will explore these results and discuss lessons learned along with the evolution that has taken place since the survey data was collected. Recognizing that it is unlikely that we return completely to pre-pandemic norms, our goal is to identify practices within computing that have newly formed or improved throughout the pandemic, giving extra weight to those that we might hope to keep as we move into a post-pandemic future.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1193},
numpages = {1},
keywords = {covid, higher education, pedagogy},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@article{10.1145/1473195.1473232,
author = {Edmondson, Carol},
title = {Teaching tales: some student perceptions of computing education},
year = {2008},
issue_date = {December 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/1473195.1473232},
doi = {10.1145/1473195.1473232},
abstract = {Student perceptions of the educational experiences that are provided to them at tertiary institutions do not necessarily match the perceptions of the academics who provide these educational experiences. Mismatches between student perceptions and academic perceptions can adversely affect student learning as well as lead to mutually frustrating encounters between students and academics. This paper presents a selection of nine true teaching tales. Each of the tales recounts an experience which allowed the author to perceive a situation from the student point of view. The paper then discusses the importance of student perceptions in computing courses.},
journal = {SIGCSE Bull.},
month = {nov},
pages = {103–106},
numpages = {4},
keywords = {computing education, first year programming, humour, student perceptions}
}

@inproceedings{10.1145/2899415.2899421,
author = {McGowan, Aidan and Hanna, Philip and Anderson, Neil},
title = {Teaching Programming: Understanding Lecture Capture YouTube Analytics},
year = {2016},
isbn = {9781450342315},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2899415.2899421},
doi = {10.1145/2899415.2899421},
abstract = {The proliferation in the use of video lecture capture in universities worldwide presents an opportunity to analyse video watching patterns in an attempt to quantify and qualify how students engage and learn with the videos. It also presents an opportunity to investigate if there are similar student learning patterns during the equivalent physical lecture. The goal of this action based research project was to capture and quantitatively analyse the viewing behaviours and patterns of a series of video lecture captures across several university Java programming modules. It sought to study if a quantitative analysis of viewing behaviours of Lecture Capture videos coupled with a qualitative evaluation from the students and lecturers could be correlated to provide generalised patterns that could then be used to understand the learning experience of students during videos and potentially face to face lectures and, thereby, present opportunities to reflectively enhance lecturer performance and the students' overall learning experience. The report establishes a baseline understanding of the analytics of videos of several commonly used pedagogical teaching methods used in the delivery of programming courses. It reflects on possible concurrences within live lecture delivery with the potential to inform and improve lecturing performance.},
booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {35–40},
numpages = {6},
keywords = {java, programming, video lecture capture, youtube analytics},
location = {Arequipa, Peru},
series = {ITiCSE '16}
}

@inproceedings{10.1145/3456887.3457028,
author = {Jing, Qiqi and Qi, Chunhong},
title = {A Study into the Setting and Teaching Methods of “Chinese Classroom Teaching Method” for MTCSOL Course},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457028},
doi = {10.1145/3456887.3457028},
abstract = {The “Full-time MTCSOL Professional Degree Graduate Instructive Training Program Training Program” stipulates that there are three types of MTCSOL curriculum settings: core courses, extended courses, and training courses. In the MTCSOL curriculum system of Yunnan Normal University, the Chinese classroom teaching method is the core compulsory course of the degree and has a very important position. However, there are very few special studies on this course at present, so it is necessary to conduct in-depth research on this. This paper investigates and analyzes the Chinese classroom teaching method from the perspective of course evaluation, adopts the course evaluation method that combines quantitative evaluation and qualitative evaluation, and uses questionnaire survey method, classroom observation method, and interview method as research methods. First, design the scale, analyze the reliability and validity, and then discover the problems in the curriculum based on the results of statistical analysis. After that, we combine classroom observations and interviews to explore the causes of the problems, and then propose solutions and suggestions for curriculum improvement, in order to help improve the curriculum.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {627–634},
numpages = {8},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3456887.3456941,
author = {Tang, Lang},
title = {Exploration and Analysis of Interactive Teaching Mode of Legal Basic Courses Oriented by OBE Teaching Concept},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3456941},
doi = {10.1145/3456887.3456941},
abstract = {Through OBE teaching philosophy-oriented learning, students can master the basic knowledge and theories of law, be familiar with the basic processes and methods, understand the relevant policies, laws and regulations, and promote the overall development of students. In order to help college students achieve the goal orientation of curriculum learning effects, the OBE teaching philosophy and achievement orientation are introduced into the teaching reform. It is hoped that after the active implementation from the goal to the reverse design of teaching and from teaching to evaluation, the status of students in the discipline will be strengthened. First, the first part analyzes the main problems existing in the interactive teaching of basic legal courses at this stage and the importance of the interactive teaching mode for students to adopt the OBE teaching philosophy-oriented legal basic courses. Secondly, it discusses the important meaning of interactive teaching mode. . That is, the education of basic legal courses for contemporary college students is the need of quality education in colleges and universities in the new era; it is an effective way to improve their physical and mental quality. Strengthening the psychological self-legal awareness has great practical significance for the improvement of the personality of college students and the growth of college students. The experimental research results show that this article applies the OBE educational concept to the interactive teaching process of basic legal courses, which is reflected in the four links of curriculum positioning, systematic decomposition of work, teaching design and curriculum evaluation, so as to achieve the goal and curriculum positioning more accurately.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {244–247},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3456887.3459718,
author = {Jiang, Wang},
title = {Research on the Construction of College English Teaching Platform and Teaching Mode Based on Demand Analysis},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3459718},
doi = {10.1145/3456887.3459718},
abstract = {In modern college English teaching, we usually use a top-down teaching model. This neglects the feelings and needs of college students in learning English, which makes them less motivated or unable to apply what they have learned. Because of this, the construction of a college English teaching platform based on needs analysis can give full play to its role, based on the combination of its teaching platform and its traditional teaching methods, and seek new teaching models. This article is based on demand analysis theory. The test was conducted with 300 English majors from two applied technology-based universities in the east coast and used questionnaires to investigate their English needs. This study uses questionnaires to investigate the needs of English curriculum settings and English learning goals. , English learning extracurricular needs, English learning tools, English learning strategies, English classroom teaching models and methods, English curriculum evaluation system needs, etc. The results show that it is necessary to set up college English courses, but the teaching method is single, student participation is low, and the courses cannot meet their needs. The demand for professional English is significantly higher than academic English.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {1549–1552},
numpages = {4},
keywords = {Demand analysis, English teaching mode, teaching platform, university English},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3456887.3457011,
author = {Li, Qi and liu, Ying and Wang, Yue},
title = {Reform of Public Physical Education Teaching Mode in Colleges and Universities Based on PBL Teaching Concept},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457011},
doi = {10.1145/3456887.3457011},
abstract = {PBL teaching concept is a question-based teaching method that emphasizes the active learning of students, and also pays attention to the cooperation and communication between students. It is used to cultivate students' autonomous learning ability. Teachers should change from “the leader” to “the guide” to guide students to find problems and learn independently. The purpose of this paper is to reform college PHYSICAL education based on PBL teaching concept. Based on a comparative survey of 69 English majors in Jiaotong University, this paper selects two research objects, namely PBL teaching class (N=36) and traditional teaching class (N=33).PBL teaching class adopts the teaching method under the guidance of PBL teaching philosophy to teach students the public physical education curriculum, while traditional teaching class only adopts the general teaching mode, with teachers leading students' learning. At the end of the experiment, the students' active degree in class and their degree of knowledge mastery were investigated and analyzed. The experimental results show that the PBL class has a higher level of class activity and knowledge mastery than the traditional class. It can be seen that PBL teaching concept is of great importance to the reform of public physical education teaching mode in colleges and universities.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {551–554},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3452446.3452683,
author = {Zhang, Liying},
title = {The Effect Evaluation of Flipped Classroom in College English Translation Teaching under the Blended Teaching Mode},
year = {2021},
isbn = {9781450389815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3452446.3452683},
doi = {10.1145/3452446.3452683},
abstract = {In recent decades, the reform of College English translation teaching (CETT) in China is mainly in view of the theoretical knowledge of predecessors. Nowadays, there are many problems in College English classroom translation teaching, such as single teaching method (classroom teaching as the main method, practice as the auxiliary). In various fields of English learning, including listening, speaking, reading and writing, the theoretical and empirical research of blended learning mode has been gradually improved. Therefore, how to create a clear and efficient classroom and change the teaching mode of College English translation scientifically and reasonably has become an important teaching topic for teachers. This paper holds that the teaching of English translation in the digital age should also be reformed. The application of blended teaching mode in CETT can fully stimulate students' enthusiasm, prolong learning time and improve classroom efficiency. The results show that 75.2% of students and teachers are satisfied with the FC, and the application prospect of flipped classroom (FC) is very broad. The aim of this article is to explore how to apply this new teaching method to CETT, so that the learning of English translation is no longer boring, and improve students' interest in English translation.},
booktitle = {2021 2nd Asia-Pacific Conference on Image Processing, Electronics and Computers},
pages = {988–991},
numpages = {4},
keywords = {College English Translation, Effect Evaluation, FC, Mixed Teaching},
location = {Dalian, China},
series = {IPEC2021}
}

@inproceedings{10.5555/3306127.3332125,
author = {Appelgren, Mattias},
title = {Teaching Agents Through Correction},
year = {2019},
isbn = {9781450363099},
publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
address = {Richland, SC},
abstract = {We motivate and describe a novel task which is modelled on interactions between apprentices and expert teachers. In the task an agent must learn to build towers constrained by rules. The teacher provides verbal corrective feedback from which the agent learns. The agent starts out unaware of the constraints as well as the domain concepts in which the constraints are expressed. Therefore an agent that takes advantage of the linguistic evidence must learn the denotations of neologisms and adapt its conceptualisation of the planning domain to incorporate those denotations. We show that an agent which does utilise linguistic evidence outperforms a strong baseline which does not.},
booktitle = {Proceedings of the 18th International Conference on Autonomous Agents and MultiAgent Systems},
pages = {2396–2398},
numpages = {3},
keywords = {human-robot interaction, interactive learning, knowledge representation and reasoning},
location = {Montreal QC, Canada},
series = {AAMAS '19}
}

@article{10.1145/1835428.1835440,
author = {Walker, Henry M.},
title = {Configurations for teaching labs},
year = {2011},
issue_date = {September 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {3},
issn = {2153-2184},
url = {https://doi.org/10.1145/1835428.1835440},
doi = {10.1145/1835428.1835440},
abstract = {For decades, computing educators have discussed structured laboratory exercises as part of coursework. Often called "closed labs", formal laboratory sessions promote active learning, engage students in the material at hand, provide practice in problem solving, refine technical skills, and allow instructors to work individually with students to answer questions and facilitate learning. These lab sessions also can encourage pair programming and other collaborative activities---at least from time to time. Altogether, the advantages of closed labs are well documented; at least eighty-nine articles, published between 2010 and 1994, are indexed under "closed labs" in the ACM Digital Library. Also, different institutions have varying goals and priorities for their labs; and over the years various schools have developed guidelines and plans for their laboratory facilities (e.g., [1, 3, 4]).},
journal = {ACM Inroads},
month = {sep},
pages = {26–30},
numpages = {5},
keywords = {CS education research, lab configurations, pedagogy, teaching labs}
}

@article{10.5555/948737.948767,
author = {Brown, Tom and Isaacson, Peter and McFarland, Ronald and LeJeune, Noel},
title = {Effectively teaching program design},
year = {2003},
issue_date = {October 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {19},
number = {1},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {215–217},
numpages = {3}
}

@article{10.1145/142040.142059,
author = {Kearsley, Greg and Heller, Rachelle},
title = {Teaching instructional software design},
year = {1992},
issue_date = {Sept. 1992},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/142040.142059},
doi = {10.1145/142040.142059},
abstract = {This article describes our approach to teaching graduate students in education and computer science about the design of instructional software. The course is taught by instructional television (ITV) and involves the use of a computer bulletin board system. Students complete software projects using a variety of commercial authoring tools. Student reactions to the nature of the course are described as well as lessons learned.},
journal = {SIGCSE Bull.},
month = {sep},
pages = {24–28},
numpages = {5}
}

@article{10.1145/989369.989374,
author = {Tran, Con and Robillard, Pierre N.},
title = {Teaching structured assembler programming},
year = {1985},
issue_date = {December 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/989369.989374},
doi = {10.1145/989369.989374},
abstract = {The concepts of structured programming learned in higher level languages are usually not sufficiently emphasized in teaching assembly languages. In this study, students have used a tool called SCHEMACODE to design in assembly language by means of a higher level schematic pseudocode. The tool automatically generates the assembly code. Data from an experiment involving two groups of students are presented. One group uses a conventional approach based on flow charts and the other group uses the structured approach based on schematic pseudocode. Programs are compared on the basis of memory space and memory cycles. Results show that structured programming in assembly language is as efficient as conventional programming. The programs are much more readable and are therefore easier to maintain.},
journal = {SIGCSE Bull.},
month = {dec},
pages = {32–44},
numpages = {13},
keywords = {assembly language, code generator, pseudocode, software tool, structured assembler programming}
}

@inproceedings{10.5555/1035909.1035965,
author = {Roberts, Stephen D. and Banks, Jerry and Kho, James and Pooch, Udo and Ramberg, John},
title = {Teaching simulation to undergraduates},
year = {1982},
publisher = {Winter Simulation Conference},
abstract = {The purpose of this panel is to discuss the teaching of simulation to undergraduates. Traditionally, simulation has been taught at the graduate level with emphasis on simulation methods and tactics, particularly the statistical aspects. However, the explosion in computer technology and the growth in simulation languages has brought about widespread application of simulation to a variety of problems. In many cases, simulation is the "tool of first resort" because it places the fewest constraints upon its application and usable models can be obtained quickly. Nevertheless, exactly what should be taught at the undergraduate level is a source of controversy. Can undergraduates be adequately prepared to provide simulation services or should they be exposed only to fundamentals, leaving their developm~ent as simulation modelers to another segment of their education? All the members of the panel are actively involved in teaching simulation to undergraduates. They will share their particular perspectives on what they do at their institutions and Why. Obviously, opinions will differ but by considering the different arguments you can better judge what should be done to improve the instruction of these impressionable future simulation contributors. The position statements of the panelists follow.},
booktitle = {Proceedings of the 14th Conference on Winter Simulation - Volume 2},
pages = {706},
numpages = {1},
location = {San Diego, California},
series = {WSC '82}
}

@article{10.1145/382222.382457,
author = {Lowther, J. L. and Motteler, Z. C.},
title = {Teaching good programming techniques},
year = {1976},
issue_date = {Dec. 1976},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/382222.382457},
doi = {10.1145/382222.382457},
journal = {SIGCSE Bull.},
month = {dec},
pages = {10–11},
numpages = {2}
}

@inproceedings{10.1145/3408877.3432506,
author = {Bunde, David P. and Qasem, Apan and Schielke, Philip},
title = {Teaching about Heterogeneous Computing},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432506},
doi = {10.1145/3408877.3432506},
abstract = {CS faculty have spent the last several years adding parallel computing to their curricula since essentially all processors sold today have multiple cores. A typical target system is a multicore processor with identical cores. This is currently the main configuration for desktop and laptop systems, but the technology continues to evolve and systems are incorporating several kinds of heterogeneity. Many phone processors include cores of different sizes, with high-performance "fat cores" and lower-performance "thin cores", allowing the phone to vary its power and performance profile over time. Other processors incorporate low-power modes or special instructions for specialized computations. Meanwhile, high-end systems make heavy use of accelerators such as graphics cards. We are at a stage where heterogeneous computing concepts should pervade the curriculum rather than being limited to upper-level courses.In this workshop, we present modules to incorporate heterogeneous computing into core CS courses taken by all majors (e.g. CS 1, CS 2, Computer Organization). Attendees will have time to work through lab exercises and assignments associated with the modules while we assist. We will provide post-workshop support for instructors interested in adopting the modules. In addition, we will solicit feedback from them to help guide our future module development.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1355},
numpages = {1},
keywords = {heterogeneous computing, parallel computing},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3396802.3396819,
author = {Weicker, Karsten},
title = {Teaching cooperative problem solving},
year = {2020},
isbn = {9781450377522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3396802.3396819},
doi = {10.1145/3396802.3396819},
abstract = {Cooperatively searching for solutions is a primary skill of programmers and software engineers in their daily work. This paper proposes a teaching concept to support students in developing the ability of cooperative problem solving using a combination of cooperative learning groups and a two-stage final exam. All examples and data stem from a course on algorithms and data structures. First results indicate that the new form of examination succeeds in capturing competences exceeding those of conventional exams. In addition, there is also a weak potential impact on work in software engineering projects.},
booktitle = {Proceedings of the 4th European Conference on Software Engineering Education},
pages = {6–11},
numpages = {6},
keywords = {algorithm design, cooperation, problem solving, software development, team work},
location = {Seeon/Bavaria, Germany},
series = {ECSEE '20}
}

@inproceedings{10.1145/3375454,
author = {Falkner, Nick},
title = {Session details: Teaching Programming},
year = {2019},
isbn = {9781450377157},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3375454},
doi = {10.1145/3375454},
booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
location = {Koli, Finland},
series = {Koli Calling '19}
}

@inproceedings{10.1145/2700648.2811365,
author = {Putnam, Cynthia and Dahman, Maria and Rose, Emma and Cheng, Jinghui and Bradford, Glenn},
title = {Teaching Accessibility, Learning Empathy},
year = {2015},
isbn = {9781450334006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2700648.2811365},
doi = {10.1145/2700648.2811365},
abstract = {As information and communication technologies (ICTs) become more diffuse, the diversity of users that designers need to consider is growing; this includes people with disabilities and aging populations. As a result, computing education must provide students the means and inspiration to learn about inclusive design. This poster presents top-level findings from 18 interviews with professors from some of the top universities in the US. Our analysis yielded four categories of findings: (1) important student learning outcomes (the most common was for students to embrace diversity); (2) exercises and teaching materials (almost all focused on inclusion of people with disabilities in discovery and evaluation of ICTs); (3) frustrations and challenges (largely focused on how to engage students in accessibility topics); and (4) the importance of instructor initiative to include the topic of accessibility in their teaching. The unifying theme was the high importance of cultivating empathy with end users.},
booktitle = {Proceedings of the 17th International ACM SIGACCESS Conference on Computers &amp; Accessibility},
pages = {333–334},
numpages = {2},
keywords = {accessibility, pedagogy},
location = {Lisbon, Portugal},
series = {ASSETS '15}
}

@article{10.1145/2716280,
author = {Kolko, Jon},
title = {Teaching confidence in process},
year = {2015},
issue_date = {March + April 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {2},
issn = {1072-5520},
url = {https://doi.org/10.1145/2716280},
doi = {10.1145/2716280},
journal = {Interactions},
month = {feb},
pages = {22–23},
numpages = {2}
}

@article{10.5555/2675327.2675346,
author = {Marmorstein, Robert},
title = {Teaching semaphores using... semaphores},
year = {2015},
issue_date = {January 2015},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {30},
number = {3},
issn = {1937-4771},
abstract = {The word "semaphore" describes both a structure used in computing to manage concurrency and a signal used by trains and naval vessels to transmit information and prevent collisions. In this paper, we present a series of activities which help students build intuition about concurrency by managing "railway semaphores" using an open source train simulation game.The increasing importance of multi-core computers and computing clusters makes concurrency an especially important topic in both operating systems and systems programming courses. Students often struggle to understand semaphores and concurrency problems. One reason for this is that these subjects are often presented as abstract mathematical objects which are hard to visualize. Using simulation to make these ideas more concrete can improve understanding and increase engagement in the course.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {117–125},
numpages = {9}
}

@article{10.1145/1473195.1473196,
author = {Aho, Alfred V.},
title = {Teaching the compilers course},
year = {2008},
issue_date = {December 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/1473195.1473196},
doi = {10.1145/1473195.1473196},
journal = {SIGCSE Bull.},
month = {nov},
pages = {6–8},
numpages = {3}
}

@article{10.5555/1060405.1060418,
author = {Frank, Charles E. and Naugler, David and Traina, Michael},
title = {Teaching user interface prototyping},
year = {2005},
issue_date = {June 2005},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {6},
issn = {1937-4771},
abstract = {User interface prototyping is a proven technique for evaluating design alternatives and for obtaining user feedback. It is heavily employed by software development organizations. However, it is often ignored in computer science education. This paper discusses how interface prototypes are used in industry and what research has shown concerning the effectiveness of such prototyping. It evaluates tools that can used to construct such prototypes and describes how prototyping can be taught in the computer science curriculum. We describe our experiences in teaching students to build interface prototypes and give recommendations based on these experiences.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {66–73},
numpages = {8}
}

@inproceedings{10.1145/3259436,
author = {Krone, Joan},
title = {Session details: Teaching experimentation},
year = {2005},
isbn = {1581139977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3259436},
doi = {10.1145/3259436},
booktitle = {Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '05}
}

@article{10.5555/1040196.1040213,
author = {Read, Simon},
title = {Teaching networking with TIM},
year = {2005},
issue_date = {February 2005},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {3},
issn = {1937-4771},
abstract = {This paper details revisions to an upper-division computer networks class to adapt to external changes. These revisions include adopting a top-down approach, using network programming to motivate the discussion of network issues, providing an opportunity to experience the construction of a practical network application, and using student passion about network issues to develop research and argumentation skills.},
journal = {J. Comput. Sci. Coll.},
month = {feb},
pages = {139–147},
numpages = {9}
}

@inproceedings{10.1145/860575.860779,
author = {Kar, Parijat Prosun and Sen, Sandip},
title = {Agent teaching agent framework},
year = {2003},
isbn = {1581136838},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/860575.860779},
doi = {10.1145/860575.860779},
booktitle = {Proceedings of the Second International Joint Conference on Autonomous Agents and Multiagent Systems},
pages = {1028–1029},
numpages = {2},
keywords = {agents, training},
location = {Melbourne, Australia},
series = {AAMAS '03}
}

@inproceedings{10.1145/143164.143261,
author = {Jung-Gribble, Diane and Kim, Charles},
title = {Teaching computing to thousands},
year = {1992},
isbn = {0897915453},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/143164.143261},
doi = {10.1145/143164.143261},
booktitle = {Proceedings of the 20th Annual ACM SIGUCCS Conference on User Services},
pages = {129–132},
numpages = {4},
location = {Cleveland, Ohio, USA},
series = {SIGUCCS '92}
}

@article{10.1145/70593.70596,
author = {Yun-Lin, Su},
title = {On teaching operating systems},
year = {1989},
issue_date = {Sep. 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/70593.70596},
doi = {10.1145/70593.70596},
abstract = {This paper discusses teaching an Operating Systems Course. Different approaches to teaching the course are presented. An operating systems course is one of the kernel courses in computer curriculum of both China and other countries. This course is of critical importance for students to understand the working procedures and principles of modern computer systems, to understand the methodology and approach of the design of system software, and to gain an appreciation for the requirements of other large-scale software projects.},
journal = {SIGCSE Bull.},
month = {sep},
pages = {11–14},
numpages = {4}
}

@article{10.1145/382186.382583,
author = {Gyllenskog, Joel},
title = {Teaching operating systems design},
year = {1978},
issue_date = {June 1978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {10},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/382186.382583},
doi = {10.1145/382186.382583},
journal = {SIGCSE Bull.},
month = {jun},
pages = {44–46},
numpages = {3}
}

@inproceedings{10.1145/800104.803365,
author = {Taylor, Robert P.},
title = {Teaching programming to beginners},
year = {1977},
isbn = {9781450374071},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800104.803365},
doi = {10.1145/800104.803365},
abstract = {Because of the rapid growth of computing and its influence in schools and community colleges, we find we must teach a growing number of graduate teachers and administrators how to program. Because we firmly believe that the only programming worth doing is well-structured programming, this is the sort of programming we want to teach these graduates to do. Because BASIC, FORTRAN, and COBOL are so widely implemented around the world, we know that one or more of these languages will be the ones most of our students will end up programming in, after they leave Columbia. Because such languages are not particularly well-suited for teaching structured programming to beginners, we decided to develop an indirect approach to this goal, one which would make the learning of these languages the learning of second languages in a second phase of learning to program. The approach which we have been developing, including the major components of a first programming language - FPL, is suggested in the remainder of this paper. For us, it has proven to be an indirect but effective way to teach raw beginners how to write well-structured programs in archaic, ill-designed, high-level real languages.},
booktitle = {Proceedings of the Seventh SIGCSE Technical Symposium on Computer Science Education},
pages = {88–92},
numpages = {5},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '77}
}

@inproceedings{10.1145/1067445.1067493,
author = {Wagner, Paul},
title = {Teaching data modeling: process and patterns},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067493},
doi = {10.1145/1067445.1067493},
abstract = {While competition for scarce space in a Database Systems course curriculum increases, the amount of time spent in many such courses on data modeling decreases. We instead recommend increasing the amount of time spent in the study of data modeling and encourage data model study beyond formalism syntax. We do this in an attempt to help computer science students better understand complex data domains and to help develop higher-level skills that serve them well in a job market threatened by the increased outsourcing of lower level programming jobs. We further recommend the study of process skills as part of data modeling, and develop the idea of data patterns to assist students in the development of advanced data modeling skills.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {168–172},
numpages = {5},
keywords = {data, database, modeling, systems, teaching},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@inproceedings{10.1145/305786.305907,
author = {Deveaux, Daniel and Fleurquin, Regis and Frison, Patrice},
title = {Software engineering teaching: a “Docware” approach},
year = {1999},
isbn = {1581130872},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/305786.305907},
doi = {10.1145/305786.305907},
abstract = {The software engineering teaching is a true challenge. Indeed software engineering technology is only justified for large projects or long-term applications maintenance ; aspects impossible to show at the time of introductory course.In order to circumvent these difficulties, we propose a new approach of software development teaching which we called "Docware". It is a documentation centered process: the software product is no longer regarded as a source file that is documented afterwards, but as a set of documents whose source file is one product among others.After having specified our teaching objectives, we describe this approach which uses new tools that we developed and used for several years. A report of the use of this approach concludes this paper.},
booktitle = {Proceedings of the 4th Annual SIGCSE/SIGCUE ITiCSE Conference on Innovation and Technology in Computer Science Education},
pages = {163–166},
numpages = {4},
location = {Cracow, Poland},
series = {ITiCSE '99}
}

@article{10.1145/1668862.1668880,
author = {DeReamer, Sharon},
title = {Teaching computer science: a Neumont philosophy},
year = {2010},
issue_date = {January 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {35},
number = {1},
issn = {0163-5948},
url = {https://doi.org/10.1145/1668862.1668880},
doi = {10.1145/1668862.1668880},
journal = {SIGSOFT Softw. Eng. Notes},
month = {jan},
pages = {31–34},
numpages = {4}
}

@inproceedings{10.5555/979968.979992,
author = {Lister, Raymond},
title = {Teaching Java first: experiments with a pigs-early pedagogy},
year = {2004},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
abstract = {This paper introduces PigWorld, a tool for teaching Java to novice programmers, via the objects-early style. Three design guidelines for object-early assignments are discussed: (1) emphasize message passing between instances of the same class; (2) use only simple loops that search for smallest or largest values in a sequence; (3) teach linked lists before collections and collections before arrays. The paper offers a first step to resolving the dilemma over whether procedural programming must be taught before objects, via the following principle: in the procedural style, algorithms are encoded explicitly within the methods of an object, but in the object oriented style, algorithms emerge implicitly from the interactions between objects.},
booktitle = {Proceedings of the Sixth Australasian Conference on Computing Education - Volume 30},
pages = {177–183},
numpages = {7},
keywords = {CS1, Java, objects-early, pigs},
location = {<conf-loc>, <city>Dunedin</city>, <country>New Zealand</country>, </conf-loc>},
series = {ACE '04}
}

@inproceedings{10.1145/3531072.3535318,
author = {Stoyanovich, Julia},
title = {Teaching Responsible Data Science},
year = {2022},
isbn = {9781450393508},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3531072.3535318},
doi = {10.1145/3531072.3535318},
abstract = {Responsible Data Science (RDS) and Responsible AI (RAI) have emerged as prominent areas of research and practice. Yet, educational materials and methodologies on this important subject still lack. In this paper, I will recount my experience in developing, teaching, and refining a technical course called “Responsible Data Science”, which tackles the issues of ethics in AI, legal compliance, data quality, algorithmic fairness and diversity, transparency of data and algorithms, privacy, and data protection. I will also describe a public education course called “We are AI: Taking Control of Technology” that brings these topics of AI ethics to the general audience in a peer-learning setting. I made all course materials are publicly available online, hoping to inspire others in the community to come together to form a deeper understanding of the pedagogical needs of RDS and RAI, and to develop and share the much-needed concrete educational materials and methodologies.},
booktitle = {1st International Workshop on Data Systems Education},
pages = {4–9},
numpages = {6},
keywords = {Responsible AI, Responsible Data Science},
location = {Philadelphia, PA, USA},
series = {DataEd '22}
}

@inproceedings{10.1145/2839509.2844652,
author = {Touretzky, David S. and Gardner-McCune, Christina and Aggarwal, Ashish},
title = {Teaching "Lawfulness" With Kodu},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844652},
doi = {10.1145/2839509.2844652},
abstract = {This paper introduces reasoning about lawful behavior as an important computational thinking skill and provides examples from a novel introductory programming curriculum using Microsoft's Kodu Game Lab. We present an analysis of assessment data showing that rising 5th and 6th graders can understand the lawfulness of Kodu programs. We also discuss some misconceptions students may develop about Kodu, their causes, and potential remedies.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {621–626},
numpages = {6},
keywords = {formal reasoning, kodu game lab, programming idioms},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.5555/2486788.2486946,
author = {Kuhrmann, Marco and Fern\'{a}ndez, Daniel M\'{e}ndez and M\"{u}nch, J\"{u}rgen},
title = {Teaching software process modeling},
year = {2013},
isbn = {9781467330763},
publisher = {IEEE Press},
abstract = {Most university curricula consider software pro- cesses to be on the fringes of software engineering (SE). Students are told there exists a plethora of software processes ranging from RUP over V-shaped processes to agile methods. Furthermore, the usual students programming tasks are of a size that either one student or a small group of students can manage the work. Comprehensive processes being essential for large companies in terms of reflecting the organization struc- ture, coordinating teams, or interfaces to business processes such as contracting or sales, are complex and hard to teach in a lecture, and, therefore, often out of scope. We experienced tutorials on using Java or C#, or on developing applications for the iPhone to gather more attention by students, simply speaking, as these are more fun for them. So, why should students spend their time in software processes? From our experiences and the discussions with a variety of industrial partners, we learned that students often face trouble when taking their first real jobs, even if the company is organized in a lean or agile shape. Therefore, we propose to include software processes more explicitly into the SE curricula. We designed and implemented a course at Masters level in which students learn why software processes are necessary, and how they can be analyzed, designed, implemented, and continuously improved. In this paper, we present our courses structure, its goals, and corresponding teaching methods. We evaluate the course and further discuss our experiences so that lecturers and researchers can directly use our lessons learned in their own curricula.},
booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
pages = {1138–1147},
numpages = {10},
location = {San Francisco, CA, USA},
series = {ICSE '13}
}

@inproceedings{10.1145/3254230,
author = {Cavender, Anna},
title = {Session details: Teaching gems},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3254230},
doi = {10.1145/3254230},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/1734263.1734313,
author = {Feinberg, Dave},
title = {Teaching simplified network protocols},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734313},
doi = {10.1145/1734263.1734313},
abstract = {We created a course that, beginning from a hypothetical shared light bulb as our physical layer, introduced students to a hierarchy of simplified versions of network protocols, including Ethernet, IP, and TCP. This paper describes those simplified protocols, along with the Java framework students used to implement and simulate them.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {143–147},
numpages = {5},
keywords = {ethernet, ip, network, programming, protocol, simulation, tcp},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/3248198,
author = {Staats, Wayne},
title = {Session details: Teaching recursion},
year = {2002},
isbn = {1581134738},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248198},
doi = {10.1145/3248198},
booktitle = {Proceedings of the 33rd SIGCSE Technical Symposium on Computer Science Education},
location = {Cincinnati, Kentucky},
series = {SIGCSE '02}
}

@article{10.1145/381977.381978,
author = {Badman, Scott},
title = {An OOPs teaching tool},
year = {1995},
issue_date = {April 1995},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {2},
issn = {1078-2192},
url = {https://doi.org/10.1145/381977.381978},
doi = {10.1145/381977.381978},
abstract = {For a programmer, Object-Oriented Programming (OOP) can be pure joy. Code is so easy to create. If a piece of code already exists, you just use it. If it is not exactly what you want, you inherit and modify it. Your new code links and runs effortlessly with your previous code. The more complex your project becomes, the more you appreciate object-oriented code.},
journal = {3C ON-LINE},
month = {apr},
pages = {4–5},
numpages = {2}
}

@article{10.1145/1017674.1017676,
author = {Courtney, James F. and Jensen, Ronald L.},
title = {Teaching DSS with DBMS},
year = {1981},
issue_date = {Spring 1981},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {3},
issn = {0095-0033},
url = {https://doi.org/10.1145/1017674.1017676},
doi = {10.1145/1017674.1017676},
journal = {SIGMIS Database},
month = {apr},
pages = {7–11},
numpages = {5}
}

@article{10.1145/952845.952869,
author = {Rubinstein, Richard},
title = {Using LOGO in teaching},
year = {1975},
issue_date = {January 1975},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {SI},
issn = {0163-5735},
url = {https://doi.org/10.1145/952845.952869},
doi = {10.1145/952845.952869},
abstract = {Teachers faced with selecting or creating introductory computing materials often must choose among several computer languages. LOGO was selected for use in the author's courses at the University of California, Irvine. This paper describes these courses in terms of the demands placed on the computing language used, and the ideas to which the students were exposed. Those characteristics of LOGO which are most important to the success of the courses are evaluated.},
journal = {SIGCUE Outlook},
month = {jan},
pages = {69–75},
numpages = {7}
}

@inproceedings{10.1145/800118.803872,
author = {Jones, Louise H. and Reigel, Earl W. and Sitton, W. Gary and Tsuchiya, Masahiro and Wear, Larry L.},
title = {Teaching microprogramming(Panel Discussion)},
year = {1974},
isbn = {9781450374217},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800118.803872},
doi = {10.1145/800118.803872},
abstract = {The following are excerpts from the material that will be discussed by the panelists:“Microprogramming and Emulation”. This experimental seminar was directed toward learning about microprogramming rather than how to microprogram because of lack of equipment. Some of the topics discussed were: Organization of Microprogrammable Machines, Languages f o r Microprogramming, Synthesis of System Architectures, Emulation and Signal Processing, and the Future of Microprogramming. Student projects from the course included an ALGOL simulation of the HP 2100 and the John Hopkins dynamic multiprocessor and a simulation package to investigate the emulation of the AN/UYK-20.—L.H. Jones“CIS 672 - Microprogramming”. The objectives of this course are (1) teaching the basic principles of microprogramming, (2) to develop the student's ability to write microprograms and evaluate machines, (3) to demonstrate the potential of writable control store and, (4) to prepare students to do research in the microprogramming field . Material covered in the course includes: A review of control structures and history of microprogramming, development of microprograms for functions and emulators and future trends and research topics in microprogramming.—E.W. Reigel“Microprogramming Theory” This is a graduate level course that takes up where our introductory course in microprogramming leaves off. The prerequisites are a basic understanding of microprogramming and the ability to write and debug microprograms. The course begins with discussion of control structures and micro-memory. Particular attention is placed upon microword encoding, time validity, and sequencing techniques. Micro-programming languages are developed from the standpoint of those which assume a particular hardware configuration (e.g. IBM's CAS) to those which include virtual machine definition capability (e.g. Young's ALSIM).—W.G. Sitton“Microprogramming Activities at Northwestern University”. The equipment at Northwestern has been used to develop a senior/graduate course and to provide facilities for Master and Ph.D. research. The Varian V73 has been used in a variety of projects including the development of a microprogram monitoring device study microprogram resource utilization, the implementation of microprogram parallelism detection techniques and the development of a high level language for V73 microprogramming.—M. Tsuchiya},
booktitle = {Conference Record of the 7th Annual Workshop on Microprogramming},
pages = {267},
location = {Pal Alto, California, USA},
series = {MICRO 7}
}

@inproceedings{10.1145/3286960.3286971,
author = {Ott, Claudia and Meek, Nick},
title = {Pair Teaching in Action},
year = {2019},
isbn = {9781450366229},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3286960.3286971},
doi = {10.1145/3286960.3286971},
abstract = {We share our procedure, resources, and experiences in using pair teaching to deliver a first-year introductory web development course. We will describe how having two lecturers in the lecture theatre can provide more opportunities for live examples, coding demonstrations, discussions and in-lecture exercises leading to a varied delivery which was perceived as more engaging than a traditional lecture format.Furthermore, we argue that pair teaching supports professional development by facilitating self- and peer-review, sharing domain knowledge, as well as helping new lecturers to become familiar with an established lecture series. As a side effect, we discovered that teaching as a pair is a less isolating experience and much more fun.},
booktitle = {Proceedings of the Twenty-First Australasian Computing Education Conference},
pages = {87–95},
numpages = {9},
keywords = {Active Learning, Co Teaching, Pair Lecturing, Pair Teaching, Team Teaching},
location = {Sydney, NSW, Australia},
series = {ACE '19}
}

@article{10.5555/3069621.3069628,
author = {Yao, Jenq-Foung JF and Chiang, Tsu-Ming},
title = {Teaching online courses 101},
year = {2017},
issue_date = {May 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {5},
issn = {1937-4771},
abstract = {There is tremendous growth and demand for online learning. In this paper, we share our experiences in what to do and what not to do in preparing and delivering online courses. Key elements and tips are discussed. We also address issues with respect to interactive assignments and presentations in facilitating online learning.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {32–38},
numpages = {7}
}

@article{10.5555/2675327.2675340,
author = {Sprague, Nathan},
title = {Teaching robotics using ROS},
year = {2015},
issue_date = {January 2015},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {30},
number = {3},
issn = {1937-4771},
abstract = {The Robot Operating System (ROS) has had a dramatic impact on the field of robotics over the last several years. ROS is an open-source software framework for developing robotics applications. It has become a standard platform with a wide range of supported robots and a vibrant software ecosystem.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {83},
numpages = {1}
}

@article{10.1145/3262612,
author = {Krone, Joan},
title = {Session details: Teaching experimentation},
year = {2005},
issue_date = {2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {37},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3262612},
doi = {10.1145/3262612},
journal = {SIGCSE Bull.},
month = {feb}
}

@inproceedings{10.5555/1161734.1162128,
author = {Walker, John H.},
title = {Teaching regression with simulation},
year = {2004},
isbn = {0780387864},
publisher = {Winter Simulation Conference},
abstract = {Computer simulations can be used to teach complicated statistical concepts in linear regression more quickly and effectively than traditional lecture alone. In introductory applied statistics classes, the coverage of important statistical topics, such as the nature of the sampling distribution of the simple linear regression slope, the problem of multicollinearity in multiple linear regression, or the danger of extrapolation in predictions from multiple linear regression models, may be shortened or eliminated entirely for lack of time. Simulation can provide a way to introduce these topics in a brief, but memorable, way for introductory students or as the first step in a more thorough treatment for higher level students. This paper describes each simulation, discusses its pedagogical advantages, and gives sample computer output.},
booktitle = {Proceedings of the 36th Conference on Winter Simulation},
pages = {2096–2102},
numpages = {7},
location = {Washington, D.C.},
series = {WSC '04}
}

@article{10.1145/1024338.1024354,
author = {McCauley, Ren\'{e}e},
title = {Thinking about our teaching},
year = {2004},
issue_date = {June 2004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {36},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/1024338.1024354},
doi = {10.1145/1024338.1024354},
abstract = {During a recent semester, our department faculty had several discussions concerning our disappointment with our students' quality of work. Obviously, we agreed, this cohort of students was not working hard enough. Those of us teaching senior-level courses somewhat politely suggested that the rest of us teaching introductory courses just weren't making those courses challenging enough. Come to think of it, this type of discussion seems to occur every semester --- some time between midterm and exams.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {18–19},
numpages = {2}
}

@inproceedings{10.5555/1161135.1161166,
author = {Moran, Juan and Pearson, P. David and Bievenue, Lisa A. and Chang, Carole S. and Nelson, Steven D. and Pasero, Spencer L.},
title = {Visualizations in teaching chemistry},
year = {1996},
isbn = {1880094231},
publisher = {International Society of the Learning Sciences},
abstract = {Acquisition and mastery of chemistry concepts depend on an interpretative framework that is microscopic and requires a three-dimensional dynamic representation. The Visualizations in Chemistry project created a computational environment where students can do simulations of atomic and molecular bonding in order to develop a more intuitive understanding of quantum chemistry. Students used a high performance computing environment to perform calculations and interactively visualize the resulting images. In this paper, we report on one detailed implementation where 7 conceptual areas were evaluated. The results showed improvements in students' visualizations of atoms and molecules, but it was not clear if the students' initial models were replaced. Suggestions for future implementation include more attention to learning in the visual mode, more chemistry background preparation, and use of an improved interface.},
booktitle = {Proceedings of the 1996 International Conference on Learning Sciences},
pages = {227–234},
numpages = {8},
location = {Evanston, Illinois},
series = {ICLS '96}
}

@article{10.1145/67900.67909,
author = {Sharpe, D. and Willshire, M. J.},
title = {Human factors in teaching},
year = {1989},
issue_date = {Jan. 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {3},
issn = {0736-6906},
url = {https://doi.org/10.1145/67900.67909},
doi = {10.1145/67900.67909},
abstract = {In this paper we discuss the parallels between human factors in computer systems and human factors in the classroom. We look at some of the human factors guidelines for computer system design and discuss their analogs in course design and execution. Since many of us are called upon to share our expertise in a classroom setting, perhaps we can learn from our experience with software and thus try to maximize our teaching effectiveness.},
journal = {SIGCHI Bull.},
month = {jan},
pages = {58–62},
numpages = {5}
}

@inproceedings{10.1145/800037.800969,
author = {Atwood, J. W. and Regener, E.},
title = {Teaching subsets of Pascal},
year = {1981},
isbn = {0897910362},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800037.800969},
doi = {10.1145/800037.800969},
abstract = {In teaching Pascal in our basic programming course since 1975, we have developed a teaching order using a sequence of language subsets, similar in concept to the SP/k, SF/k, and PS/k systems of Holt and Hume. Our scheme introduces each programming idea in as general a context as possible, and presents the elements of the Pascal-S subset (Wirth) before the rest of the language. It is designed for a concentrated presentation together with elements of discrete mathematics, combinatorics, and concepts of program design, for students with a basic course in Fortran as background.},
booktitle = {Proceedings of the Twelfth SIGCSE Technical Symposium on Computer Science Education},
pages = {96–103},
numpages = {8},
keywords = {Discrete mathematics, Introductory course, Pascal, Pascal-S, Teaching subsets},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '81}
}

@inproceedings{10.1145/2481449.2481468,
author = {Dagdilelis, Vassilios and Xinogalos, Stelios},
title = {Preparing teachers for teaching informatics: theoretical considerations and practical implications},
year = {2012},
isbn = {9781450317870},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2481449.2481468},
doi = {10.1145/2481449.2481468},
abstract = {The integration of ICT in Primary and Secondary Education is considered of great importance for the enhancement of both teaching and learning. However, a successful integration of ICT in the teaching practice requires a well-organized training of teachers. In this paper, we present qualitative results from a national-scale program aiming at training Secondary Education teachers in the usage of ICT. Specifically, we focus on the training of Informatics and Computer Science teachers that were for the first time included in this training program taking place the last 12 years in Greece. These trainee-teachers will act as trainers of teachers after the successful completion of their own training. Several important aspects of organizing the training of trainers are examined, while some findings concerning the major problems of preparing teachers for teaching Informatics are analysed.},
booktitle = {Proceedings of the 7th Workshop in Primary and Secondary Computing Education},
pages = {78–81},
numpages = {4},
keywords = {secondary computing education, teacher's training},
location = {Hamburg, Germany},
series = {WiPSCE '12}
}

@inproceedings{10.1145/1734263.1734429,
author = {Schmidt, Alexander and Polze, Andreas and Probert, Dave},
title = {Teaching operating systems: windows kernel projects},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734429},
doi = {10.1145/1734263.1734429},
abstract = {When studying operating systems, students need to understand user-mode system interfaces (U), they need to learn about tools to monitor and measure OS behavior (M), and they finally should understand central implementation details of the OS kernel (K). Following the UMK approach, even complex projects such as modifying the memory management inside the Windows kernel can be carried out in an undergraduate OS curriculum.Here we concentrate on the kernel- and measurement part and present the Abstract Memory Management (AMM) project. AMM provides a framework for modifying the working set management in Windows while still hiding many implementation details of the kernel. AMM has been used in OS courses at U of Washington Bothell and HPI/U of Potsdam, Germany, with very good results.The AMM lab - together with other labs - is based on the Windows Research Kernel (WRK) as available in source from Microsoft. These labs complement our previously developed Curriculum Resource Kit (CRK) and are available for download.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {490–494},
numpages = {5},
keywords = {memory management, operating systems, windows research kernel, windows sources},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/330908.331892,
author = {Vat, Kam Hou},
title = {Teaching Software Psychology: expanding the perspective},
year = {2000},
isbn = {1581132131},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/330908.331892},
doi = {10.1145/330908.331892},
abstract = {This paper describes the curriculum development and teaching experience of a junior core course entitled Software Psychology, offered in the undergraduate Software Engineering program at the author's affiliated university. In particular, the pedagogy of problem-based learning is introduced, together with the evolution of the course content. It will also address issues such as resources and facilities needed for the course, and the students' perceived learning as well as the author's lessons learned therein.},
booktitle = {Proceedings of the Thirty-First SIGCSE Technical Symposium on Computer Science Education},
pages = {392–396},
numpages = {5},
location = {Austin, Texas, USA},
series = {SIGCSE '00}
}

@inproceedings{10.1145/2079216.2079237,
author = {Askland, Hedda Haugen and Williams, Anthony and Ostwald, Michael},
title = {Teaching creative design: a challenging field},
year = {2011},
isbn = {9781450307543},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2079216.2079237},
doi = {10.1145/2079216.2079237},
abstract = {This paper considers the issue of creativity in design education. More specifically, it discusses key challenges for teaching creative design as they are identified by design academics. The paper presents an analysis of primary data collected for an ongoing research project on assessing creativity in design. It identifies six key issues facing design academics when teaching creative design courses, namely: terminology; subjectivity and marking; culture and context; personalities; resources; and pedagogical approach.},
booktitle = {Procedings of the Second Conference on Creativity and Innovation in Design},
pages = {149–156},
numpages = {8},
keywords = {assessment, challenges, creativity, design education, instruction},
location = {Eindhoven, Netherlands},
series = {DESIRE '11}
}

@article{10.1145/1836543.1836553,
author = {Mellor-Crummey, John and Gropp, William and Herlihy, Maurice},
title = {Teaching parallel programming: a roundtable discussion},
year = {2010},
issue_date = {Fall 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {1},
issn = {1528-4972},
url = {https://doi.org/10.1145/1836543.1836553},
doi = {10.1145/1836543.1836553},
abstract = {In this roundtable, three professors of parallel programming share their perspective on teaching and learning the computing technique.},
journal = {XRDS},
month = {sep},
pages = {28–30},
numpages = {3}
}

@article{10.5555/771832.771848,
author = {LeBlanc, Mark D. and Dyer, Betsey D.},
title = {Teaching together: a three-year case study in genomics},
year = {2003},
issue_date = {May 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {5},
issn = {1937-4771},
abstract = {The emerging field of "Genomics" (the analysis of DNA sequences) requires interdisciplinary collaborations between computer scientists and biologists. Whereas most colleges and universities do not and may not ever have full programs in bioinformatics/genomics, new models of teaching and associated supporting materials are needed if we are to provide undergraduate science majors with experiences in the art of cooperation necessary to solve tomorrow's problems in genomics. We report here on our recent three-year experiences with "linking" computer science and biology courses. By infusing genomics into existing computer science and biology courses ("Algorithms," "Software Engineering," "Genetics," and "Cell Evolution"), interdisciplinary classes and labs in genomics are provided to all computer science majors and over half of all majors in the biological sciences (biology, biochemistry, environmental science, and psychobiology).},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {85–95},
numpages = {11}
}

@inproceedings{10.1145/3456887.3457087,
author = {Gao, Qian},
title = {Innovation and Entrepreneurship Education based Intelligent New Engineering Practice Teaching Mode and Teaching Base Construction Research},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457087},
doi = {10.1145/3456887.3457087},
abstract = {In order to build a manufacturing power and implement Industry 4.0, outstanding engineers with innovative ability are urgently needed to improve national competitive strength. This paper first analyzes the current situation of the cultivation of innovative talents in computer major in colleges and universities in 4 aspects, then proposes the construction mode of intelligent new engineering practice teaching base based on the innovation and entrepreneurship education, and puts forward specific construction plans and measures. It has been proved by practice that the practical teaching mode and teaching base construction proposed by us can greatly improve students' enthusiasm for innovation and entrepreneurship, and provide students with the high success rate of national innovation and entrepreneurship projects.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {853–858},
numpages = {6},
keywords = {Entrepreneurship, Innovation},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@article{10.1145/2788451,
author = {Shein, Esther},
title = {Teaching computers with illusions},
year = {2015},
issue_date = {August 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {58},
number = {8},
issn = {0001-0782},
url = {https://doi.org/10.1145/2788451},
doi = {10.1145/2788451},
abstract = {Exploring the ways human vision can be fooled is helping developers of machine vision.},
journal = {Commun. ACM},
month = {jul},
pages = {13–15},
numpages = {3}
}

@article{10.5555/1352627.1352642,
author = {Parker, Jeff},
title = {Teaching complexity via spreadsheets},
year = {2008},
issue_date = {May 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {5},
issn = {1937-4771},
abstract = {Some important ideas in Computer Science are difficult to teach to those who have not learned to program. We describe how we introduce complexity theory using spreadsheets. Our measure of the complexity of an algorithm is the number of cells holding elementary functions required to express it.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {83–89},
numpages = {7}
}

@article{10.5555/1040151.1040153,
author = {Mock, Kenrick},
title = {Teaching with Tablet PC's},
year = {2004},
issue_date = {December 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {2},
issn = {1937-4771},
abstract = {Tablet PC's are traditional notebook computers with the ability to process digital ink by writing with a stylus. They have recently attracted attention as a potential tool for educational use. This paper describes the author's experience using the Tablet PC to conduct a CS1 course and a software engineering (SWE) course. The SWE course consisted primarily of PowerPoint lectures while the CS1 course consisted primarily of hand-written material. For both courses the Tablet PC was used in the classroom was digital whiteboard by connecting it to a data projector. The lecture material was archived and accessed electronically for future reference by the students. To capture real-time gesturing and audio commentary, the CS1 course was recorded using screen capture technology. Outside of the classroom, the Tablet PC is also a useful tool for grading, creating lecture material, and capturing meeting notes. Student feedback regarding use of the Tablet PC has been extremely positive.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {17–27},
numpages = {11}
}

@inproceedings{10.1145/1044550.1041653,
author = {Bogoyavlenskaya, O. Yu.},
title = {Teaching networking congestion control},
year = {2004},
isbn = {9781450377942},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1044550.1041653},
doi = {10.1145/1044550.1041653},
abstract = {This paper presents main stages of networking congestion control development including initial early motivations, modern state-of-the-art, and open problems. These stages form basis for teaching strategies. The paper provides several illustrative examples, which help to understand present state of congestion control using common experience of a person. The nature of the network congestion and the role of the network protocols in its control are discussed. Special attention is point at feedback between congestion control and performance. Performance issues are also carefully examined. Performance of the networking congestion control is studied by two modern alternative approaches. One of them belongs to author.},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {35–41},
numpages = {7},
keywords = {congestion control, networking, performance, teaching strategy, transport layer},
location = {Leeds, United Kingdom},
series = {ITiCSE-WGR '04}
}

@article{10.1145/381867.381888,
author = {Janik, Carol},
title = {Textbooks for teaching C++},
year = {1994},
issue_date = {Oct. 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {1},
issn = {1078-2192},
url = {https://doi.org/10.1145/381867.381888},
doi = {10.1145/381867.381888},
abstract = {Until recently, there were very few materials available for teaching C++ and object-oriented programming. I taught a new course in that subject this spring, and we are considering changing from Pascal to C++ in our first year computer science sequence; thus, I have been collecting books from publisher's reps and the ACM conference. Lab manuals are scarce, but some texts come with disks of the programs in the text that could be used in a lab situation. A short review of texts that I've recently obtained follows.},
journal = {3C ON-LINE},
month = {oct},
pages = {12},
numpages = {1}
}

@article{10.5555/1061064.1061068,
author = {Lennie, John},
title = {Concerning "Teaching ALGOL 60"},
year = {1966},
issue_date = {May. 1966},
publisher = {Computer History Museum},
address = {Mountain View, CA, USA},
number = {23},
issn = {0084-6198},
journal = {ALGOL Bull.},
month = {may},
pages = {4},
numpages = {1}
}

@article{10.1145/367710.367740,
author = {Greene, I.},
title = {Guides to teaching COBOL},
year = {1962},
issue_date = {May 1962},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {5},
issn = {0001-0782},
url = {https://doi.org/10.1145/367710.367740},
doi = {10.1145/367710.367740},
journal = {Commun. ACM},
month = {may},
pages = {272–273},
numpages = {2}
}

@article{10.5555/1181849.1181888,
author = {Abernethy, Ken and Piegari, George and Reichgelt, Han},
title = {Teaching project management: an experiential approach},
year = {2007},
issue_date = {January 2007},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {22},
number = {3},
issn = {1937-4771},
abstract = {Project management is being increasingly recognized as an important area of study for computing programs. For example, the most recent Standish Group CHAOS Report concludes that an increased use of disciplined project management may explain an observed increase in the success rate of information technology projects. In addition, Information Technology (IT) has emerged as a new academic discipline, and project management is one of five core technology areas cited in ACM curriculum guidelines for the discipline. Given these factors, it is likely that many computing programs will consider making available a project management course within their curricula. In this paper, it is argued that an experiential approach may be most effective in such courses. A specific experiential approach to the teaching of project management is then described, and some preliminary assessment of the effectiveness of a course using this approach is given.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {198–205},
numpages = {8}
}

@inproceedings{10.1145/3535735.3535744,
author = {Wang, Feiyu and Wang, Lili and Yu, Wulong and Xia, Fan and Zhang, En and Su, Binghua},
title = {Research on the Teaching of Music Education in Colleges and Universities Under the Reflective Teaching Dimension},
year = {2022},
isbn = {9781450396196},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3535735.3535744},
doi = {10.1145/3535735.3535744},
abstract = {Reflective teaching, that is, teaching reflection, is a teaching method that scholars have studied more and more, and its importance has attracted the attention of today's educational circles, but the teaching reflection in college education has not been paid enough attention. This paper makes a detailed and in-depth analysis and research on the teaching of music education in colleges and universities from the perspectives of theory and practice by drawing on the relevant principles and characteristics of teaching reflection, and discusses the necessity and teaching strategies of college teachers' teaching reflection and college music education teaching. In order to achieve a harmonious and natural state between all aspects of music education and teaching, it is expected that music education in colleges and universities will develop in a more vivid, orderly, healthy and harmonious direction.},
booktitle = {Proceedings of the 7th International Conference on Information and Education Innovations},
pages = {77–83},
numpages = {7},
keywords = {Music Education, Pedagogy, Reflection on Teaching, Teaching Research},
location = {Belgrade, Serbia},
series = {ICIEI '22}
}

@inproceedings{10.1145/3456887.3456998,
author = {Liu, Gang},
title = {Teaching Reform and Practice of Photoshop Image Processing Course under the Background of Production Teaching Integration},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3456998},
doi = {10.1145/3456887.3456998},
abstract = {with the transformation and upgrading of China's economic development, in large quantities innovative applied talents are needed to Add new vitality the economic development. institution of higher learning bear the heavy responsibility of talent training. In the new era, in order to cultivate talents needed by social and economic development, enterprises and industries need to participate in personnel training. We can the talents trained satisfy enterprises and industries. In this paper, under the background of production education integration, taking the teaching reform of Photoshop Image processing course of animation major as an example, this paper explores the problems and solutions in the process of talent cultivation, and contributes to the cultivation of excellent talents for economic development.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {493–495},
numpages = {3},
keywords = {Photoshop Image Processing, Production Teaching Integration, Teaching Reform},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3338840.3355658,
author = {Liu, Xing and Sheng, GuangMing and Shi, Bing and De Vaulx, Christophe and Rao, Wenbi and Li, Qing},
title = {MIPS CPU development with analogous teaching method for experimental teaching of digital logic and computer organization},
year = {2019},
isbn = {9781450368438},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3338840.3355658},
doi = {10.1145/3338840.3355658},
abstract = {This paper presents the experiment program which requires the students to incorporate the knowledge that they have learned from both digital logic and computer organization courses so as to develop a MIPS CPU with the reprogrammable FPGA. First, the top-to-down design concept and technical solutions on how to design and implement a MIPS CPU with FPGA is presented. Then, to help the students master the intricate FPGA development process in an easy-to-understand way, the analogous teaching method which compares the FPGA design to the C programming is investigated. This experiment program can help the students integrate the knowledge of different courses and develop a complicate computer system independently by their own ideas. It can not only improve the students' ability in solving the complex engineering problems, but can also help them build a systematic thinking way. The experimental program has been carried out in the Internet-of-Things speciality for 6 years, and the survey results showed that this experiment program had achieved its initial training objective effectively.},
booktitle = {Proceedings of the Conference on Research in Adaptive and Convergent Systems},
pages = {27–33},
numpages = {7},
keywords = {CPU, FPGA, analogous teaching, computer organization},
location = {Chongqing, China},
series = {RACS '19}
}

@inproceedings{10.1145/343048.343155,
author = {Raab, Jeff and Rasala, Richard and Proulx, Viera K.},
title = {Pedagogical power tools for teaching Java},
year = {2000},
isbn = {1581132077},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/343048.343155},
doi = {10.1145/343048.343155},
abstract = {We describe a Java toolkit that is designed to support the creation of powerful and extensible GUI interfaces during the first year computer science course. The goals of this toolkit are to provide:• an infrastructure for creating well designed programs that illustrates the concepts of computer science and its practical applications• an environment for learning the basic ideas of interface design and for experimenting with a variety of designs• a paradigm for building interfaces in Java that scales from individual data items to large structures, using recursively displayable container classesAdditionally, the toolkit classes themselves can be studied as examples of proper object oriented design, and of building event listeners.},
booktitle = {Proceedings of the 5th Annual SIGCSE/SIGCUE ITiCSEconference on Innovation and Technology in Computer Science Education},
pages = {156–159},
numpages = {4},
keywords = {IO, Java, introductory computer science, pedagogy, toolkits},
location = {Helsinki, Finland},
series = {ITiCSE '00}
}

@inproceedings{10.1145/3610969.3611136,
author = {Tucker, John Vivian},
title = {Teaching History of Computing},
year = {2023},
isbn = {9798400708763},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3610969.3611136},
doi = {10.1145/3610969.3611136},
abstract = {The history of computing has been explicitly embedded within the Computer Science curriculum at Swansea University since the 1980s. In this report, we describe some of the advanced teaching in history that is provided by the Department.},
booktitle = {Proceedings of the 2023 Conference on United Kingdom &amp; Ireland Computing Education Research},
articleno = {23},
numpages = {1},
keywords = {computing education, computing history, student investigations},
location = {<conf-loc>, <city>Swansea</city>, <country>Wales Uk</country>, </conf-loc>},
series = {UKICER '23}
}

@article{10.5555/1529995.1530004,
author = {Stiller, Evelyn},
title = {Teaching programming using bricolage},
year = {2009},
issue_date = {June 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {6},
issn = {1937-4771},
abstract = {Traditional approaches to programming education work well for conventional computer science students, but in the face of reduced enrollments and a severe underrepresentation of women and minorities, we must offer a variety of pedagogies to reach students who do not respond to this pedagogical approach. Research spanning several decades suggests that analytically less-experienced students may do well using a bricolage approach. This paper illustrates how to apply this approach to teaching students to program, and discusses its success in a course called, The Art and Science of Animation.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {35–42},
numpages = {8}
}

@article{10.5555/1127389.1127390,
author = {Guzdial, Mark},
title = {Teaching computing for everyone},
year = {2006},
issue_date = {April 2006},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {21},
number = {4},
issn = {1937-4771},
abstract = {In 1961, Alan Perlis argued that computer science should be considered part of a liberal education, and everyone on campus should learn to program. His argument centered on the value of computing as a new kind of scholarship, in the way that computational scientists create and test models using computing. Today, the ubiquity of computing in modern lives, and the need for technology concepts and skills to be globally competitive, make even stronger arguments for teaching everyone about computing. But let's consider this seriously: Could we as CS educators teach everyone about computing? Our track record isn't good -- we have declining enrollments in our majors and declining retention for those students who do take our classes. At Georgia Tech, we have a computing requirement for everyone on campus. Today, we retain almost everyone who takes our introductory classes, but we've had to learn to change what and how we teach in order to make computing into something relevant for everyone. This talk will review what we learned at Georgia Tech and how similar approaches are being adopted and adapted at other universities.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {6},
numpages = {1}
}

@inproceedings{10.5555/1149126.1149162,
author = {Lee, Victor R. and Sherin, Bruce L.},
title = {What makes teaching special?},
year = {2004},
publisher = {International Society of the Learning Sciences},
abstract = {The aim of this paper is to articulate some of our early attempts to understand how teaching interactions differ from everyday communicative interactions. In order to do this, we integrate theories from linguistics, particularly the branch of pragmatics, with work in math education and the learning sciences. Recognizing that communication is an inferential activity, we explore what makes teaching interactions a unique class of communication. Specifically, we suggest that individuals who take on a teaching role must deal with a prediction problem because knowledge is not equally shared between the communicators. Our analysis of classroom observations and tutoring interviews with third grade students learning single digit multiplication elucidate a few of the ways that the prediction problem is addressed in teaching activities.},
booktitle = {Proceedings of the 6th International Conference on Learning Sciences},
pages = {302–309},
numpages = {8},
location = {Santa Monica, California},
series = {ICLS '04}
}

@article{10.1145/3261992,
author = {Staats, Wayne},
title = {Session details: Teaching recursion},
year = {2002},
issue_date = {March 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3261992},
doi = {10.1145/3261992},
journal = {SIGCSE Bull.},
month = {mar}
}

@inproceedings{10.1145/311625.311734,
author = {Keeshen, Jim},
title = {Teaching and creating animatics},
year = {1999},
isbn = {1581131038},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/311625.311734},
doi = {10.1145/311625.311734},
booktitle = {ACM SIGGRAPH 99 Conference Abstracts and Applications},
pages = {101},
location = {Los Angeles, California, USA},
series = {SIGGRAPH '99}
}

@inproceedings{10.1145/632716.632749,
author = {Mannov\'{a}, Bo\v{z}ena (Boba)},
title = {Teaching IT for seniors},
year = {1999},
isbn = {1581131585},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/632716.632749},
doi = {10.1145/632716.632749},
abstract = {This paper describes the information technology course for seniors which was offered for 1998/99 on the Czech Technical University in Prague. The curriculum of the course is mentioned and basic information and statistics about participants are discussed.},
booktitle = {CHI '99 Extended Abstracts on Human Factors in Computing Systems},
pages = {49–50},
numpages = {2},
keywords = {CHI, computer use, information technology, senior education},
location = {Pittsburgh, Pennsylvania},
series = {CHI EA '99}
}

@article{10.1145/294828.294830,
author = {Kumar, Deepak},
title = {Teaching about embedded agents},
year = {1998},
issue_date = {June 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {1},
issn = {0163-5719},
url = {https://doi.org/10.1145/294828.294830},
doi = {10.1145/294828.294830},
journal = {SIGART Bull.},
month = {jun},
pages = {7},
numpages = {1}
}

@inproceedings{10.1145/168304.168313,
author = {Goldman, Sally A. and Mathias, H. David},
title = {Teaching a smart learner},
year = {1993},
isbn = {0897916115},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/168304.168313},
doi = {10.1145/168304.168313},
booktitle = {Proceedings of the Sixth Annual Conference on Computational Learning Theory},
pages = {67–76},
numpages = {10},
location = {Santa Cruz, California, USA},
series = {COLT '93}
}

@inproceedings{10.1145/800142.805357,
author = {Lewis, Stephen D.},
title = {Teaching macroeconomics using APL},
year = {1981},
isbn = {0897910354},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800142.805357},
doi = {10.1145/800142.805357},
abstract = {This paper examines the expositional possibilities of teaching macroeconomic relationships and concepts at the introductory and intermediate university level using APL as a pedagogical technique to complement conventional mathematical notation. Structural equations embodying economic models are specified by (explicit-result) functions which are easily recognized by economics students already familiar with these equations expressed in a conventional manner but possessing a minimal knowledge of APL. Key economic concepts such as equilibria, stability conditions, and policies are formulated and discussed. Functions for simulation provide a means for analyzing comparative static and dynamic behaviour. The research reported here is an example of work to investigate 'Teaching Economics Using APL' which is just beginning.},
booktitle = {Proceedings of the International Conference on APL},
pages = {189–194},
numpages = {6},
location = {San Francisco, California, USA},
series = {APL '81}
}

@inproceedings{10.1145/1900441.1900486,
author = {D'Andrea, Vincenzo and Teli, Maurizio},
title = {Teaching participatory design: a participatory approach},
year = {2010},
isbn = {9781450301312},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1900441.1900486},
doi = {10.1145/1900441.1900486},
abstract = {In this paper we describe our experience in teaching Participatory Design during a period of student activism. The paper begins with an introduction to the general contexts, characterised by widespread university budget cuts and student activism, and our positioning as course instructors. Drawing upon different conceptualisations of participation, from innovation to motivation, we describe and analyse our experience in teaching a course as it was a Participatory Design project, discussing with students not only some side elements but the whole course details and structure. In conclusions, we show under which conditions this approach is able to re-frame the power balance between teachers and students.},
booktitle = {Proceedings of the 11th Biennial Participatory Design Conference},
pages = {223–226},
numpages = {4},
keywords = {education, methods, participatory design, power, teaching},
location = {Sydney, Australia},
series = {PDC '10}
}

@inproceedings{10.1145/299359.299361,
author = {Jesshope, Chris},
title = {Web based teaching: a minimalist approach},
year = {1997},
isbn = {0897919580},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299359.299361},
doi = {10.1145/299359.299361},
booktitle = {Proceedings of the 2nd Australasian Conference on Computer Science Education},
pages = {16–23},
numpages = {8},
location = {The Univ. of Melbourne, Australia},
series = {ACSE '97}
}

@article{10.1145/190616.993025,
author = {Hemaspaandra, Lane A .},
title = {Teaching Computational Complexity: Resources to Treasure},
year = {1994},
issue_date = {Dec. 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {25},
number = {4},
issn = {0163-5700},
url = {https://doi.org/10.1145/190616.993025},
doi = {10.1145/190616.993025},
abstract = {This article describes and discusses textbooks, monographs, and collections that are excellent resources from which to teach courses on computational complexity theory.},
journal = {SIGACT News},
month = {dec},
pages = {2–11},
numpages = {10}
}

@inproceedings{10.5555/1149126.1149193,
author = {Underwood, Jody S. and Bowers, Janet S.},
title = {Diverse settings for learning and teaching: preservice teachers learning pedagogy online and on-the-fly},
year = {2004},
publisher = {International Society of the Learning Sciences},
abstract = {In this article we assess the effectiveness of an Internet-based mathematics-mentoring program that was designed to enhance prospective teachers' ability to communicate with middle school students about mathematics. The mentoring involved reading solutions that students submitted to the Math Forum's online Problem of the Week, and writing feedback to those students after first practicing mentoring techniques in an online discussion forum. This report reports the results of a study held in two courses: one in the fall of 2000 (n=19 mentors), and the other in the spring of 2001 (n=10 mentors). We use quantitative data to document improvement trends in mentoring quality, and qualitative data to examine the program's success from the perspective of the prospective teachers. The results indicate that many of the prospective teachers learned to guide students' problem solving with questions and hints and learned about the range and types of solution methods that students use to solve problems.},
booktitle = {Proceedings of the 6th International Conference on Learning Sciences},
pages = {545–552},
numpages = {8},
location = {Santa Monica, California},
series = {ICLS '04}
}

@inproceedings{10.1145/3173519.3173538,
author = {\c{C}ubuk\c{c}u, \c{C}a\u{g}r\i{} and Wang, Bo and Goodman, Lizbeth and Mangina, Eleni},
title = {Gamification for Teaching Java},
year = {2017},
isbn = {9781450363884},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3173519.3173538},
doi = {10.1145/3173519.3173538},
abstract = {The term 'gamification' refers to the use of game elements in non-game environments like education, business, sales and marketing. The method of 'gamifying' has been applied in many different contexts and for many different reasons; for instance, in order to improve productivity, to increase sales, to motivate employees and customers, et al. In recent years, educators began to investigate the effects of different gamification elements within the context of education. There has been a considerable debate regarding the actual effects of gamification on the intrinsic motivation of students towards learning, and many research have been conducted in order to discover the results of 'gamifying' any specific course curriculum. Each research study has revealed another impediment, supported by multiple review studies that revealed significant problems with some of the methods of majority of studies in the research area now known as the 'gamification of education'. This paper explains the design, analysis and implementation process of an open-source gamification platform, which is aimed at providing a gamification platform for education, while also explaining a preliminary survey conducted on an Introduction to Java course. The platform was developed using multiple technologies and frameworks related to the Java programming language while the survey was conducted at third level education students through a quantitative questionnaire.},
booktitle = {Proceedings of the 10th EAI International Conference on Simulation Tools and Techniques},
pages = {120–130},
numpages = {11},
keywords = {Education, Gamification, Gamifying Education, Java Education, Software Engineering},
location = {Hong Kong, China},
series = {SIMUTOOLS '17}
}

@article{10.1145/2968453,
author = {Ko, Amy J. and Ladner, Richard E.},
title = {AccessComputing Promotes Teaching Accessibility},
year = {2016},
issue_date = {December 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {4},
issn = {2153-2184},
url = {https://doi.org/10.1145/2968453},
doi = {10.1145/2968453},
journal = {ACM Inroads},
month = {nov},
pages = {65–68},
numpages = {4}
}

@inproceedings{10.1145/2839509.2844619,
author = {Egelman, Serge and Bernd, Julia and Friedland, Gerald and Garcia, Dan},
title = {The Teaching Privacy Curriculum},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844619},
doi = {10.1145/2839509.2844619},
abstract = {A basic understanding of online privacy is essential to being an informed digital citizen, and therefore basic privacy education is becoming ever more necessary. Recently released high school and college computer science curricula acknowledge the significantly increased importance of fundamental knowledge about privacy, but do not yet provide concrete content in the area. To address this need, over the past two years, we have developed the Teaching Privacy Project (TPP) curriculum, http://teachingprivacy.org, which educates the general public about online privacy issues. We performed a pilot of our curriculum in a university course for non-CS majors and found that it was effective: weeks after last being exposed, students' privacy attitudes had shifted. In this paper, we describe our curriculum, our evaluation of it in the classroom, and our vision for future privacy education.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {591–596},
numpages = {6},
keywords = {online privacy, privacy curriculum, privacy education},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.1145/2512276.2512322,
author = {Gonzalez, Carlos and Border, Charles and Oh, Tae},
title = {Teaching in amazon EC2},
year = {2013},
isbn = {9781450322393},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2512276.2512322},
doi = {10.1145/2512276.2512322},
abstract = {As the trend of IT service consolidation continues to rise, organizations are now looking at hosting their services in the cloud to cut back on the costs of hosting their information systems locally. This presents an opportunity and challenge for higher learning institutions to prepare their students for the technology skills that are going to be in demand upon their graduation. In many aspects universities are already using virtual environments to teach many laboratory courses for distance students. However there is the need to introduce students to industry standard services that will better acquaint them with what is currently being used in the real world. This poster takes a look at the course 'Principles of System Administration' from the Networking Security and System Administration Department at Rochester institute of Technology and creates a foundation for moving the course over to the cloud using Amazon Web Services. It analyzes various cost scenarios, shortfalls of Amazon EC2 as a teaching platform, and proposes building a custom management system to better handle permissions.},
booktitle = {Proceedings of the 14th Annual ACM SIGITE Conference on Information Technology Education},
pages = {149–150},
numpages = {2},
keywords = {amazon ec2, cloud computing, elastic cloud computing, higher education, new technologies, teaching technology, virtual environments, virtual labs, virtual teaching},
location = {Orlando, Florida, USA},
series = {SIGITE '13}
}

@inproceedings{10.1145/2157136.2157254,
author = {Ciezki, Renee and Martin, Robert Glen and Ericson, Barbara and Wainwright, Lester},
title = {Teaching outside the text},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157254},
doi = {10.1145/2157136.2157254},
abstract = {We know that students bring diverse experiences and an assortment of learning styles into our classrooms. We greet them and hand out a syllabus listing the required textbook(s). One size does not fit all when it comes to textbooks. In this session, participants will discover teaching activities that can be used to supplement any computer science textbook. These activities include human modeling and role playing, interactive whiteboard activities, case studies, class projects, games, and more. By exploring "extra" activities not found in most textbooks, participants will learn how these hands-on, interesting and fun activities can help students understand the topics listed in the AP Computer Science A Course Description: Object-oriented Program Design, Program Implementation, Program Analysis, Standard Data Structures, Standard Algorithms, and Computing in Context. Student attention spans seem to be getting shorter. The panelists found themselves spending more and more time searching for and/or developing supplemental resources in efforts to reach and retain students. Members of the AP Computer Science-A Development Committee will share these resources and lead a discussion of proven strategies and lesson ideas for teaching outside the textbook.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {399–400},
numpages = {2},
keywords = {curriculuar resources, pedagogy},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/1868914.1869024,
author = {Richards, Mike and Smith, Neil},
title = {Teaching UbiComp with sense},
year = {2010},
isbn = {9781605589343},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1868914.1869024},
doi = {10.1145/1868914.1869024},
abstract = {Modern computer science education should take account of recent advances in smart and ubiquitous computing technologies. Ubicomp shows great potential to attract new learners. However, novice students find it needlessly difficult to learn concepts with existing programming languages, let alone the additional demands of programming sensors, actuators and networks. We have developed Sense, an extension to the graphical programming language Scratch, and an associated sensor/actuator board. Together, these will allow novice undergraduate students to quickly develop their own smart devices while learning the fundamentals of programming. Students will first study with Sense in 2011 but developmental feedback has been positive.},
booktitle = {Proceedings of the 6th Nordic Conference on Human-Computer Interaction: Extending Boundaries},
pages = {765–768},
numpages = {4},
keywords = {education, graphical languages, programming, ubiquitous computing},
location = {Reykjavik, Iceland},
series = {NordiCHI '10}
}

@article{10.5555/1352627.1352644,
author = {Braught, Grant and Wahls, Tim},
title = {Teaching objects in context},
year = {2008},
issue_date = {May 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {5},
issn = {1937-4771},
abstract = {Although there are many practical and pedagogical reasons for teaching objectsfirst in the CS I course, this approach can be difficult for both students and instructors. Students in the introductory class are not ready to design and develop applications that are complex enough to highlight the benefits of object orientation, and it is difficult for instructors to motivate the use of objects for simple programming tasks. The authors have designed a set of programming assignments that address these concerns. In these assignments, students declare fields and implement method bodies for one or more classes that integrate with instructor-provided code to produce a (relatively) complex application. As a result, the applications produced can be graphical and engaging, and can expose students to areas of computer science beyond programming.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {101–109},
numpages = {9}
}

@inproceedings{10.1145/1032297.1032306,
author = {Brown, C. Wayne},
title = {Teaching graphics using Ada},
year = {2004},
isbn = {1581139063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1032297.1032306},
doi = {10.1145/1032297.1032306},
abstract = {This paper describes several tools related to the Ada language that were developed to support the teaching of a computer graphics course. These tools include an updated and improved OpenGL Ada specification file, a VRML-to-code conversion tool, and an Ada-to-C conversion tool. The rational for the development of these tools and some issues related to their implementation are discussed.},
booktitle = {Proceedings of the 2004 Annual ACM SIGAda International Conference on Ada: The Engineering of Correct and Reliable Software for Real-Time &amp; Distributed Systems Using Ada and Related Technologies},
pages = {47–50},
numpages = {4},
keywords = {Ada, C, VRML, code conversion, computer graphics, cross compiling},
location = {Atlanta, Georgia, USA},
series = {SIGAda '04}
}

@inproceedings{10.1145/965106.965110,
author = {Tax\'{e}n, Gustav},
title = {Teaching computer graphics constructively},
year = {2003},
isbn = {9781450374590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/965106.965110},
doi = {10.1145/965106.965110},
abstract = {This paper is concerned with the teaching of interactive computer graphics. It provides a short overview of two influential constructivist epistemologies and describes a preliminary attempt to apply them in practical graphics education.},
booktitle = {ACM SIGGRAPH 2003 Educators Program},
pages = {1–4},
numpages = {4},
keywords = {computer graphics education, constructivism},
location = {San Diego, California},
series = {SIGGRAPH '03}
}

@article{10.5555/771832.771866,
author = {Courtney, Mary and D'Alessio, Steve and Murthy, Narayan and Pevac, Irena and Rao, Nagaraj},
title = {Teaching CS courses online},
year = {2003},
issue_date = {May 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {5},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {234–236},
numpages = {3}
}

@article{10.1145/44164.602326,
author = {Peelle, Howard A.},
title = {Education: APL in Teaching},
year = {1988},
issue_date = {March, 1988},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {3},
issn = {0163-6006},
url = {https://doi.org/10.1145/44164.602326},
doi = {10.1145/44164.602326},
journal = {SIGAPL APL Quote Quad},
month = {mar},
pages = {21},
numpages = {1}
}

@article{10.5555/1061073.1061078,
author = {Hill, I. D.},
title = {Concerning "Teaching ALGOL 60"},
year = {1966},
issue_date = {Sep. 1966},
publisher = {Computer History Museum},
address = {Mountain View, CA, USA},
number = {24},
issn = {0084-6198},
journal = {ALGOL Bull.},
month = {sep},
pages = {12},
numpages = {1}
}

@inproceedings{10.1145/3545947.3573355,
author = {Hislop, Gregory W. and Burdge, Darci and Wurst, Karl R.},
title = {Teaching Open Source: Successes and Challenges},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3573355},
doi = {10.1145/3545947.3573355},
abstract = {Free and Open Source Software (FOSS) is interesting to many students and provides an excellent opportunity to observe and practice many aspects of software product development and management. FOSS projects can motivate many software engineering concepts by providing scale, complexity, and on-going product evolution that is difficult to mimic in classroom-only materials. Open source projects have been a major source of innovation in software engineering and many FOSS projects provide excellent case studies of advanced practices in action. Finally, FOSS projects motivate students by providing an authentic, collaborative engagement environment for learning. This BoF will provide an opportunity for instructors to discuss successes and challenges of teaching open source (TOS) in undergraduate computing programs. The discussion topics will include: fitting TOS in an already full curriculum, types of TOS learning activities that can be shared, instructor preparation and getting started teaching open source.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1254},
numpages = {1},
keywords = {broadening participation in computing, computing for social good, hfoss education, humanitarian open source, teaching open source},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3368308.3415431,
author = {Pan, Jianping},
title = {Teaching from Home: Network Support Perspectives},
year = {2020},
isbn = {9781450370455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368308.3415431},
doi = {10.1145/3368308.3415431},
abstract = {In this paper, we examine the challenges of "teaching from home'' due to CoViD-19 with the viewpoint of information technology (IT) education in general and computer network support in particular, and offer some suggestions through our experience in Spring and Summer 2020 with input from IT support professionals, to create the very needed discussion among educators on this timely topic, which can be useful for Fall 2020 and beyond. Online teaching may become a considerable mode of course delivery in the post-pandemic era, even without another similar event.},
booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
pages = {299},
numpages = {1},
keywords = {computer network support, online teaching, teaching from home},
location = {Virtual Event, USA},
series = {SIGITE '20}
}

@inproceedings{10.1145/3369199.3369217,
author = {Proulx, Pierre and Lavoie, Francis B.},
title = {Transport Phenomena Teaching: a Modern Approach},
year = {2020},
isbn = {9781450372206},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3369199.3369217},
doi = {10.1145/3369199.3369217},
abstract = {Over the last 4 years, we have introduced in the Transport Phenomena courses the use of a flipped classroom with a novel web platform developed in our Department. This platform allows executing Python codes directly on the website and allows to follow and to quantify the overall progress of the students in the course. The platform and the use of python notebooks (Jupyter) aim at the use of the vast python open-source libraries to diminish the level tedious mathematical manipulations. The students can use the python packages as well to evaluate transport and thermodynamically properties calculations as well as the ever present mix of imperial, CGS and S.I. system of units that puzzles even seasoned engineers, thus keeping their focus on the basic principles and physical laws.},
booktitle = {Proceedings of the 3rd International Conference on Digital Technology in Education},
pages = {82–85},
numpages = {4},
keywords = {Jupyter notebooks, flipped class, open-source, python, symbolic computation},
location = {Yamanashi, Japan},
series = {ICDTE '19}
}

@article{10.5555/2382887.2382919,
author = {ElAarag, Hala},
title = {Teaching computer organization: a practical approach},
year = {2012},
issue_date = {December 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {2},
issn = {1937-4771},
abstract = {Computer organization is one of the core courses in the computing curricula. Providing a good applied experience in this course is crucial for all the computing disciplines, especially, if this important area is introduced to the students through just one course during their undergraduate education. In this paper, we share our classroom experience and present the different tools we use, whether hardware or software, that provide a practical understanding of the various aspects of computer organization and architecture that help solidify the students' knowledge in this area.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {210–217},
numpages = {8}
}

@article{10.1145/1734103.1734113,
author = {Dahiya, Deepak},
title = {Teaching software engineering: a practical approach},
year = {2010},
issue_date = {March 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {35},
number = {2},
issn = {0163-5948},
url = {https://doi.org/10.1145/1734103.1734113},
doi = {10.1145/1734103.1734113},
abstract = {In teaching software engineering, it is a major challenge to integrate applied methodology and theory into the practice of software development. Today teaching a course in software engineering involves a theoretical approach with white board and doing a project at the end of the course. Teaching Software engineering as a course involves many disciplines and requires delivering lectures accompanied by lecture demos and hands on lab sessions to accompany individual constituent topics or areas that form the bricks and mortar of this course. Only when the bricks and mortar of software engineering have delivered a solid foundation, is it then that software engineering as a course will be delivered in a true and meaningful sense. This paper presents a method to teach Software Engineering using the applied approach that the author designed and successfully used},
journal = {SIGSOFT Softw. Eng. Notes},
month = {mar},
pages = {1–5},
numpages = {5},
keywords = {methodology and project, software engineering, software process model, teaching}
}

@article{10.1145/1515698.1515712,
author = {Fekete, Alan D.},
title = {Teaching about threading: where and what?},
year = {2009},
issue_date = {March 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {1},
issn = {0163-5700},
url = {https://doi.org/10.1145/1515698.1515712},
doi = {10.1145/1515698.1515712},
abstract = {Trends in hardware and software are increasing the importance of concurrent programming, in the skill set expected of graduates. The curriculum is fairly full already, so teachers face complicated trade-offs in deciding how to incorporate additional material related to concurrency. In this paper we discuss some of the different ways to cover thread programming; we also survey the literature on this topic from the Computing Education community.},
journal = {SIGACT News},
month = {feb},
pages = {51–57},
numpages = {7}
}

@inproceedings{10.1145/1044550.1041670,
author = {Mason, John},
title = {Teaching by analogy: the switch statement},
year = {2004},
isbn = {9781450377942},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1044550.1041670},
doi = {10.1145/1044550.1041670},
abstract = {Many beginning programming students have difficulty mastering the C++/Java concept of the switch statement. This paper provides a classroom tested analogy that allows students to map a "real world" concept that they already understand to the switch statement, thus making comprehension much easier.},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {105–107},
numpages = {3},
keywords = {analogy, methodology, switch},
location = {Leeds, United Kingdom},
series = {ITiCSE-WGR '04}
}

@inproceedings{10.1145/3572549.3572598,
author = {Yin, Liyan and Yang, Zezhong},
title = {Research on the Influence of Teaching Methods on Mathematics Academic Achievement of College Students During Online Teaching},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572598},
doi = {10.1145/3572549.3572598},
abstract = {Affected by COVID-19, many mathematics courses in college are currently taught online. However, studies revealed its effect is unsatisfactory. For this problem, many scholars thought the teaching method of teachers is one of the main affecting factors and discussed many different teaching methods. Based on these teaching methods, we interviewed 273 college students majoring in mathematics with questionnaires in China and explored the effectiveness of different teaching methods with the way of neural network analysis. It could be found that there are twenty-one main teaching methods that can promote the mathematics academic achievement of college students during online teaching. Among them, the methods such as teachers uploading electronic teaching materials for students to learn before class, teachers using electronic equipment to demonstrate the derivation process to the students in class, teachers showing students universal errors through the network platform and giving correct answers, and teachers tutoring students individually through the network platform after class is the most influential four teaching methods. Meanwhile, there are four main teaching methods that can hinder the improvement of mathematics academic achievement of college students during online teaching, which are teachers use the voice function to teach knowledge in class, teachers play prefabricated teaching videos in class, teachers encourage students to use network technology to discuss with each other in class, teachers evaluate students' homework in text after class.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {304–310},
numpages = {7},
keywords = {Academic Achievement, College, Mathematics, Online Teaching, Teaching Method},
location = {<conf-loc>, <city>Barcelona</city>, <country>Spain</country>, </conf-loc>},
series = {ICETC '22}
}

@inproceedings{10.1145/3535735.3535740,
author = {Huang, Min and Yuan, Hua and Sun, Bo},
title = {Offline Teaching Method in Blended Teaching mode of Improving the Innovation Ability of Students in IT Majors},
year = {2022},
isbn = {9781450396196},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3535735.3535740},
doi = {10.1145/3535735.3535740},
abstract = {At present, all kinds of innovative applications of artificial intelligence, big data and other technologies in various industries and fields make the demands for the cultivation of innovative ability of IT talents more urgent. Aiming at the problem of insufficient cultivation of students' innovative ability in the existing blended teaching mode, this paper puts forward a theoretical teaching method based on four-stage and problem-oriented in the offline class, and a practical teaching method based on "entrepreneurial thinking". In the former teaching method, by dividing the explanation of a concrete theoretical knowledge into four stages: "concept", "problem", "application" and "innovation", and at the same time, designing some progressive problems in each stage to guide students to deepen their knowledge understanding and inspire their innovative thinking around the application and innovation of knowledge, and an example has been given to well illustrate the method. Meanwhile, in the latter teaching method, this paper also presents a practical teaching method based on "entrepreneurial thinking" to optimize the practical teaching links of the courses in IT major, in which the project-based teaching method and entrepreneurial thinking are adopted , and the practical process is divided into several stages as "demand analysis and topic selection", "scheme design", "scheme implementation" and "application and promotion", At each stage, some concrete guiding measures and examination and evaluation methods have been designed to effectively stimulate students' innovative thinking and innovative ability specific. Through the application of the above methods to the teaching practices in the "computer network" course, it is proved that this method plays a promoting role in the development of students' innovation and practical abilities.},
booktitle = {Proceedings of the 7th International Conference on Information and Education Innovations},
pages = {30–34},
numpages = {5},
keywords = {Cultivation of innovation ability, IT major, blended teaching mode, offline teaching methods},
location = {Belgrade, Serbia},
series = {ICIEI '22}
}

@inproceedings{10.1145/3544548.3581572,
author = {Zegura, Cass and Shapiro, Ben Rydal and MacDonald, Robert and Borenstein, Jason and Zegura, Ellen},
title = {“Moment to Moment”: A Situated View of Teaching Ethics from the Perspective of Computing Ethics Teaching Assistants},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3581572},
doi = {10.1145/3544548.3581572},
abstract = {The HCI research community has long centered ethics in HCI research and practice. This interest has persisted as scholars highlight the need for more situated understandings and deeper integration of ethics into HCI. In parallel, HCI scholars and students have become increasingly involved in teaching computing ethics across many different university contexts, bringing in valuable perspectives informed by the connections between HCI and the socio-technical subject matter of computing ethics. Yet explicitly bringing these two threads together – examining the teaching of ethics through an HCI research lens – remains nascent. This paper integrates work in HCI and computing education to focus on the role and experience of computing ethics teaching assistants (CETAs), who are increasingly involved in ethics instruction and whose perspectives are predominantly missing in existing literature spanning HCI and computing education. Drawing on HCI theories and methods, our qualitative study of eleven CETAs at two American universities makes three contributions to the HCI literature. First, we build an understanding of who these TAs are with respect to the unique position of teaching computing ethics. Second, we characterize how CETAs’ teaching and learning is situated and shaped within different communities and institutional contexts. Finally, we suggest several implications for the design of ethics instruction within undergraduate computing programs. More broadly, our work can be viewed as a call to action, encouraging HCI scholars to play a more significant role in studying and designing the teaching and learning of computing ethics.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {716},
numpages = {15},
keywords = {Community of practice, Computing ethics, Situated teaching and learning, Teaching assistants},
location = {<conf-loc>, <city>Hamburg</city>, <country>Germany</country>, </conf-loc>},
series = {CHI '23}
}

@inproceedings{10.1145/3543321.3543338,
author = {Li, Siyang and Ma, Yuxuan and Wan, Youyan},
title = {Comparative study of traditional teaching and blended teaching: takes the university mathematical analysis course as an example},
year = {2022},
isbn = {9781450396417},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3543321.3543338},
doi = {10.1145/3543321.3543338},
abstract = {Taking 210 students of mathematical analysis as the research object, this paper uses correlation analysis and regression analysis to compare the influence of traditional teaching and blended teaching on the teaching effect of mathematical analysis. The results show that the students' final scores adopt online and offline teaching methods are better than those of traditional offline teaching. Online learning under blended teaching mode was positively correlated with final score. The indexes of daily homework and classroom interaction in online learning are significantly correlated with students' final scores. The regression model established by these two indexes can be used to predict students' final scores and play a role of academic warning.},
booktitle = {Proceedings of the 7th International Conference on Distance Education and Learning},
pages = {102–108},
numpages = {7},
keywords = {blended teaching, correlation analysis, online learning, regression analysis, traditional teaching},
location = {Beijing, China},
series = {ICDEL '22}
}

@inproceedings{10.1145/3399971.3399972,
author = {Xiaoqi, Feng and Xingnan, Chen and Xiaoyu, Guo and Shijue, Zheng},
title = {Representation of "AR" Training Model for Teaching Chinese as a Foreign Language under the Teaching Innovation Model},
year = {2020},
isbn = {9781450387989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3399971.3399972},
doi = {10.1145/3399971.3399972},
abstract = {The "AR" teaching innovation model for Chinese as a foreign language uses virtual space for teaching Chinese as a foreign language, provides learners with a new way and builds a virtual space for learners to explore independently. Based on the innovative teaching model, the article models the "AR" visual training process for teachers of Chinese as a foreign language. The model comprehensively represents the five parts of the training process. Aiming at the "AR" visual training process model, the article establishes the teaching effect evaluation model, which is analyzed from the subjective factors and the objective factors respectively. The results verify the effectiveness of the "AR" visual training process model and show that the training process model is helpful to the implementation of the "AR" teaching innovation model for Chinese as a foreign language.},
booktitle = {Proceedings of the 2020 6th International Conference on Education and Training Technologies},
pages = {1–4},
numpages = {4},
keywords = {AR training model, Chinese teachers for foreigners, teaching effect evaluation model, teaching innovation model},
location = {Macau, China},
series = {ICETT '20}
}

@article{10.1145/2915136.2908383,
author = {Norman, Marie},
title = {Teaching Online Can Make Us Better Teachers},
year = {2016},
issue_date = {04-01-2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2016},
number = {4},
url = {https://doi.org/10.1145/2915136.2908383},
doi = {10.1145/2915136.2908383},
abstract = {Online education gives teachers unique opportunities to more profoundly bring learning research and learner-centered teaching practices into their teaching. This article examines five reasons online teaching can lead teachers in healthy directions by exploring the (beneficial) challenges of lecturing online, the untapped potential of student-generated content, the critical importance of student motivation, the social and emotional components of learning, and the benefits of multi-sensory learning.},
journal = {ELearn},
month = {apr},
articleno = {1}
}

@article{10.5555/2379703.2379721,
author = {Periyasamy, Kasi and Riley, Dave and Hunt, Kenny and Hansen, Stuart and Langhals, Paul},
title = {Teaching CS 1: object-first or algorithmic},
year = {2012},
issue_date = {October 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {1},
issn = {1937-4771},
abstract = {Before object-oriented techniques were developed, procedural programming languages such as Pascal and C were taught in CS 1 courses. By virtue of the procedural paradigm, the focus of programming was on algorithms. Consequently, teaching methods concentrated on how to develop functions or methods that implement efficient algorithms using the various syntactic structures in the language. When object-oriented approach was brought into the curriculum, teaching methods still maintained the algorithmic focus but within the context of the object-oriented paradigm. The objects-first movement emerged and encouraged instructors to emphasize object modeling as an early focus of instruction. That is, students will start writing code with objects and their behaviors from the beginning of the curriculum.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {111–112},
numpages = {2}
}

@inproceedings{10.1145/236452.236518,
author = {Daniels, Mats and Gal-Ezer, Judith and Sanders, Ian and Teague, G. Joy},
title = {Teaching computer science: experience from four continents},
year = {1996},
isbn = {089791757X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/236452.236518},
doi = {10.1145/236452.236518},
abstract = {In this paper we compare and contrast computer science curricula in four universities in four different countries (and continents): Australia; Israel; South Africa and Sweden. Uppsala University in Sweden is a European university founded in 1477 with a long history of tradition. The University of Witwatersrand in South Africa and Deakin University in Australia evolved from 'Schools of Mines' (technical schools) in 1922 and 1977 respectively and have their roots in the British academic system. The Open University of Israel, established in 1974 by the Ministry of Education, began teaching in 1976. As new universities, Deakin University and the Open University of Israel sought to fill needs not met by existing universities, so both have concentrated on distance learning (off-campus) programs. For similar reasons, Deakin University and the Open University of Israel also provide special non-degree short courses and programs. We refer to undergraduate and graduate studies and consider degree requirements, methods of delivery, assessment, and costs. We also briefly mention such issues as programming languages and the development and evolution of programs of study and of individual courses in the four universities.},
booktitle = {Proceedings of the Twenty-Seventh SIGCSE Technical Symposium on Computer Science Education},
pages = {102–106},
numpages = {5},
location = {Philadelphia, Pennsylvania, USA},
series = {SIGCSE '96}
}

@inproceedings{10.1145/2908131.2908212,
author = {Anand, Avishek and Bailey, Jefferson},
title = {Exploring the past of the web: alexandria &amp; archive-it hackathon},
year = {2016},
isbn = {9781450342087},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2908131.2908212},
doi = {10.1145/2908131.2908212},
abstract = {The Web has pervaded all walks of life and has become an important corpus for studying the humanities, social sciences, and for use by computer scientists and other disciplines. Web archives collect, preserve, and provide ongoing access to ephemeral Web pages and hence encode traces of human thought, activity, and history. This makes them a valuable resource for analysis and study. However, there have been only few concerted efforts to bring together tools, platforms, storage, processing frameworks, and existing collections for mining and analysing Web archives.},
booktitle = {Proceedings of the 8th ACM Conference on Web Science},
pages = {14},
numpages = {1},
location = {Hannover, Germany},
series = {WebSci '16}
}

@inproceedings{10.1145/3323771.3323778,
author = {Bing, Kang and Dong-mei, Yan and Xiao-tuo, Zhang},
title = {Reflections on Building Complementary Innovative Teaching Model in Modern Colleges and Universities Based on Projects and Teaching},
year = {2019},
isbn = {9781450366397},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3323771.3323778},
doi = {10.1145/3323771.3323778},
abstract = {In recent years, the development model of university teaching modules has always been a hot topic for domestic and foreign universities. The complementary innovative teaching model based on projects and teaching is a new type of practical teaching mode explored by a small number of institutions of higher learning. Dealing with the relationship between scientific research projects and teaching modules, using the resources of scientific research projects, translating into practical teaching content, improving the quality of practical teaching, cultivating more young teachers and students' scientific research capabilities, and further advancing the research progress of scientific research projects. Through the exchange of scientific research projects and practical teaching modules for export and entrance, training young teachers and students to master comprehensive analysis and problem-solving skills in engineering projects is a new mode of training for high-level institutions at home and abroad.},
booktitle = {Proceedings of the 2019 7th International Conference on Information and Education Technology},
pages = {244–247},
numpages = {4},
keywords = {Complementary, New teaching model, Research level},
location = {Aizu-Wakamatsu, Japan},
series = {ICIET 2019}
}

@article{10.1145/3381906,
author = {Guzdial, Mark},
title = {Teaching teachers to offer STEM to undergrads},
year = {2020},
issue_date = {April 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {63},
number = {4},
issn = {0001-0782},
url = {https://doi.org/10.1145/3381906},
doi = {10.1145/3381906},
abstract = {The Communications Web site, http://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttp://cacm.acm.org/blogs/blog-cacmMark Guzdial considers how teaching computing to undergraduates requires better education of the teachers as well.},
journal = {Commun. ACM},
month = {mar},
pages = {10–11},
numpages = {2}
}

@article{10.5555/3533738.3533744,
author = {Shebaro, Bilal},
title = {Teaching blockchain in security},
year = {2022},
issue_date = {April 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {7},
issn = {1937-4771},
abstract = {The increased interest in using blockchain technology in real-world and virtual applications makes it a desirable topic for students to learn more about. The implementation details of such a technology includes some of the major topics that are usually covered in introductory computer security courses. Digital signatures and crypto hashing are among the taught topics that are applied in the blockchain technology and implemented in cryptocurrency systems such as Bitcoins and Ethereum. Having all these computer security topics combined in one application makes it attractive for course instructors to examine with students in order to improve their course learning outcomes. Therefore, this paper highlights on the importance of teaching the blockchain implementation details in a computer security course, and provides an example of a class-wide interactive student activity that mocks the blockchain implementation to enrich students with hands-on experience of these computer security concepts.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {48–54},
numpages = {7}
}

@inproceedings{10.1145/3287324.3287406,
author = {Lalande, Jean-Fran\c{c}ois and Viet Triem Tong, Val\'{e}rie and Graux, Pierre and Hiet, Guillaume and Mazurczyk, Wojciech and Chaoui, Habiba and Berthom\'{e}, Pascal},
title = {Teaching Android Mobile Security},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287406},
doi = {10.1145/3287324.3287406},
abstract = {At present, computer science studies generally offer courses addressing mobile development and they use mobile technologies for illustrating theoretical concepts such as operating system, design patterns, and compilation because Android and iOS use a large variety of technologies for developing applications. Teaching courses on security is also becoming an important concern for academics, and the use of mobile platforms (such as Android) as supporting material is becoming a reasonable option. In this paper, we intend to bridge a gap in the literature by reversing this paradigm: Android is not only an opportunity to learn security concepts but requires strong pedagogical efforts for covering all the aspects of mobile security. Thus, we propose teaching Android mobile security through a two-dimensional approach. The first dimension addresses the cognitive process of the Bloom taxonomy, and the second dimension addresses the technical layers of the architecture of the Android operating system. We describe a set of comprehensive security laboratory courses covering various concepts, ranging from the application development perspective to a deep investigation of the Android Open Source Project and its interaction with the Linux kernel. We evaluated this approach, and our results verify that the designed security labs impart the required knowledge to the students.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {232–238},
numpages = {7},
keywords = {mobile, security, teaching},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@article{10.1145/2405716.2405735,
author = {van der Veer, Gerrit C.},
title = {Teaching HCI in China},
year = {2013},
issue_date = {January + February 2013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {1},
issn = {1072-5520},
url = {https://doi.org/10.1145/2405716.2405735},
doi = {10.1145/2405716.2405735},
journal = {Interactions},
month = {jan},
pages = {82},
numpages = {1}
}

@article{10.1145/2003616.2003636,
author = {Hasni, Tahreem Fatima and Lodhi, Fakhar},
title = {Teaching problem solving effectively},
year = {2011},
issue_date = {September 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {3},
issn = {2153-2184},
url = {https://doi.org/10.1145/2003616.2003636},
doi = {10.1145/2003616.2003636},
abstract = {To teach students problem solving effectively it is important to guide them properly through the process of problem solving. Most of the programming lab exercises lack emphasis on practicing the process of problem solving. Based on our experience, we have suggested a guideline to design lab exercises. In which we emphasize on defining detailed steps to guide students through the process of problem solving. We have proven through experiments that lab exercises designed with guidelines provided to solve the problem are very effective way of teaching problem solving skills.},
journal = {ACM Inroads},
month = {aug},
pages = {58–62},
numpages = {5},
keywords = {problem-solving process, programming laboratory course}
}

@inproceedings{10.1145/1179295.1179337,
author = {Spalter, Anne Morgan and Tenneson, Dana K.},
title = {The graphics teaching tool},
year = {2006},
isbn = {1595933646},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1179295.1179337},
doi = {10.1145/1179295.1179337},
abstract = {To be a "literate" citizen one must increasingly be able to critically evaluate digital visual materials, make decisions using digital visual representations of data and ideas, and use computers to create effective visual communications. To be literate in this sense demands at least a basic understanding of computer graphics principles. Existing curricular resources, however, are chiefly aimed at students studying computer science and related fields. For the majority of students, who do not pursue technical degrees, there is virtually no recognition of the importance of basic graphics principles or even reference to their existence. To address the needs of this audience we have developed a novel interactive Graphics Teaching Tool (GTT). The GTT is a Java-based application (and applet) that offers 2D and 3D graphics in a single environment. It is expressly designed for teaching and uses a mental model-based pedagogical approach not found in commercial graphics software.},
booktitle = {ACM SIGGRAPH 2006 Educators Program},
pages = {41–es},
keywords = {IT literacy, Java, computer graphics, data representation, education, educational software, free software, visual literacy},
location = {Boston, Massachusetts},
series = {SIGGRAPH '06}
}

@article{10.1145/637437.637449,
author = {Ross, Rocky},
title = {Teaching (and research) squeezed},
year = {2003},
issue_date = {March 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {1},
issn = {0163-5700},
url = {https://doi.org/10.1145/637437.637449},
doi = {10.1145/637437.637449},
journal = {SIGACT News},
month = {mar},
pages = {68–77},
numpages = {10}
}

@inproceedings{10.1145/349316.349391,
author = {Dale, Nell B.},
title = {Distance teaching at Uppsala},
year = {1999},
isbn = {9781450373258},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/349316.349391},
doi = {10.1145/349316.349391},
abstract = {This is not a research paper about distance learning or teaching, but rather a chronicle of the author's two-month visit to a department in another country where she taught a course similar to CS2 as a distance learning course. Hence, the title.},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {39–41},
numpages = {3},
location = {<conf-loc>, <city>Cracow</city>, <country>Poland</country>, </conf-loc>},
series = {ITiCSE-WGR '99}
}

@inproceedings{10.1145/76738.76783,
author = {O'Keefe, R. M. and Davies, R. M.},
title = {Teaching simulation with Pascal_SIM},
year = {1989},
isbn = {0911801588},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/76738.76783},
doi = {10.1145/76738.76783},
abstract = {Pascal_SIM is a tool kit for producing simulations in Pascal, developed specifically for teaching discrete event simulation. We have gained considerable experience with Pascal_SIM, and have produced a text called Simulation Modelling with Pascal (published by Prentice Hall International) that is based upon these routines. This tutorial is an introduction to using Pascal and Pasca_SIM as a basis for teaching simulation.},
booktitle = {Proceedings of the 21st Conference on Winter Simulation},
pages = {360–364},
numpages = {5},
location = {Washington, D.C., USA},
series = {WSC '89}
}

@inproceedings{10.1145/318123.318339,
author = {Schruben, Lee and Briskman, David},
title = {Teaching simulation with Σ},
year = {1988},
isbn = {0911801421},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/318123.318339},
doi = {10.1145/318123.318339},
abstract = {Σ (pronounced SIGMA denoting Simulation Graphical Modeling and Analysis) is an interactive graphics approach to building, testing, and experimenting with discrete event simulation models on personal computers. Σ is written in C but is self-contained and does not need a compiler or special graphics software. Σ is an extension of the simulation teaching system report in [2].The version of Σ described here requires an IBM PC compatible computer (AT preferred) with at least 420K of free memory, a floppy disk drive, an EGA or equivalent monitor with the corresponding graphics card, and a mouse.},
booktitle = {Proceedings of the 20th Conference on Winter Simulation},
pages = {869–874},
numpages = {6},
location = {San Diego, California, USA},
series = {WSC '88}
}

@article{10.1145/47931.602327,
author = {Peelle, Howard A.},
title = {Education: APL in teaching},
year = {1988},
issue_date = {June 1988},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {4},
issn = {0163-6006},
url = {https://doi.org/10.1145/47931.602327},
doi = {10.1145/47931.602327},
journal = {SIGAPL APL Quote Quad},
month = {jun},
pages = {12},
numpages = {1}
}

@inproceedings{10.1145/1384271.1384393,
author = {Hollingsworth, Joseph E.},
title = {Teaching query writing: an informed instruction approach},
year = {2008},
isbn = {9781605580784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1384271.1384393},
doi = {10.1145/1384271.1384393},
abstract = {This paper is intended for those instructors asked to teach an undergraduate introductory class on SQL query writing, which is usually difficult for students to learn. After reading Bruer's Schools for Thought [1], we realized that we need to modify our approach so that it uses informed instruction (instead of traditional instruction) and since have noticed improvements in student performance in SQL query writing.},
booktitle = {Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {351},
numpages = {1},
keywords = {course pedagogy, database},
location = {Madrid, Spain},
series = {ITiCSE '08}
}

@article{10.5555/1289280.1289322,
author = {Allison, Charles D. and Harrison, Neil B.},
title = {Teaching design patterns: a matter of principle},
year = {2007},
issue_date = {October 2007},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {1},
issn = {1937-4771},
abstract = {The patterns movement in software design has provided a framework for codifying and communicating solutions for commonly encountered design challenges. Design patterns are not intended to be only entries in a cookbook, however; they emerge by following good design principles to balance the forces present in a software development context. According to the authors' experience, design patterns are best presented in concert with the design principles that bring them to life. This paper discusses the interrelation between design patterns and principles and reports on a pilot course in teaching the principles and patterns of software design that, after two successful semesters, has recently been adopted as a requirement in a newly inaugurated bachelor's degree in software engineering.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {206–211},
numpages = {6}
}

@inproceedings{10.1145/3328778.3366951,
author = {Reich, Rob and Sahami, Mehran and Weinstein, Jeremy M. and Cohen, Hilary},
title = {Teaching Computer Ethics: A Deeply Multidisciplinary Approach},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366951},
doi = {10.1145/3328778.3366951},
abstract = {We report on a curricular experiment at Stanford University focused on teaching computer ethics. After nearly a year of preparation, we launched a new course at the intersection of ethics, public policy, and technology that deeply marries the humanities, social sciences, and computer science. While the teaching of computer ethics courses dates back decades, such courses are often taught by a (single) CS faculty member without significant training in ethics, do not include a policy component, and are meant for CS students. By contrast, we take a deeply multidisciplinary approach, where three faculty instructors, from philosophy, political science, and CS, each bring their respective lens to four related course modules: algorithmic decision-making, data privacy and civil liberties, AI and autonomous systems, and the power of platform companies. Panels of guest speakers drawn from academia, industry, civil society, and government provide a practitioner's view of the topics addressed. Additionally, custom case studies were developed under the direction of the course staff. These materials (videos of the speaker panels and the case studies) are freely available for use by the broader community. We report on the details of the course structure, including how multiple disciplines are integrated throughout the course, including lectures, discussions, and assignments. We discuss aspects of the course that worked well as well as challenges in making the course broadly accessible (beyond just CS majors). Importantly, we also include a discussion of students' response to the course, showing that a deeply multidisciplinary approach resonates strongly with them.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {296–302},
numpages = {7},
keywords = {computer ethics, humanities, multidisciplinary, social science},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/1121341.1121434,
author = {Polze, Andreas and Probert, Dave},
title = {Teaching operating systems: the windows case},
year = {2006},
isbn = {1595932593},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1121341.1121434},
doi = {10.1145/1121341.1121434},
abstract = {An operating system (OS) is a program that manages computer hardware. And although today's commercial-off-the-shelf desktop operating systems appear to be an integral part of PCs and workstation to many users, a fundamental understanding of the algorithms, principles, heuristics, and optimizations used is crucial for creating efficient application software. Furthermore, many of the principles in OS courses are relevant to large system applications like databases and web servers.Within this paper, we present our approach towards teaching OS concepts based on the Windows family of operating systems. In contrast to many stable Unix-based curricula, a Windows-based OS curriculum has to take into account the OS as a moving target. And although Windows source code has been made available to academic institutions, managing complexity is among the biggest challenges when teaching OS concepts based on Windows.Teaching experiences reported within this paper have lead to development of the "Curriculum Resource Kit (CRK)", an entire Windows-based OS curriculum that is freely available for download.},
booktitle = {Proceedings of the 37th SIGCSE Technical Symposium on Computer Science Education},
pages = {298–302},
numpages = {5},
keywords = {OS curriculum, windows},
location = {Houston, Texas, USA},
series = {SIGCSE '06}
}

@inproceedings{10.1145/369585.369619,
author = {Burd, Barry},
title = {Experience teaching Java: a preliminary report},
year = {1996},
isbn = {0897918452},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/369585.369619},
doi = {10.1145/369585.369619},
booktitle = {Proceedings of the 1st Australasian Conference on Computer Science Education},
pages = {197–201},
numpages = {5},
location = {Sydney, Australia},
series = {ACSE '96}
}

@inproceedings{10.1145/3501385.3543962,
author = {Jia, Xiaohua and Hermans, Felienne},
title = {Teaching Quality in Programming Education: the Effect of Teachers’ Background Characteristics and Self-efficacy},
year = {2022},
isbn = {9781450391948},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501385.3543962},
doi = {10.1145/3501385.3543962},
abstract = {Teaching practices play a crucial role in improving students' learning outcomes in mathematics and science. Previous studies have revealed teaching strategies for improving students' programming knowledge and skills in programming education. However, we know relatively little about teachers' use of teaching practices and the factors that may affect teachers' use of them in their programming classrooms. This paper examines teachers' use of teaching practices in their programming classrooms and explores the effect of their background characteristics and self-efficacy. Data are collected from a survey of 164 teachers who taught Scratch programming to students in primary and secondary schools in China. The results reveal that teachers frequently use integrated direct instruction and classroom management strategies for teaching programming with Scratch. We find no significant effect of teachers' background characteristics (gender, subject major, Scratch learning experience, and grade level taught) on their use of integrated direct instruction and classroom management strategies. In addition, there is no significant correlation between teaching experience and teaching practices in terms of integrated direct instruction and classroom management strategies, respectively. When exploring the effect of teachers' self-efficacy on teaching practices in programming classrooms, we find that teachers' self-efficacy is an essential factor that significantly correlates with the application of integrated direct instruction and classroom management strategies. Teachers with high self-efficacy are found to use integrated direct instruction and classroom management strategies more often than teachers with medium and low self-efficacy. These findings lay the groundwork for future research into investigating teaching practices in programming education.},
booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 1},
pages = {223–236},
numpages = {14},
keywords = {Scratch, programming education, teachers’ background characteristics, teachers’ self-efficacy, teaching practices},
location = {Lugano and Virtual Event, Switzerland},
series = {ICER '22}
}

@inproceedings{10.1145/1900008.1900016,
author = {Dann, Wanda and Lawhead, Pamela and Choong, Aik Min},
title = {Teaching with Alice 3: tutorial},
year = {2010},
isbn = {9781450300643},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1900008.1900016},
doi = {10.1145/1900008.1900016},
abstract = {This tutorial, designed for instructors of CS1/AP, introduces Alice3 with built-in transition from Alice to Java. The workshop offers hands-on experience programming with Alice3 and integrating a transition to Java IDE, e.g. NetBeans. Alice3 builds on Alice2's powerful program visualization technique, enabling students to "see" objects and work with object- oriented programming.},
booktitle = {Proceedings of the 48th Annual Southeast Regional Conference},
articleno = {4},
numpages = {1},
keywords = {3D, animation, classes, objects, visualization},
location = {Oxford, Mississippi},
series = {ACM SE '10}
}

@article{10.5555/1859159.1859175,
author = {Vitolo, Theresa M.},
title = {Teaching emerging technology: challenges, outcomes, and options},
year = {2011},
issue_date = {January 2011},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {26},
number = {3},
issn = {1937-4771},
abstract = {Incorporating an emerging technology into information systems curriculums is a task embraced by information systems educators, attempting to keep curriculums abreast of the constantly changing technology horizon. The four challenges to be faced and addressed are (1) restrictions of current curriculums to allow for previously unspecified content, (2) ability and opportunities available to the educator to become competent with the technology, (3) identification of student materials to enhance the learning, and (4) potentially transient acceptance of the topic by the mainstream professional community as a significant technology. Each of these challenges is not insurmountable but can be alleviated by a clear statement of learning outcomes relative to the technology and by a plan to incrementally present aspects of the technology as a part of a larger, ever-changing spectrum of related, integrated options. The emerging technology topic of service-oriented architecture (SOA) as an implementation focus was incorporated into a required course. The four challenges are portrayed in the context of including SOA into the course.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {75–82},
numpages = {8}
}

@inproceedings{10.1145/369585.369661,
author = {Allison, Ian K. and Halstead, Peter},
title = {Teaching computer ethics: an alternative assessment approach},
year = {1996},
isbn = {0897918452},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/369585.369661},
doi = {10.1145/369585.369661},
booktitle = {Proceedings of the 1st Australasian Conference on Computer Science Education},
pages = {317–322},
numpages = {6},
location = {Sydney, Australia},
series = {ACSE '96}
}

@article{10.1145/3453647,
author = {Guzdial, Mark},
title = {Teaching other teachers how to teach CS better},
year = {2021},
issue_date = {May 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {64},
number = {5},
issn = {0001-0782},
url = {https://doi.org/10.1145/3453647},
doi = {10.1145/3453647},
abstract = {The Communications website, http://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttp://cacm.acm.org/blogs/blog-cacmMark Guzdial shares how he assesses the efforts of other computer science teachers.},
journal = {Commun. ACM},
month = {apr},
pages = {8–9},
numpages = {2}
}

@inproceedings{10.1145/3482632.3483064,
author = {Guo, Yujing},
title = {Challenge of Multimedia-Assisted Piano Teaching to Traditional Piano Teaching Mode Based on Internet and Information Technology},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3483064},
doi = {10.1145/3482632.3483064},
abstract = {With the advancement of society and the increase of computer, network and multimedia technology, multimedia technology has become an indispensable part of modern service industry. The children's students are placed at the top of the family by their parents, and they have invested a lot of time and energy. As the king of musical instruments, the piano is also regarded as the first choice for musical enlightenment education. This article mainly introduces the challenge of multimedia-assisted piano teaching to the traditional piano teaching mode, and uses multimedia technology to make a reasonable analysis of the piano teaching class. This article uses multimedia technology to improve and develop traditional piano teaching, uses the network education model for classroom analysis, and systematically constructs piano teaching, reintegrates various music education resources, builds a sufficiently broad music network resource sharing platform, and expands the audience of the music society crowd effectively improves the music literacy of amateur music lovers in society. The experimental results of this paper show that multimedia-assisted piano teaching increases the efficiency of piano learning and training by 15%, and improves the teaching quality of traditional piano education.},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {973–977},
numpages = {5},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@inproceedings{10.1145/2676723.2678308,
author = {Friedland, Gerald and Egelman, Serge and Garcia, Daniel},
title = {Teaching Privacy: What Every Student Needs to Know (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2678308},
doi = {10.1145/2676723.2678308},
abstract = {Although frequent stories in the popular media have raised awareness about online privacy, most young people do not have a very good handle on what the specific issues are, nor the practical steps they can take to manage them. Teachers recognize that all their students' from future engineers to those totally bored by science need a realistic understanding of how online privacy works, so they can protect themselves online. In fact, the latest CS curricular recommendations include privacy but there is no comprehensive set of field-tested teaching materials. To address this, we are developing TROPE (Teachers' Resources for Online Privacy Education), a set of classroom-ready teaching materials (teachingprivacy.org). TROPE will provide educators with lesson modules, interactive demonstrations, and a teachers' guide, so they can readily integrate privacy into high school and college classes. Our goal for this workshop is twofold. First, we will introduce educators to TROPE and provide guidance on how they can cover privacy-related topics in their classrooms without being subject-matter experts. Second, we will solicit feedback and on-the-ground stories; by gaining a better understanding of specific problems faced by educators and students, we can increase TROPE's utility to teachers. We will provide teachers with up-to-date technical information about online privacy, including relevant highlights from our research; hands-on activities illustrating principles of online privacy; and an overview of the materials we are creating for TROPE. This will be an interactive workshop, driven by participants' questions, experiences, and interests. For CS educators at all levels; laptop or tablet recommended.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {713},
numpages = {1},
keywords = {computer science, high school, privacy education, teachers, undergraduate},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/1500412.1500498,
author = {Kerr, Edwin F.},
title = {People teaching people: a cooperative education venture},
year = {1981},
isbn = {9781450379212},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1500412.1500498},
doi = {10.1145/1500412.1500498},
abstract = {Personnel problems faced by DP executives will continue to be a major obstacle in developing systems for the 1980's. Both corporate and DP management are now viewing personnel development expenditures as an investment rather than an expense. This paper stresses the need for a career development program and a well planned education and training activity. It discusses the difficulty of providing the training, particularly classroom instructor-led courses. It next discusses a cooperative EDP Education Program (EDPEP) covering the concept, the establishing of a network of regional learning centers and the impact it has made. The program provides regularly scheduled classes to member companies at under $100/day. Since its inception in 1974, it has grown to 75 member companies. In 1980 over 3,600 students attended the courses.},
booktitle = {Proceedings of the May 4-7, 1981, National Computer Conference},
pages = {597–599},
numpages = {3},
location = {Chicago, Illinois},
series = {AFIPS '81}
}

@inproceedings{10.1145/1226969.1227009,
author = {Khandelwal, Madhur and Mazalek, Ali},
title = {Teaching table: a tangible mentor for pre-k math education},
year = {2007},
isbn = {9781595936196},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1226969.1227009},
doi = {10.1145/1226969.1227009},
abstract = {In this paper, we describe the design and implementation of Teaching Table -- an interactive tabletop audio-visual device aimed at enhancing the learning experience for pre-kindergarten children by involving them in physical activities. Using electromagnetic sensing technology, the table can track tagged objects placed on its surface, accurately identifying their type and location while providing a coincident visual display and audio feedback. Teaching activities that are aimed at developing early math skills have been created for the table in alignment with standard curriculum guidelines for pre-K schools. Additionally, we include software based assessment tools for mentors/teachers to easily track an individual child's progress during the process of interacting with the table.},
booktitle = {Proceedings of the 1st International Conference on Tangible and Embedded Interaction},
pages = {191–194},
numpages = {4},
keywords = {education, learning toys, physical manipulatives, tabletop sensing, tangible computing},
location = {Baton Rouge, Louisiana},
series = {TEI '07}
}

@inproceedings{10.1145/2883851.2883927,
author = {Prieto, Luis P. and Sharma, Kshitij and Dillenbourg, Pierre and Jes\'{u}s, Mar\'{\i}a},
title = {Teaching analytics: towards automatic extraction of orchestration graphs using wearable sensors},
year = {2016},
isbn = {9781450341905},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2883851.2883927},
doi = {10.1145/2883851.2883927},
abstract = { 'Teaching analytics' is the application of learning analytics techniques to understand teaching and learning processes, and eventually enable supportive interventions. However, in the case of (often, half-improvised) teaching in face-to-face classrooms, such interventions would require first an understanding of what the teacher actually did, as the starting point for teacher reflection and inquiry. Currently, such teacher enactment characterization requires costly manual coding by researchers. This paper presents a case study exploring the potential of machine learning techniques to automatically extract teaching actions during classroom enactment, from five data sources collected using wearable sensors (eye-tracking, EEG, accelerometer, audio and video). Our results highlight the feasibility of this approach, with high levels of accuracy in determining the social plane of interaction (90%, κ=0.8). The reliable detection of concrete teaching activity (e.g., explanation vs. questioning) accurately still remains challenging (67%, κ=0.56), a fact that will prompt further research on multimodal features and models for teaching activity extraction, as well as the collection of a larger multimodal dataset to improve the accuracy and generalizability of these methods.},
booktitle = {Proceedings of the Sixth International Conference on Learning Analytics &amp; Knowledge},
pages = {148–157},
numpages = {10},
keywords = {activity detection, multimodal learning analytics, teacher reflection, teaching analytics, wearable sensors},
location = {Edinburgh, United Kingdom},
series = {LAK '16}
}

@inproceedings{10.1109/MODELS-C.2019.00108,
author = {Saini, Rijul and Mussbacher, Gunter and Guo, Jin L. C. and Kienzle, J\"{o}rg},
title = {Teaching modelling literacy: an artificial intelligence approach},
year = {2021},
isbn = {9781728151250},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/MODELS-C.2019.00108},
doi = {10.1109/MODELS-C.2019.00108},
abstract = {In Model-Driven Engineering (MDE), models are used to build and analyze complex systems. In the last decades, different modelling formalisms have been proposed for supporting software development. However, their adoption and practice strongly rely on mastering essential modelling skills to develop a complete and coherent model-based system. Moreover, it is often difficult for novice modellers to get direct and timely feedback and recommendations on their modelling strategies and decisions, particularly in large classroom settings which hinders their learning. Certainly, there is an opportunity to apply Artificial Intelligence (AI) techniques to an MDE learning environment to empower the provisioning of automated and intelligent modelling advocacy. In this paper, we propose a framework called ModBud (a modelling buddy) to educate novice modellers about the art of abstraction. ModBud uses natural language processing (NLP) and machine learning (ML) to create modelling bots with the aim of improving the modelling skills of novice modellers and assisting other practitioners, too. These bots could be used to support teaching with automatic creation or grading of models and enhance learning beyond the traditional classroom-based MDE education with timely feedback and personalized tutoring. Research challenges for the proposed framework are discussed and a research roadmap is presented.},
booktitle = {Proceedings of the 22nd International Conference on Model Driven Engineering Languages and Systems},
pages = {714–719},
numpages = {6},
keywords = {AI, MDE, ML, ModBud, NLP, bots, models},
location = {Munich, Germany},
series = {MODELS '19}
}

@inproceedings{10.1145/1187358.1187406,
author = {Owen, G. Scott and Zhu, Ying and Chastine, Jeff and Payne, Bryson R.},
title = {Teaching programmable shaders: lightweight versus heavyweight approach},
year = {2005},
isbn = {9781450378314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1187358.1187406},
doi = {10.1145/1187358.1187406},
abstract = {The most exciting recent advance in computer graphics has been the development of programmable Graphics Processing Units (GPUs). We discuss different approaches to and some of the issues involved in teaching the use of GPUs.},
booktitle = {ACM SIGGRAPH 2005 Educators Program},
pages = {40–es},
location = {Los Angeles, California},
series = {SIGGRAPH '05}
}

@inproceedings{10.1145/800126.809578,
author = {Lemos, Ronald S.},
title = {Teaching programming languages: A survey of approaches},
year = {1979},
isbn = {9781450374316},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800126.809578},
doi = {10.1145/800126.809578},
abstract = {Ten approaches to programming language instruction are summarized. The approaches discussed are: structured programming, modular programming, grammatical versus “whole program”, spiral, problem analysis, computer modeling, computer assisted instruction, instructional television, egoless versus individualistic programming, and team debugging.These approaches are discussed in terms of their general characteristics, proposed benefits, and demonstratable effectiveness. It is concluded that the serious lack of empirical research on teaching programming makes it difficult to rationally infer the comparable effectiveness of these pedagogical approaches.},
booktitle = {Proceedings of the Tenth SIGCSE Technical Symposium on Computer Science Education},
pages = {174–181},
numpages = {8},
series = {SIGCSE '79}
}

@inproceedings{10.1145/3287324.3287399,
author = {Kawas, Saba and Vonessen, Laura and Ko, Amy J.},
title = {Teaching Accessibility: A Design Exploration of Faculty Professional Development at Scale},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287399},
doi = {10.1145/3287324.3287399},
abstract = {Most CS students learn little about accessibility in higher education; this is partly because most CS faculty know little about accessibility. Unfortunately, higher education CS faculty lack a model of professional development for learning to teach new topics. Therefore, we investigated the feasibility of a "micro" professional development model for teaching accessibility in CS courses that could be used at scale. We conducted 18 semi-structured interviews with U.S. CS faculty, asking them to explore a prototype of a web-based professional development tool that linked accessibility topics to CS topics. We found that many organizational factors limited faculty's autonomy to integrate accessibility in many of their courses. We also found that individual values and knowledge constrained faculty's ability and willingness to both learn and integrate accessibility topics into their courses. However, many faculty expressed desire to teach accessibility in their courses if they had access to even basic accessibility content and materials to use in their courses.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {983–989},
numpages = {7},
keywords = {accessibility, higher education, professional development},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/236452.236511,
author = {Kirsch, Raymond P.},
title = {Teaching OLE automation: a problem-based learning approach},
year = {1996},
isbn = {089791757X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/236452.236511},
doi = {10.1145/236452.236511},
booktitle = {Proceedings of the Twenty-Seventh SIGCSE Technical Symposium on Computer Science Education},
pages = {68–72},
numpages = {5},
location = {Philadelphia, Pennsylvania, USA},
series = {SIGCSE '96}
}

@inproceedings{10.1145/2445196.2445280,
author = {Taylor, Blair and Bishop, Matt and Hawthorne, Elizabeth and Nance, Kara},
title = {Teaching secure coding: the myths and the realities},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445280},
doi = {10.1145/2445196.2445280},
abstract = {Teaching secure coding has never been more important. The CS2013 Ironman draft includes Information Assurance and Security as a new Knowledge Area and recommends that security be cross-cutting across all undergraduate computer science curricula. The Summit on Education in Secure Software recommended: 1) increasing the number of faculty who understand the importance of secure programming principles, and will require students to practice them; 2) integrating computer security content into existing technical and non-technical courses; and 3) using innovative teaching methods to strengthen the foundation of computer security knowledge. In this panel, we will speak to these recommendations and the new curricular guidelines and discuss the importance and challenges of teaching secure coding.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {281–282},
numpages = {2},
keywords = {secure coding},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2399016.2399141,
author = {Vatrapu, Ravi and Tanveer, Usman and Hussain, Abid},
title = {Towards teaching analytics: communication and negotiation tool (CoNeTo)},
year = {2012},
isbn = {9781450314824},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2399016.2399141},
doi = {10.1145/2399016.2399141},
abstract = {In this paper, we present a short description of CoNeTo, a web-based collaborative application that facilitates the communication and negotiation of students' learning activities and inferences about their knowledge states, skill levels, and aptitudes as part of the next-tell EU project (www.next-tell-eu) that is developing methods and tools for technology enhanced formative assessment and pedagogical decision-making. System description, use cases, and an annotated screenshot of CoNeTo are presented. The paper concludes with an outline of future work on the research and development of CoNeTo.},
booktitle = {Proceedings of the 7th Nordic Conference on Human-Computer Interaction: Making Sense Through Design},
pages = {775–776},
numpages = {2},
keywords = {formative assessment, open learner models, teaching analytics, technology enhanced teaching and learning},
location = {Copenhagen, Denmark},
series = {NordiCHI '12}
}

@article{10.5555/775339.775347,
author = {Becker, Katrin},
title = {Teaching with games: the Minesweeper and Asteroids experience},
year = {2001},
issue_date = {December 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {2},
issn = {1937-4771},
abstract = {The value of games as a vehicle for teaching concepts while inspiring students is now well accepted at almost all levels of education. Video games, arcade and computer games are rarely given the same kind of attention. This paper will describe the value of computer games as a motivator and some of the benefits that can be realized by using known computer games as programming applications, even in the first year of a CS program. The use of two such games as assignments in CS1 and CS2 is outlined and some feedback on the experience is offered.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {23–33},
numpages = {11}
}

@inproceedings{10.1145/3535756.3535766,
author = {Lei, Vivian Ngan-Lin and Cheong, Christy Weng-Lam},
title = {Emergency Remote Teaching and First-year Student Engagement during the COVID-19 Pandemic: Emergency Remote Teaching and Student Engagement during COVID-19},
year = {2022},
isbn = {9781450396974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3535756.3535766},
doi = {10.1145/3535756.3535766},
abstract = {Due to the COVID-19 pandemic, higher education institutions worldwide have been facing the imperative of shifting to emergency remote teaching (ERT). This paper presents a case study of ERT at the Macao Polytechnic University, measuring the effectiveness of ERT in light of first-year student engagement. A first-year student engagement survey, using an instrument adapted from the US National Survey of Student Engagement (NSSE), was conducted in the 2019/2020 cohort after about one month of ERT in 2020. The results were compared to those of the first-year student engagement surveys conducted respectively in 2019 (before the pandemic) and in 2021 (in the post-pandemic era), assessing the extent to which students were engaged in ERT with the objective of contributing to enhanced practices in the delivery of ERT during crises.},
booktitle = {Proceedings of the 8th International Conference on Education and Training Technologies},
pages = {60–65},
numpages = {6},
keywords = {Emergency remote teaching, higher education, online learning, student engagement},
location = {Macau, China},
series = {ICETT '22}
}

@inproceedings{10.1145/961511.961638,
author = {Paterson, James H. and Haddow, John},
title = {Teaching Java: using an object-oriented database and the BlueJ IDE},
year = {2003},
isbn = {1581136722},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/961511.961638},
doi = {10.1145/961511.961638},
abstract = {In this Tip we describe the use of a simple Object Oriented database system to implement object persistence in Java programming projects.},
booktitle = {Proceedings of the 8th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {273},
numpages = {1},
keywords = {BlueJ, Java, db4o, object-oriented database, persistence, teaching},
location = {Thessaloniki, Greece},
series = {ITiCSE '03}
}

@article{10.1145/3597429,
author = {Gao, Yuan and Wu, Yani and Qian, Jun},
title = {Intelligent Multimedia Network Security and Pbl Teaching Mode in the Basic Course Teaching of College Design Major},
year = {2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {2375-4699},
url = {https://doi.org/10.1145/3597429},
doi = {10.1145/3597429},
abstract = {At this stage, there are problems of disconnection between theoretical knowledge and practice and lack of coherence and progression in the teaching of basic courses for design majors. The teaching of basic courses for design majors is an important part of design disciplines. Improving the teaching effect of basic courses of design majors is conducive to cultivating students' design thinking and improving students' creative ability. Under the traditional teaching mode, the teaching of the basic courses of design majors excessively pursues the cultivation of skills, ignoring the cultivation of students' imagination and creativity. Students are not very motivated to study the basic courses of design majors. Therefore, this paper studied the application of intelligent multimedia (Project-based&nbsp;Learning)&nbsp;PBL teaching mode in the teaching of basic courses of design majors, and analyzed the intelligent multimedia PBL teaching mode from five aspects: students' interest in learning, teamwork ability, learning efficiency, academic level, and satisfaction. Research showed that under the intelligent multimedia PBL teaching mode, students' interest in learning has increased by 4.37%, teamwork ability has increased by 5.07%, learning efficiency has increased by 4.65%, academic performance has increased by 5.85%, and student satisfaction has also increased.},
note = {Just Accepted},
journal = {ACM Trans. Asian Low-Resour. Lang. Inf. Process.},
month = {may},
keywords = {Intelligent Multimedia PBL Teaching Mode, Basic Courses for Design Majors, Traditional Teaching Mode, Design Majors}
}

@article{10.1145/1963533.1963549,
author = {Chakraborty, Pinaki and Taneja, Shweta and Saxena, P. C. and Katti, C. P.},
title = {Teaching purpose compilers: an exercise and its feedback},
year = {2011},
issue_date = {June 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {2},
issn = {2153-2184},
url = {https://doi.org/10.1145/1963533.1963549},
doi = {10.1145/1963533.1963549},
abstract = {This paper presents an exercise to teach fundamental compiler construction issues. Four simple compilers, in both source and executable forms, were distributed among the students. The students studied the source codes and the accompanying documents. They performed various experiments with the compilers that included modifying the source codes, reengineering phases and implementing new phases and utilities. The students were enthusiastic about the practical knowledge they gained from the exercise. More than fifty students undertook the exercise and the overall response was quite satisfactory.},
journal = {ACM Inroads},
month = {jun},
pages = {47–51},
numpages = {5},
keywords = {Compiler construction, educational exercise, feedback}
}

@inproceedings{10.1145/3456887.3457476,
author = {Xin, Wei and Fang, Xu},
title = {Accurate analysis of big data assists teaching in situational teaching and quality development training of college physical education},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457476},
doi = {10.1145/3456887.3457476},
abstract = {The situational teaching of physical education in colleges and universities under the thinking of big data and accurate analysis is a new paradigm for the teaching reform of physical education colleges to move towards public service. Under the background of accurate analysis of big data, college physical education situational teaching and quality development training are worthy of the focus of research on college physical education educators. This can strengthen the application of big data technology in classroom teaching and improve the quality of physical education. With the aid of big data accurate analysis technology, the physical education class of college physical education situational teaching combines sports with an optimized learning environment. Compared with ordinary physical education, physical education that adopts situational teaching lies in the process of optimizing the classroom environment and accurately analysing student dynamics. It can effectively stimulate the emotions of students, so as to better achieve the purpose of college sports quality development training on the basis of sports. Therefore, this research analysed the problems that might arise in the process of college physical education situational teaching and the needs of college students through the research of big data, precision physical education, and summarized its methods of thinking design and practical application. At the same time, taking the virtual situational teaching of college football as an example, this research analysed the teaching process of big data and accurate analysis in assisting college sports situational teaching. And on this basis, research on the countermeasures of introducing quality development training into college physical education situational teaching under the precise analysis technology of big data.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {1146–1151},
numpages = {6},
keywords = {Big data era, College physical education, Precision analysis technology, Quality development training, Virtual situational teaching},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3450329.3476867,
author = {Williams, Hunter and Haynes, Malcolm and Kim, Joseph},
title = {Dual Teaching: Simultaneous Remote and In-Person Learning During COVID},
year = {2021},
isbn = {9781450383554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450329.3476867},
doi = {10.1145/3450329.3476867},
abstract = {Social distancing guidelines put in place to combat COVID-19 resulted in a general education introductory information technology course being taught in a dual teaching environment. Each lesson, some students attended in-person while simultaneously others attended remotely. Students alternated each lesson between in-person and remote attendance. We examined whether there was any difference in performance between in-person and remote attendance using an end-of-lesson quiz. For some students the quiz was announced and for others it was unannounced. Additionally, we measured the subjective experience of students via a survey. We found that students attending class in-person performed better on end of class quizzes; the difference was small but statistically significant. In-person students also reported paying more attention, being more engaged, and understanding the lesson material better than remote students. Announcing the quiz did not statistically affect performance, although it did improve the subjective experience of in-person students. Finally, when it comes to dual teaching, both students and instructors prefer in-person or remote teaching. Nevertheless, dual teaching may be an effective approach; there was little difference in final course grades between in-person teaching and dual teaching.},
booktitle = {Proceedings of the 22nd Annual Conference on Information Technology Education},
pages = {111–116},
numpages = {6},
keywords = {covid, dual teaching, emergency remote teaching, hybrid learning, information technology education, learning assessment, online learning, remote teaching},
location = {SnowBird, UT, USA},
series = {SIGITE '21}
}

@article{10.5555/3199572.3199577,
author = {Qian, Gang},
title = {Teaching SQL: a divide-and-conquer method for writing queries},
year = {2018},
issue_date = {April 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {4},
issn = {1937-4771},
abstract = {SQL query is a difficult topic for many students in undergraduate database courses. As instructors, we often face such student questions as how to approach or where to start on writing SQL queries. In this paper, we present a systematic approach to the problem. Our method adopts the divide-and-conquer paradigm, a familiar problem-solving skill to computer science students. It analyzes a given query requirement and looks for clues to decompose the requirement into actionable steps. Templates are also used to construct commonly used complex query types. Our experience of teaching this method has shown that it is effective in helping students learn SQL.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {37–44},
numpages = {8}
}

@inproceedings{10.5555/215624.215831,
author = {Goodburn, Daniel P. J. and Harris, David D. and Sydenham, Peter H.},
title = {Expert-teaching: an approach to computer-aided mechanical engineering design},
year = {1995},
isbn = {2884491988},
publisher = {Gordon and Breach Science Publishers, Inc.},
address = {USA},
booktitle = {Proceedings of the 8th International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems},
pages = {507–513},
numpages = {7},
location = {Melbourne, Australia},
series = {IEA/AIE '95}
}

@inproceedings{10.1145/1227310.1227346,
author = {Dankel, Douglas D. and Ohlrich, Jonathan},
title = {Students teaching students: incorporating presentations into a course},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1227310.1227346},
doi = {10.1145/1227310.1227346},
abstract = {This paper presents the structure of a new elective course at the University of Florida, Artificial Intelligence in Computer Games, which addresses not only the technical aspects of creating realism within computer games, but also the need for more experiences in oral communication. Key elements of this course include the students conducting a majority of the teaching and actively participating in evaluating each other.},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
pages = {96–99},
numpages = {4},
keywords = {classroom management, communication skills, course pedagogy, curriculum issues},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

@inproceedings{10.1145/1007996.1007999,
author = {Stepney, Susan},
title = {Teaching post-classical computation: (extended abstract)},
year = {2004},
isbn = {1581138369},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1007996.1007999},
doi = {10.1145/1007996.1007999},
booktitle = {Proceedings of the 9th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {3},
numpages = {1},
location = {Leeds, United Kingdom},
series = {ITiCSE '04}
}

@inproceedings{10.1145/3627915.3628076,
author = {Zhao, Gang and Ma, Xiumin and Guo, Fan},
title = {"Application of BOPPPS Teaching Method Based on the \"Rain Classroom\" Information Systems in the Teaching of Experimental Diagnostics"},
year = {2023},
isbn = {9798400700590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3627915.3628076},
doi = {10.1145/3627915.3628076},
abstract = {Purpose To improve the teaching quality of experimental diagnostics for 5-year clinical medicine major, the application of information system in medical education was explored. Method A total of 166 undergraduate students majoring in clinical medicine of grade 2020 were divided into classes, and taught with BOPPPS teaching method based on "rain classroom" information system and traditional LBL teaching method, and the teaching quality was tracked and investigated to analyze the teaching effects. Result The comparison between the two teaching methods reveals that the students' scores of the BOPPPS teaching method based on the "rain classroom" information system were significantly improved, and the difference was statistically significant. Conclusion The application of BOPPPS teaching method based on the "rain classroom" information system for the 5-year clinical medicine course "Laboratory Diagnostics" was effective, and conducive to the cultivation of students' clinical ability and the mastery of diagnostic technology.},
booktitle = {Proceedings of the 7th International Conference on Computer Science and Application Engineering},
articleno = {1},
numpages = {5},
keywords = {BOPPPS Teaching Method, Clinical Medicine Major, Information Systems Applications, Teaching},
location = {<conf-loc>, <city>Virtual Event</city>, <country>China</country>, </conf-loc>},
series = {CSAE '23}
}

@inproceedings{10.1145/3625704.3625747,
author = {Liu, Qingtang and Yang, Shihan and Zhang, Tingyu and Zheng, Xinxin and Miao, Enhui},
title = {Research on the Influence Mechanism of School Support on Teaching and Research Satisfaction in Precision Teaching and Research},
year = {2023},
isbn = {9798400709142},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3625704.3625747},
doi = {10.1145/3625704.3625747},
abstract = {Precision teaching and research technology can make up for the shortcomings of traditional teacher research activities, strengthen the speed of teachers' self-improvement and self-reflection, so that teachers can quickly and accurately improve their own quality and achieve professional development. The first task to improve the efficiency of teachers' precision teaching and research activities is to improve the key index of the effect of precision teaching and research activities, teaching and research satisfaction. Based on the obstacle theory, this study selected school support and value belief as the key factors affecting the satisfaction of precision training activities. The subjects were 284 elementary school teachers, middle school teachers and high school teachers who had participated in precision teaching and research activities. Structural equation model was used to explore the relationship between school support services, teacher satisfaction and teacher value belief. The results show that: (1) Technical support and peer support have a direct impact on teachers' satisfaction of precision teaching research; (2) Teachers' value belief plays an important mediating role in the process of school administrative support and peer support affecting teachers' satisfaction with precision teaching research. The research conclusion has a good reference value for promoting the implementation of precision teaching and research activities in primary and secondary schools and improving teachers' satisfaction with precision teaching and research activities.},
booktitle = {Proceedings of the 7th International Conference on Education and Multimedia Technology},
pages = {333–339},
numpages = {7},
keywords = {Precise teaching and research, School support, Teacher value belief, Teachers' satisfaction},
location = {<conf-loc>, <city>Tokyo</city>, <country>Japan</country>, </conf-loc>},
series = {ICEMT '23}
}

@inproceedings{10.1145/3495018.3501177,
author = {Zhang, Xinyi and Akhat, Asat and Abdurosul, Paruq and Bakri, Osman and Juma, Osman},
title = {Mixed teaching design and application in teaching Chinese as a foreign language from the perspective of distance learning},
year = {2022},
isbn = {9781450385046},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3495018.3501177},
doi = {10.1145/3495018.3501177},
abstract = {At present, blended teaching mode has become one of the important teaching methods, but this teaching mode is still a very strange concept in language teaching. It perfectly integrates classroom teaching and offline teaching, and teachers can carry out teaching activities in a more flexible and convenient way. This paper discusses the application of blended teaching design in TCFL, and gives some countermeasures on how to strengthen TCFL in the new era.},
booktitle = {2021 3rd International Conference on Artificial Intelligence and Advanced Manufacture},
pages = {2759–2763},
numpages = {5},
location = {Manchester, United Kingdom},
series = {AIAM2021}
}

@inproceedings{10.1145/973620.973721,
author = {Georgiev, Iliya},
title = {Teaching multimedia: from multimedia signals, audio and visual processing, to multimedia networks},
year = {2003},
isbn = {9549641333},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/973620.973721},
doi = {10.1145/973620.973721},
abstract = {Multimedia processing is becoming mainstream in today's computing environment. Teaching and learning multimedia basics are relevant to a diversity of scientific areas: signals and systems, data compression, computer graphics, image processing end understanding, digital audio and video, networking. The paper describes a generalized approach to multimedia teaching that is designed to present a multimedia-processing model and the basics of the related disciplines.},
booktitle = {Proceedings of the 4th International Conference Conference on Computer Systems and Technologies: E-Learning},
pages = {604–610},
numpages = {7},
keywords = {computer graphics, data compression, image processing, multimedia networks, multimedia signals and systems, teaching multimedia},
location = {Rousse, Bulgaria},
series = {CompSysTech '03}
}

@article{10.5555/2752628.2752654,
author = {Khan, Zahira},
title = {Teaching SQL performance tuning: nifty assignment},
year = {2015},
issue_date = {April 2015},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {30},
number = {4},
issn = {1937-4771},
abstract = {In a classroom environment, the database tables used contain only a few rows and SQL statements do not exhibit performance issues. However if the same SQL statements were to be executed in real world applications where the database table sizes may be in millions of records, unacceptably slow performance would result. Teaching students how to write SQL statements and to fine tune them is an important topic that needs to be discussed in an undergraduate Database Design course.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {119},
numpages = {1}
}

@inproceedings{10.1145/327559.327695,
author = {Buzin, Andrei},
title = {Teaching classical calculation methods: APL challenge},
year = {1998},
isbn = {158113181X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/327559.327695},
doi = {10.1145/327559.327695},
booktitle = {Proceedings of the APL98 Conference on Array Processing Languages},
pages = {179–188},
numpages = {10},
location = {Rome, Italy},
series = {APL '98}
}

@article{10.1145/138094.140935,
author = {Peelle, Howard A.},
title = {Teaching APL to beginners: critical issues},
year = {1991},
issue_date = {Sept. 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {1},
issn = {0163-6006},
url = {https://doi.org/10.1145/138094.140935},
doi = {10.1145/138094.140935},
abstract = {Critical issues recurrently confront APL instructors: How soon to introduce vectors and higher rank arrays? Which Index Origin to start with? What terminology to use? Whether to furnish idioms? Insist on comments in defined functions? Avoid loosing algorithms? Use direct definition? Mention atrophying features? Compare APL with other programming languages? Include extended APL?Such issues will be discussed, and brief recommendations offered.},
journal = {SIGAPL APL Quote Quad},
month = {sep},
pages = {19–23},
numpages = {5}
}

@article{10.1145/292422.292439,
author = {Petre, Marian},
title = {Assessing innovation in teaching: an example},
year = {1998},
issue_date = {June 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/292422.292439},
doi = {10.1145/292422.292439},
journal = {SIGCSE Bull.},
month = {jun},
pages = {40–42},
numpages = {3}
}

@inproceedings{10.1145/2507065.2507082,
author = {Getto, Guiseppe and Potts, Liza and Salvo, Michael J. and Gossett, Kathie},
title = {Teaching UX: designing programs to train the next generation of UX experts},
year = {2013},
isbn = {9781450321310},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2507065.2507082},
doi = {10.1145/2507065.2507082},
abstract = {This experience report describes core values and approaches to teaching and developing programs in User Experience (UX). What binds these values and approaches together is a deep engagement with ongoing trends and best practices in the field of UX over the past several decades. Examples offered are contextually embedded, yet each expression is consistent with underlying core competencies gleaned from a ten-plus year history of teaching and practicing UX design, information architecture and information design, visual rhetoric, ethics, and usability in the technical communication classroom. The best practices we articulate below are applicable in the context of corporate training, team building and preparation, and consulting, in addition to academic contexts.},
booktitle = {Proceedings of the 31st ACM International Conference on Design of Communication},
pages = {65–70},
numpages = {6},
location = {Greenville, North Carolina, USA},
series = {SIGDOC '13}
}

@inproceedings{10.1145/3419249.3421238,
author = {Nilsson, Elisabet M. and Barendregt, Wolmet and Eriksson, Eva and Hansen, Anne-Marie and Toft N\o{}rg\r{a}rd, Rikke and Yoo, Daisy},
title = {The Values Clustering Teaching Activity – a Case Study on Two Teachers’ Appropriations of Open Educational Resources for Teaching Values in Design},
year = {2020},
isbn = {9781450375795},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3419249.3421238},
doi = {10.1145/3419249.3421238},
abstract = {Currently, we see an increased focus on the social and environmental responsibilities of designers when designing technologies. There are however few academic examples describing how to teach students to become responsible designers and engineers who are attentive to values in design. We are therefore developing teaching activities as open educational resources for teaching values in design to students in different kinds of engineering and design courses and programs. The activities address values in different phases of the design process. This case study article reports on the appropriation of a teaching activity by two university teachers. The aim is to provide the reader with an insight into how a teaching activity that we have developed can be appropriated in different educational settings, what the teachers’ perceived effectiveness of this activity is, and what kind of adaptations individual teachers may need to make to fit them into their particular course.},
booktitle = {Proceedings of the 11th Nordic Conference on Human-Computer Interaction: Shaping Experiences, Shaping Society},
articleno = {98},
numpages = {8},
keywords = {design, experiences, higher education, teaching activities, values},
location = {Tallinn, Estonia},
series = {NordiCHI '20}
}

@inproceedings{10.1145/2639189.2654827,
author = {Cermak-Sassenrath, Daniel and M\o{}llenbach, Emilie},
title = {Teaching to tinker: making as an educational strategy},
year = {2014},
isbn = {9781450325424},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2639189.2654827},
doi = {10.1145/2639189.2654827},
abstract = {Maker communities and hacker spaces engaged in tangible computing are popping up in and outside the academic setting driven by curiosity and a desire to learn. This workshop is concerned with how making can be and has been used in an academic setting. Making shifts the focus of education from prescribed tasks towards what people want to know or do.},
booktitle = {Proceedings of the 8th Nordic Conference on Human-Computer Interaction: Fun, Fast, Foundational},
pages = {789–792},
numpages = {4},
keywords = {education, experiential learning, learning, maker culture, making, play},
location = {Helsinki, Finland},
series = {NordiCHI '14}
}

@inproceedings{10.1145/1810543.1810588,
author = {Zancanaro, Massimo and Gal, Eynat and Parsons, Sarah and Weiss, Tamar and Bauminger, Nirit and Cobb, Sue},
title = {Teaching social competence: in search of design patterns},
year = {2010},
isbn = {9781605589510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1810543.1810588},
doi = {10.1145/1810543.1810588},
abstract = {COSPATIAL is a multi-disciplinary project that is using collaborative virtual reality and tabletop devices for training social competence within the theoretical framework of Cognitive-Behavioral Therapy. Our ultimate objective is to create a set of patterns for designing applications in collaborative technologies that are suitable for children with autism as well as typically developing children. We describe the rationale for CBT-informed design of collaborative technologies and background related work. Initial steps towards development of a design framework are presented, with illustrated examples from one concept design application for each of the two technologies under consideration. The project is ongoing and an iterative design process will be used to develop and evaluate the applications and further refine the design framework.},
booktitle = {Proceedings of the 9th International Conference on Interaction Design and Children},
pages = {270–273},
numpages = {4},
keywords = {autism, collaborative virtual reality, scenario-based design, shared active surface, social competence training},
location = {Barcelona, Spain},
series = {IDC '10}
}

@article{10.1145/382204.382526,
author = {Hightower, Vicki M.},
title = {Teaching honor students: how do they measure up},
year = {1985},
issue_date = {June 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/382204.382526},
doi = {10.1145/382204.382526},
abstract = {The introductory course in data processing and computer programming as taught at Elon College is first, a strong introduction to structured programming in BASIC and second, a look at the business side of data processing. It is an attempt to expose students to the terminology of computers and their uses and also get them acquainted with some of the standard concepts of computing algorithms and problem solving. Students use the DEC PDP 11/34 for this first course and no attempt is made to teach line editing with EDT. There is such a wide range of abilities in this course that we try to gear the material so that most students will have a positive experience and frustrations will be kept to a minimum.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {15–20},
numpages = {6}
}

@inproceedings{10.5555/3242181.3242555,
author = {Smith, Jeffrey S. and Alexopoulos, Christos and Henderson, Shane G. and Schruben, Lee},
title = {Teaching undergraduate simulation: 4 questions for 4 experienced instructors},
year = {2017},
isbn = {9781538634271},
publisher = {IEEE Press},
abstract = {This paper and the corresponding panel session focus on teaching undergraduate industrial engineering/operations research-related simulation courses. The format brings together four experienced instructors to discuss four questions involving the structure and topic outlines of courses, print and software teaching materials used, and general teaching methods/philosophy. The hope is to provide some experience-based teaching information for new and soon-to-be instructors and to generate discussion with the simulation education community.},
booktitle = {Proceedings of the 2017 Winter Simulation Conference},
articleno = {354},
numpages = {12},
location = {Las Vegas, Nevada},
series = {WSC '17}
}

@article{10.1145/2597627,
author = {Hassner, Tal and Bayaz, Itzik},
title = {Teaching Computer Vision: Bringing Research Benchmarks to the Classroom},
year = {2015},
issue_date = {February 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {4},
url = {https://doi.org/10.1145/2597627},
doi = {10.1145/2597627},
abstract = {This article concerns the design of effective computer vision programming exercises and presents a novel means of designing these assignments. We describe three recent case studies designed to evaluate the effectiveness of assigning graduate-level computer vision students with publicly available research benchmarks as competitive assignments. This was done rather than assigning more traditional exercises that require students to implement specific algorithms or applications. We allowed our students the freedom of designing or choosing their own methods, with the goal of obtaining the best performance on the benchmark chosen for each assignment. Students, therefore, competed against each other, as well as published state of the art. We detail the design, application, and results of these benchmark exercises. We show that not only are these benchmarks easily adapted for the classroom, but also that in some cases, student assignments matched published state-of-the-art performance. This observation provides strong evidence to support the effectiveness of the proposed exercise design. We conclude by discussing the benefits and drawbacks of these exercises compared to those traditionally employed in computer vision classrooms.},
journal = {ACM Trans. Comput. Educ.},
month = {feb},
articleno = {22},
numpages = {17},
keywords = {Computer vision education, benchmark exercises, competitive exercises, research benchmarks}
}

@inproceedings{10.1145/3545947.3576353,
author = {Quille, Keith and Becker, Brett A. and Vidal-Meli\'{a}, Lidia},
title = {The European Commission and AI: Guidelines, Acts and Plans Impacting the Teaching of AI and Teaching with AI},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576353},
doi = {10.1145/3545947.3576353},
abstract = {Recent developments, guidelines, and acts by the European Commission have started to frame policy for AI and related areas such as ML and data, not only for the broader community, but in the context of education specifically. This poster presents a succinct overview of these developments. Specifically, we look to bring together all publications that might impact the teaching of AI (for example, teacher expectations in the coming years around AI competencies)and publications that affect the use of AI in the classroom. We mean using tools and systems that incorporate both 'Good Old Fashioned 'AI and those that can directly impact students. This poster is of value to both the European and the wider CER communities and practitioners, as it brings together several guidelines, acts, and plans that are not easily searchable or linked. The publications presented in this poster will impact the teaching of AI and teaching with Ai in Europe, and insights can be drawn and compared for other jurisdictions as the educational world adapts to and with AI.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1410},
numpages = {1},
keywords = {ai, ec, eu, european commission, european union, guidelines, ml, plans, teaching, using},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3287324.3293761,
author = {Fagin, Barry},
title = {Teaching RSA: What Happens When One of Your Primes Isn't?},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293761},
doi = {10.1145/3287324.3293761},
abstract = {Once you introduce RSA and probabilistic primality testing to your cryptography class, one of your brighter students will ask "What happens if the test is wrong?" It turns out the answer can vary from "You'll find out immediately" to "It makes no difference" to "It depends". We explain the mathematics that determine where the answer lies, and illustrate with examples suitable for use in the undergraduate classroom. We conclude by showing how to construct a key pair that produces correct RSA results from composite numbers p and q, and thus whose composite nature is not detectable through RSA encryption and decryption alone.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1286},
numpages = {1},
keywords = {cryptography, cryptography education, discrete mathematics, number theory, rsa},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@article{10.5555/1409823.1409834,
author = {Dixon, Chip and Prins, Phil and Hamel, Ray},
title = {Living and teaching abroad: panel discussion},
year = {2008},
issue_date = {December 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {2},
issn = {1937-4771},
abstract = {The field of education is universal and at university level. English-speaking educators have the opportunity to teach nearly anywhere in the world. While the environment of the home institution and demands of family often seem to be an overriding constraint, spending a semester or year in a foreign country can open the mind to unique perspectives leading to broader knowledge that one simply cannot experience from the home environment. Living abroad means exposure to the enormity and diversity of human endeavor. Working within a different culture and education system, puts the educator directly into a sort of living laboratory where equal amounts of learning and teaching are experienced each day. One has an opportunity to see diversity in action and to learn aspects of teaching from such diversity.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {42},
numpages = {1}
}

@inproceedings{10.1145/3371382.3379462,
author = {Arnett, Marcus and Luo, Zhenyang and Paladugula, Pradeep Kumar and Cardenas, Irvin Steve and Kim, Jong-Hoon},
title = {Robots Teaching Recycling: Towards Improving Environmental Literacy of Children},
year = {2020},
isbn = {9781450370578},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3371382.3379462},
doi = {10.1145/3371382.3379462},
abstract = {The present pollution problem can be partially attributed to the lack of empathy for learning any ecological and environmental literacy skills. Although robotics in education is increasing, there has been a lack of interest towards developing devices designed to teach children how to be environmentally conscious, and in particular, how to recycle. This gap is the basis for our robot, which we call the Smart Trash Junior, a mechatronic trashcan that uses vision recognition to identify recyclable objects and enters into a dialogue that educates children, within elementary schools, how to recycle.},
booktitle = {Companion of the 2020 ACM/IEEE International Conference on Human-Robot Interaction},
pages = {615–616},
numpages = {2},
keywords = {children robot interaction, eco-literacy, educational robotics, environmental literacy},
location = {Cambridge, United Kingdom},
series = {HRI '20}
}

@inproceedings{10.1145/1953163.1953247,
author = {Power, James F. and Whelan, Thomas and Bergin, Susan},
title = {Teaching discrete structures: a systematic review of the literature},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953247},
doi = {10.1145/1953163.1953247},
abstract = {This survey paper reviews a large sample of publications on the teaching of discrete structures and discrete mathematics in computer science curricula. The approach is systematic, in that a structured search of electronic resources has been conducted, and the results are presented and quantitatively analyzed. A number of broad themes in discrete structures education are identified relating to course content, teaching strategies and the means of evaluating the success of a course.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {275–280},
numpages = {6},
keywords = {computing curriculum, discrete mathematics, discrete structures},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/1476793.1476901,
author = {Gott, Allan H. and Kubert, Bruce R. and Bowyer, Allen F. and Nevatt, George W.},
title = {Teaching heart function: one application of medical computer animation},
year = {1969},
isbn = {9781450379021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1476793.1476901},
doi = {10.1145/1476793.1476901},
abstract = {Medicine has developed current methods of teaching heart function over several centuries. There have been few fundamental changes in these teaching techniques over the last several decades. The method of text study followed by laboratory activity is essentially the same for both undergraduate and medical school students. For the latter, a more comprehensive study of experimental animals is involved, and surgical procedures are observed on patients. Once in medical school, almost all teaching is by demonstration, with a very small number of students per instructor.},
booktitle = {Proceedings of the May 14-16, 1969, Spring Joint Computer Conference},
pages = {637–647},
numpages = {11},
location = {Boston, Massachusetts},
series = {AFIPS '69 (Spring)}
}

@inproceedings{10.1145/1141753.1141861,
author = {Khan, Huda J. and Maull, Keith E.},
title = {Teaching box builder: customizing pedagogical contexts for use of digital library resources in classrooms},
year = {2006},
isbn = {1595933549},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1141753.1141861},
doi = {10.1145/1141753.1141861},
abstract = {This poster and accompanying demonstration introduces the Teaching Box Builder application that, as being implemented, supports the development of pedagogically rich inquiry-based earth science lessons using digital library resources.},
booktitle = {Proceedings of the 6th ACM/IEEE-CS Joint Conference on Digital Libraries},
pages = {366},
numpages = {1},
keywords = {contextualize, teaching box, user interface design, web services},
location = {Chapel Hill, NC, USA},
series = {JCDL '06}
}

@inproceedings{10.1145/3328778.3372563,
author = {Stiller, Evelyn M.},
title = {Teaching with Program2Play: Using Programming Instructions to Play Games},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372563},
doi = {10.1145/3328778.3372563},
abstract = {Program2Play is a web-based initiative that teaches learners to program through gameplay. Program2Play games generally have two versions for each game. One game can be played by using a mouse or arrow keys, depending on the type of user interaction required. This version demonstrates the desired functionality of the game. The second game is identical to the first game except there are programming instructions missing from the first which the user must supply for the game to function correctly. The user can then test the programming instructions by playing the second version of the game and observing the results of the inserted instructions. Because learners code a small portion of a game, they can see the result of their efforts quickly in an exciting context. Also, by coding a subset of the game the sources of error are greatly reduced, enhancing the likelihood of a successful learning experience. The initial games target relatively simple, yet powerful instructions. For example, learners are asked to code the instruction that moves a bee in the game so that it avoids a dragonfly and reaches the honeycomb. The simplicity and power of an instruction like, bee.x += value, can be experienced in the context of an animation loop.This pedagogical approach encourages experimentation with programming instructions. Program2Play is suited for beginning programmers and programmers who may need additional learning experiences or motivation. Program2Play can be used in high schools or to help remediate deficient programming skills for first-year students.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1410},
numpages = {1},
keywords = {games-for-learning, javascript, programming-pedagogy, web-based-games},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/2662412,
author = {Koulouri, Theodora and Lauria, Stanislao and Macredie, Robert D.},
title = {Teaching Introductory Programming: A Quantitative Evaluation of Different Approaches},
year = {2015},
issue_date = {February 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {4},
url = {https://doi.org/10.1145/2662412},
doi = {10.1145/2662412},
abstract = {Teaching programming to beginners is a complex task. In this article, the effects of three factors—choice of programming language, problem-solving training, and the use of formative assessment—on learning to program were investigated. The study adopted an iterative methodological approach carried out across 4 consecutive years. To evaluate the effects of each factor (implemented as a single change in each iteration) on students’ learning performance, the study used quantitative, objective metrics. The findings revealed that using a syntactically simple language (Python) instead of a more complex one (Java) facilitated students’ learning of programming concepts. Moreover, teaching problem solving before programming yielded significant improvements in student performance. These two factors were found to have variable effects on the acquisition of basic programming concepts. Finally, it was observed that effective formative feedback in the context of introductory programming depends on multiple parameters. The article discusses the implications of these findings, identifies avenues for further research, and argues for the importance of studies in computer science education anchored on sound research methodologies to produce generalizable results.},
journal = {ACM Trans. Comput. Educ.},
month = {dec},
articleno = {26},
numpages = {28},
keywords = {CS1, Empirical studies, formative feedback, learning programming, novice programmers, problem solving, programming languages, teaching strategies}
}

@inproceedings{10.1145/1122018.1122069,
author = {Allen, Robert A. and Youssefi, John Abbas},
title = {Teaching the internet: a protocol for interactive learning},
year = {1995},
isbn = {0897917472},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1122018.1122069},
doi = {10.1145/1122018.1122069},
abstract = {A description of our teaching protocol is given which has been tested concurrently on two classes, one at Mercer University and one at California State University. These classes were general-studies/community enrichment courses and were teaching their students how to use the Internet. Both classes met simultaneously and used the Internet to communicate during the course. The students at each site were set up so that they could "talk" with their counterparts across the country, trade files with them, and actually teach each other some different aspects of the Internet. One interesting facet of this protocol is that one site taught its students "A, B and C," while the other site taught its students "X, Y and Z." The students then use the technology that they learned to teach their counterparts across the country. At the end of the short course the students had not only heard about the Internet, they had really used it to solve some real problems.},
booktitle = {Proceedings of the 33rd Annual on Southeast Regional Conference},
pages = {267–268},
numpages = {2},
location = {Clemson, South Carolina},
series = {ACM-SE 33}
}

@article{10.1145/1102991.1102995,
title = {Teaching introductory sociology: paradigms, methodologies, and interactive computing},
year = {1976},
issue_date = {1976-1977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {1–4},
issn = {0163-5794},
url = {https://doi.org/10.1145/1102991.1102995},
doi = {10.1145/1102991.1102995},
abstract = {In most departments of sociology, it is often difficult to find instructors willing to teach the introductory course. With recent development of the field, it may become difficult to find instructors able to teach it. Not only is the field and its knowledge growing rapidly, but it is undergoing division into distinct sub-disciplines, each of which must be taken into account in any representative introduction to the discipline. This difficulty--the multi-paradigm nature of current sociology--is the subject of this report, which describes a project that attempts a computer-based solution to the problems facing introductory course instructors.},
journal = {SIGSOC Bull.},
month = {jan},
pages = {33–43},
numpages = {11}
}

@inproceedings{10.1145/3555009.3555035,
author = {Hackett, Phil},
title = {Teaching Programming at a Distance},
year = {2022},
isbn = {9781450397421},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3555009.3555035},
doi = {10.1145/3555009.3555035},
abstract = {Novice programmers face significant barriers when they cannot learn face-to-face with a teacher or with peer support in a physical computer laboratory. Online collaborative programming environments (virtual computing laboratories) enable an overview of multiple students programming at the same time, with tutors able to interact with and support individual students or groups in real-time.},
booktitle = {Proceedings of the 2022 Conference on United Kingdom &amp; Ireland Computing Education Research},
articleno = {24},
numpages = {1},
location = {<conf-loc>, <city>Dublin</city>, <country>Ireland</country>, </conf-loc>},
series = {UKICER '22}
}

@inproceedings{10.1145/3430263.3452438,
author = {Gay, Greg},
title = {Teaching accessibility awareness with games},
year = {2021},
isbn = {9781450382120},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430263.3452438},
doi = {10.1145/3430263.3452438},
abstract = {Serious games have become more common in higher education as tools for delivering experiential learning. They are particularly useful during times of crisis like the COVID-19 pandemic, with almost all learning switching to virtual as populations isolate and people learn from home. Creating such games for typical able learners that are also accessible to learners with disabilities can be challenging, with few existing examples to learn from. The Accessibility Maze was created to teach web accessibility basics through experiential learning, to model accessible web-based game design, and as a game playable independently with a screen reader.},
booktitle = {Proceedings of the 18th International Web for All Conference},
articleno = {5},
numpages = {3},
keywords = {accessibility game, accessible game design, accessible games, serious games},
location = {Ljubljana, Slovenia},
series = {W4A '21}
}

@inproceedings{10.1145/3366423.3380099,
author = {Zhou, Yao and Nelakurthi, Arun Reddy and Maciejewski, Ross and Fan, Wei and He, Jingrui},
title = {Crowd Teaching with Imperfect Labels},
year = {2020},
isbn = {9781450370233},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3366423.3380099},
doi = {10.1145/3366423.3380099},
abstract = {The need for annotated labels to train machine learning models led to a surge in crowdsourcing - collecting labels from non-experts. Instead of annotating from scratch, given an imperfect labeled set, how can we leverage the label information obtained from amateur crowd workers to improve the data quality? Furthermore, is there a way to teach the amateur crowd workers using this imperfect labeled set in order to improve their labeling performance? In this paper, we aim to answer both questions via a novel interactive teaching framework, which uses visual explanations to simultaneously teach and gauge the confidence level of the crowd workers. Motivated by the huge demand for fine-grained label information in real-world applications, we start from the realistic and yet challenging assumption that neither the teacher nor the crowd workers are perfect. Then, we propose an adaptive scheme that could improve both of them through a sequence of interactions: the teacher teaches the workers using labeled data, and in return, the workers provide labels and the associated confidence level based on their own expertise. In particular, the teacher performs teaching using an empirical risk minimizer learned from an imperfect labeled set; the workers are assumed to have a forgetting behavior during learning and their learning rate depends on the interpretation difficulty of the teaching item. Furthermore, depending on the level of confidence when the workers perform labeling, we also show that the empirical risk minimizer used by the teacher is a reliable and realistic substitute of the unknown target concept by utilizing the unbiased surrogate loss. Finally, the performance of the proposed framework is demonstrated through experiments on multiple real-world image and text data sets.},
booktitle = {Proceedings of The Web Conference 2020},
pages = {110–121},
numpages = {12},
keywords = {Explanation., Interactive teaching, Personalized crowdsourcing},
location = {Taipei, Taiwan},
series = {WWW '20}
}

@inproceedings{10.1145/3362789.3362883,
author = {Santillan-Rosas, Irais and Yusta-Garc\'{\i}a, Ra\'{u}l and Heredia-Escorza, Yolanda},
title = {Experiential Teaching for Sustainable Development},
year = {2019},
isbn = {9781450371919},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3362789.3362883},
doi = {10.1145/3362789.3362883},
abstract = {This educational intervention consists in improving the skills of citizenship of students in their first semesters of engineering through participatory management of remote laboratories of air quality in eight different zones of Monterrey, Mexico. With the use of gadgets that can the level of pollution in the air, the students were divided into teams of 4 to 5 members and visited its allocated area on 3 different days, by measuring the level of pollution in 24 key points in your area: 8 places with a high amount of vehicular traffic, 8 in small streets with little traffic and 8 places in green areas, such as parks. Students scored the measurements and prepared a final report on their area, delivering reports to authorities of local communities in your area assigned. Two focus groups took place, one during the activity and one after the students handed in their final reports. The goal behind the focus group was to listen to the student's thoughts regarding the activity and the knowledge they acquired thanks to it. Interesting suggestions for future implementations were also an important topic during these focus groups.},
booktitle = {Proceedings of the Seventh International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {481–485},
numpages = {5},
keywords = {Experiential education, Innovation in Education, environment, sustainable development},
location = {Le\'{o}n, Spain},
series = {TEEM'19}
}

@inproceedings{10.1145/3025453.3025711,
author = {Arawjo, Ian and Wang, Cheng-Yao and Myers, Andrew C. and Andersen, Erik and Guimbreti\`{e}re, Fran\c{c}ois},
title = {Teaching Programming with Gamified Semantics},
year = {2017},
isbn = {9781450346559},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3025453.3025711},
doi = {10.1145/3025453.3025711},
abstract = {Dominant approaches to programming education emphasize program construction over language comprehension. We present Reduct, an educational game embodying a new, comprehension-first approach to teaching novices core programming concepts which include functions, Booleans, equality, conditionals, and mapping functions over sets. In this novel teaching strategy, the player executes code using reduction-based operational semantics. During gameplay, code representations fade from concrete, block-based graphics to the actual syntax of JavaScript ES2015. We describe our design rationale and report on the results of a study evaluating the efficacy of our approach on young adults (18+) without prior coding experience. In a short timeframe, novices demonstrated promising learning of core concepts expressed in actual JavaScript. We also present results from an online deployment. Finally, we discuss ramifications for the design of future computational thinking games.},
booktitle = {Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems},
pages = {4911–4923},
numpages = {13},
keywords = {block-based programming, concreteness fading, educational games, novice programming},
location = {Denver, Colorado, USA},
series = {CHI '17}
}

@inproceedings{10.1145/2729094.2754850,
author = {Hamilton, Margaret},
title = {Learning and Teaching Computing Sustainability},
year = {2015},
isbn = {9781450334402},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2729094.2754850},
doi = {10.1145/2729094.2754850},
abstract = {In this paper we present a new course designed around computing sustainability, and aimed at encouraging students to analyse and adapt to design more sustainable workplaces which reduce the overall carbon footprint into the future. We explain the curriculum for this course, and the concepts of green variables, green clouds, sustainable computing, the gathering of relevant crowdsourced information which can be integrated onto a green virtual platform.},
booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {338},
numpages = {1},
keywords = {green computing., professionalism, sustainability},
location = {Vilnius, Lithuania},
series = {ITiCSE '15}
}

@inproceedings{10.1145/2157136.2157419,
author = {Slater, Don and Dann, Wanda and Cooper, Steve},
title = {Teaching with Alice (abstract only)},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157419},
doi = {10.1145/2157136.2157419},
abstract = {This session is for anyone currently using Alice 2.2 and / or thinking about using Alice 3, or exploring the possibility of using Alice in his or her curriculum. The discussion leaders and experienced Alice instructors will share teaching strategies, tips, and tricks with each other and those new to Alice. The session provides an arena for sharing Alice instructional materials and ideas for courses at all educational levels. This is an opportunity to share assignments and pointers to web sites where collections of instructional materials, such as syllabi, student projects, exams, and other resources are available.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {678},
numpages = {1},
keywords = {Alice, Alice 2.2, Alice 3.0, education},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/3244713,
author = {Salichs, Miguel},
title = {Session details: Humans teaching robots},
year = {2011},
isbn = {9781450305617},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3244713},
doi = {10.1145/3244713},
booktitle = {Proceedings of the 6th International Conference on Human-Robot Interaction},
location = {Lausanne, Switzerland},
series = {HRI '11}
}

@inproceedings{10.1145/1841853.1841883,
author = {Hansen, Miriam and Scholz, Lisette and Jucks, Regina},
title = {Intercultural communication in university teaching},
year = {2010},
isbn = {9781450301084},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1841853.1841883},
doi = {10.1145/1841853.1841883},
abstract = {In this paper, we report results of an online-study with 186 university lecturers teaching Psychology courses at German universities. The task was to respond to an email request of a student. The nationality of the requesting student (German vs. Chinese), the communication style of the request (Western vs. Asian), as well as the use of certain words (two synonymous versions to test for lexical alignment effect) was varied in a 3x2-factorial design. Results showed that the nationality did have an effect on the lexical alignment, with more alignment in German nationality conditions, whereas the communication style influenced cultural adaptation and perspective taking, both higher in Asian style conditions.},
booktitle = {Proceedings of the 3rd International Conference on Intercultural Collaboration},
pages = {187–190},
numpages = {4},
keywords = {communication styles, computer-mediated communication, individualism-collectivism, lexical alignment},
location = {Copenhagen, Denmark},
series = {ICIC '10}
}

@article{10.1145/3263103,
author = {Liu, Thomas},
title = {Session details: Teaching computer graphics},
year = {2007},
issue_date = {March 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3263103},
doi = {10.1145/3263103},
journal = {SIGCSE Bull.},
month = {mar}
}

@article{10.5555/1089182.1089191,
author = {Johnson, Donald},
title = {Teaching kernel programming using Knoppix},
year = {2006},
issue_date = {February 2006},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {21},
number = {3},
issn = {1937-4771},
abstract = {The traditional platforms for teaching kernel programming have several disadvantages, including expensive hardware, disk partitioning, lack of current documentation, and obsolescence. Knoppix allows a free real Linux system that each student can use without installation, and without affecting permanently installed systems, such as Linux or Windows. With a floppy disk flashdrive, or hard disk partition to maintain programmer files, students can write, modify, and test kernel modules with relative ease. There are several caveats involved with Knoppix, including its slowness and idiosyncracies of data storage and device mounting. The UMSDOS filesystem can be used to permit a real UNIX filesystem superimposed on an MSDOS filesystem, such as a floppy disk. Example startup script commands demonstrate the flexibility and ease of use of Knoppix as a kernel programming platform.},
journal = {J. Comput. Sci. Coll.},
month = {feb},
pages = {69–75},
numpages = {7}
}

@inproceedings{10.1145/1095714.1095736,
author = {Hartpence, Bruce},
title = {Teaching wireless security for results},
year = {2005},
isbn = {1595932526},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1095714.1095736},
doi = {10.1145/1095714.1095736},
abstract = {Wireless networking, and especially wireless security, has become an increasingly important area of study for our students. To this end, we have developed a third course in our wireless sequence called Security of Wireless Networks. We have provided the students with a fast paced and interesting lab environment in which they can deploy the various techniques they have learned in lecture. To ensure that the students obtain what is necessary to survive as a wireless networking professional, we have been teaching both traditional and emerging security concepts.This wireless security course is divided into three separate phases. With each successive phase, the tools and techniques list grows, resulting in stronger defenses against network attacks. One of the best techniques to ensure that students are prepared to defend networks is to allow them to see through the hackers' eyes. As they move through the course, they must launch their own attacks. In this way, they learn what works and what does not, gaining in-depth understanding about the attack/risk and the defense/response. As their skills grow, they install defenses of increasing complexity while defending against increasingly sophisticated attacks. Students are rewarded for successful attacks and successful defenses.By adopting a team-based, attack/defend approach, we ensure that the students understand the threats and deploy appropriate defenses while being supported by their peers. After each phase, the teams give a presentation regarding their techniques so that everyone benefits maximally from the exercise. By using phases, we can differentiate between levels of responses and process the previous results to better absorb the experience and material. Our innovative teaching approach ensures that they develop the vital abilities demanded by the industry. This paper will describe the course content, methodologies, experiences, structure and demonstrated results.},
booktitle = {Proceedings of the 6th Conference on Information Technology Education},
pages = {89–93},
numpages = {5},
keywords = {attack/defend, teaching, wireless security},
location = {Newark, NJ, USA},
series = {SIGITE '05}
}

@inproceedings{10.1145/1050330.1050438,
author = {Zheliazkova, Irina and Kolev, Rumen},
title = {Modeling teaching and learning environments},
year = {2004},
isbn = {9549641384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1050330.1050438},
doi = {10.1145/1050330.1050438},
abstract = {At the present the choice of an integrated teaching and learning environment is a national resposible task for creation of the new information society of the 21 centure. During tle last decade a lot of learning and teaching environments have been developed. In the first ones the learner plays an active role, and in the second ones the teacher creates an individual plan for each learner. In this paper three block models of computer-based teaching systems and a lattice of teaching processors are remained. Three kinds of models, namely graph, block and relational are proposed as a theoretical background of an integrated teaching and learning environment.},
booktitle = {Proceedings of the 5th International Conference on Computer Systems and Technologies},
pages = {1–10},
numpages = {10},
keywords = {block model, computer-based, environments, graph model, learning, relational model, teaching},
location = {Rousse, Bulgaria},
series = {CompSysTech '04}
}

@inproceedings{10.1145/584458.584467,
author = {Stepan, Vladimir and \v{Z}\'{a}ra, Ji\v{r}\'{\i}},
title = {Teaching tennis in virtual environment},
year = {2002},
isbn = {1581136080},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/584458.584467},
doi = {10.1145/584458.584467},
abstract = {This paper deals with the problems of human animation and motion analysis, particularly in the area of methodological applications in sports training. We describe a particular program tool that has been implemented as a Java applet connected to the VRML browser through the Java EAI interface. Various aspects of this solution are discussed, as well as motion analysis and its significance for sport oriented applications.},
booktitle = {Proceedings of the 18th Spring Conference on Computer Graphics},
pages = {49–54},
numpages = {6},
keywords = {H-anim, VRML, human animation, motion analysis, tennis},
location = {Budmerice, Slovakia},
series = {SCCG '02}
}

@inproceedings{10.1145/563340.563456,
author = {Levitin, Anany and Papalaskari, Mary-Angela},
title = {Using puzzles in teaching algorithms},
year = {2002},
isbn = {1581134738},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/563340.563456},
doi = {10.1145/563340.563456},
abstract = {This paper advocates a wider use of puzzles and puzzle-like problems in teaching design and analysis of algorithms. It discusses a variety of puzzles and classifies them according to the general algorithm design techniques. Pedagogic issues are explored.},
booktitle = {Proceedings of the 33rd SIGCSE Technical Symposium on Computer Science Education},
pages = {292–296},
numpages = {5},
location = {Cincinnati, Kentucky},
series = {SIGCSE '02}
}

@article{10.1145/571922.571962,
author = {Almstrum, Vicki L. and Dean, C. Neville and Goelman, Don and Hilburn, Thomas B. and Smith, Jan},
title = {Support for teaching formal methods},
year = {2001},
issue_date = {June 2001},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {33},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/571922.571962},
doi = {10.1145/571922.571962},
abstract = {This report describes a growth path for the area referred to as formal methods within the computing education community. We define the term formal methods and situate it within our field by highlighting its role in Computing Curricula 1991, Computing Curricula 2001, and the SoftWare Engineering Body Of Knowledge (SWEBOK). The working group proposes an enhancement to an existing web resource, which is a rich collection of materials and links related to formal methods. The new resource is designed to provide a bridge between the general computing education community and the formal methods community. The goal is to allow the latter to provide useful support for the former for the ultimate benefit of all of our students. Eventually, the working group aspires to see the concepts of formal methods integrated seamlessly into the computing curriculum so that it is not necessary to separate them in our discussions.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {71–88},
numpages = {18}
}

@inproceedings{10.5555/510378.510617,
author = {Standridge, Charles R.},
title = {Teaching simulation using case studies},
year = {2000},
isbn = {0780365828},
publisher = {Society for Computer Simulation International},
address = {San Diego, CA, USA},
abstract = {We have developed and implemented a case-based approach for introducing discrete event simulation to undergraduate and graduate manufacturing engineering students. Students learn only the simulation methods necessary to support the case studies. Case studies are derived from topics of interest to practicing manufacturing engineers. Cases are organized into four modules: basic systems organizations, systems operating strategies, material handling, and supply chain management. Course instruction is based on active learning. Tutorials and laboratories assist students in comprehending the simulation methods. Courses are taught in a computer-aided teaching studio, so that the mix of passive and active learning can be adjusted as appropriate to each class meeting. An industry-based project serves as the course capstone.},
booktitle = {Proceedings of the 32nd Conference on Winter Simulation},
pages = {1630–1634},
numpages = {5},
location = {Orlando, Florida},
series = {WSC '00}
}

@inproceedings{10.1145/349316.349401,
author = {Mukundan, R.},
title = {Teaching computer graphics using Java},
year = {1999},
isbn = {9781450373258},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/349316.349401},
doi = {10.1145/349316.349401},
abstract = {Java provides most of the primitive functions necessary for implementing advanced graphics algorithms. Being a language that is highly portable and concurrent, Java also has all the capabilities of a powerful general purpose programming language suitable for a wide range of graphics applications. This paper addresses the main issues pertaining to teaching theoretical computer graphics courses, using Java as the language for implementation and project development. The paper also gives a framework of Java classes that can cater to the modeling of three-dimensional objects, transformations, and rendering algorithms.},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {66–69},
numpages = {4},
location = {<conf-loc>, <city>Cracow</city>, <country>Poland</country>, </conf-loc>},
series = {ITiCSE-WGR '99}
}

@article{10.1145/182107.182104,
author = {Lipton, Robert},
title = {Teaching mathematics using technology strategies},
year = {1994},
issue_date = {January 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {1},
issn = {0163-5735},
url = {https://doi.org/10.1145/182107.182104},
doi = {10.1145/182107.182104},
abstract = {This article explores alternate ways that technology can be utilized to teach mathematics. This is accomplished by examining the concept of the computer classroom, which is the integration of computers and their associated technologies in the teaching process. In conclusion, a comprehensive solution, based on research, is outlined and specified.},
journal = {SIGCUE Outlook},
month = {jan},
pages = {14–21},
numpages = {8}
}

@inproceedings{10.1145/322917.322972,
author = {Mills, H. D. and Basili, V. R. and Gannon, J. D. and Hamlet, R. G.},
title = {Teaching principles of computer programming},
year = {1987},
isbn = {0897912187},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/322917.322972},
doi = {10.1145/322917.322972},
abstract = {We describe a first course of two semesters in computer science that is based on mathematical principles of computer program analysis and design, rather than on apprenticeship programming. The course is modeled on elementary mathematics courses in both content and pedagogy. The content is based on a calculus of programs in which the functional semantics of programs and program parts are derived from the character valued functions that define the texts of programs. The first semester uses a minimal, but practical, subset of Pascal that has only character and character file data types, called CF Pascal, and is treated as a ruler and compass language for pedagogical advantage. This simple language, with no numbers, no arrays, no gotos, permits a complete and exact treatment of its operational semantics before the functional semantics is developed. The second semester begins with a treatment of data abstractions in order to provide an intellectual basis for the introduction of additional Pascal data types such as Boolean and integer, and the remainder of Pascal. Arrays, pointers, and gotos are introduced late in the course as advanced topics because of the complex mathematical treatments they require for program part verification and correct program design.},
booktitle = {Proceedings of the 15th Annual Conference on Computer Science},
pages = {336–341},
numpages = {6},
location = {St. Louis, Missouri, USA},
series = {CSC '87}
}

@inproceedings{10.1145/31820.31797,
author = {Shiflet, Angela B.},
title = {A historical perspective for teaching},
year = {1987},
isbn = {0897912179},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/31820.31797},
doi = {10.1145/31820.31797},
abstract = {A historical perspective in a computer science or mathematics course can help to make the class more interesting as well as help to provide an understanding of the evolution of the subject. Several anecdotes that can be used in teaching such courses will be covered in this paper.},
booktitle = {Proceedings of the Eighteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {413–414},
numpages = {2},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '87}
}

@article{10.1145/382188.382573,
author = {Crookes, D.},
title = {Experience with teaching assembly language},
year = {1983},
issue_date = {Sept. 1983},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/382188.382573},
doi = {10.1145/382188.382573},
journal = {SIGCSE Bull.},
month = {sep},
pages = {50–52},
numpages = {3}
}

@inproceedings{10.1145/800038.801050,
author = {King, Ronald S.},
title = {Teaching database concepts with seed},
year = {1983},
isbn = {0897910915},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800038.801050},
doi = {10.1145/800038.801050},
abstract = {This paper describes a course in database design taught at Baylor, including a course catalog overview, course outline, related SEED assignments, team oriented term projects, and finally, student reactions to the course.},
booktitle = {Proceedings of the Fourteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {220–227},
numpages = {8},
location = {Orlando, Florida, USA},
series = {SIGCSE '83}
}

@article{10.1145/873684.873719,
author = {Ellis, Robert A. and Wann, Donald F.},
title = {Teaching computer design using macromodules},
year = {1972},
issue_date = {March 1972},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/873684.873719},
doi = {10.1145/873684.873719},
abstract = {This paper describes the teaching of computer design using a new and quite unusual hardware aid, macromodules. Of all the new areas emerging in Computer Science the teaching of computer structures, from an engineering viewpoint, has continually challenged the professional educator. This has in a sense presented a dilemma to him: for digital computer system design requires a broad look at a variety of configurations, but also seems to require a comprehensive examination of individual circuit details in order to remain in a practical atmosphere. As is well known, such detailed investigation of many systems is virtually impossible in the time allotted in most cirricula.Introduction of the macromodular concept, however, has permitted individual students, in one or two semesters, to achieve &lt;u&gt;realizable&lt;/u&gt; designs of such devices as I/O channels, microprogrammed machines, complete small digital computers, floating point arithmetic systems and list processing hardware.},
journal = {SIGCSE Bull.},
month = {mar},
pages = {160–162},
numpages = {3}
}

@inproceedings{10.1145/3409334.3452069,
author = {Ali, Farha},
title = {Teaching a computer forensics course},
year = {2021},
isbn = {9781450380683},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3409334.3452069},
doi = {10.1145/3409334.3452069},
abstract = {Recent research points to a severe shortage of cybersecurity professionals right now and in the near future. Universities are introducing cybersecurity programs to fill the gap between cybersecurity professionals' supply and demand. Although cybersecurity concepts/courses are being taught in many undergraduate programs for quite some time, but with the recent surge for cybersecurity professionals' demand, educators have realized the need to offer cybersecurity degree programs. Despite having a plethora of unstructured cybersecurity information available, faculty are struggling to find structured content for cybersecurity major courses. In this paper, we discuss our efforts of teaching a computer forensics course. We present our teaching modules and associated hands-on activities with the hope that our peers might find our course content or teaching methodology helpful in preparing similar courses.},
booktitle = {Proceedings of the 2021 ACM Southeast Conference},
pages = {33–39},
numpages = {7},
keywords = {digital data, file analysis, forensics, memory analysis},
location = {Virtual Event, USA},
series = {ACM SE '21}
}

@inproceedings{10.1145/3358711.3361629,
author = {Sliacky, Jan and Maj, Petr},
title = {Lambdulus: teaching lambda calculus practically},
year = {2019},
isbn = {9781450369893},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3358711.3361629},
doi = {10.1145/3358711.3361629},
abstract = {λ calculus is a great formal introduction to functional programming. However, its abstract nature poses a challenge for many students as they struggle both with the unfamiliarity of functional programming and with the high abstraction and minimalism of λ calculus. As a result, functional programming classes are often delayed to older students who are hoped to be better prepared for appreciating its qualities, as was the case at the authors’ university as well. 3 years ago, as part of a redesigned curriculum around programming languages education, we have decided to introduce students to various programming paradigms much sooner than before. In doing so, we faced the problem of explaining very theoretical foundational concepts to very young students in a very short time. We have monitored the achievements and shortcomings of the new course over the past years and as a result of our findings have developed Lambdulus, an interactive and visual evaluator of λ calculus expressions that encourages students to explore the mechanisms of λ calculus by treating it not as a theoretical concept, but as a programming language in its own right.},
booktitle = {Proceedings of the 2019 ACM SIGPLAN Symposium on SPLASH-E},
pages = {57–65},
numpages = {9},
keywords = {? calculus, educational tools, programming languages curriculum},
location = {Athens, Greece},
series = {SPLASH-E 2019}
}

@inproceedings{10.1145/3320326.3320393,
author = {Amira, Teimzit and Lamia, Mahnane and Mohamed, Hafidi},
title = {Flipped classroom for algorithmic teaching},
year = {2019},
isbn = {9781450366458},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3320326.3320393},
doi = {10.1145/3320326.3320393},
abstract = {The field of education has continuously evolved, from the moment the first computers sprang up from the laboratories to massively penetrate the classrooms.The use of these technologies in training environments allows new approaches to learning to be considered. However, the quality of these approaches depends on their ability to provide learners with pedagogical content adapted to their needs and also to their preferences.In this work we want to improve algorithmic learning by proposing a system based on a new learning approach. More specifically, we are attempting through this research to make changes in the teaching method of this module.Since we assume that a misunderstanding of a basic algorithmic notion or a misinterpretation of it necessarily leads to the realization or design of an erroneous algorithm, trying to mitigate the difficulties encountered by any student in learning the algorithm is our main objective.},
booktitle = {Proceedings of the 2nd International Conference on Networking, Information Systems &amp; Security},
articleno = {59},
numpages = {4},
keywords = {Bloom Taxonomy, Computer Environment for Human Learning, Flipped classroom, Ontology, teaching algorithmics},
location = {Rabat, Morocco},
series = {NISS '19}
}

@article{10.5555/3306465.3306487,
author = {Huang, Ching-yu},
title = {Integrative curriculum for teaching databases},
year = {2019},
issue_date = {January 2019},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {34},
number = {3},
issn = {1937-4771},
abstract = {In today's age of big data, database (DB) is a particularly critical subject in Computer Science because data management is a core business for many companies, regardless of industry. Many software developers, data analysts, and other positions that need to access data and manage users require applicants to have a solid DB foundation. Before a student can take a DB class, they should at least have an intermediate knowledge of programming and set operations. Therefore, many colleges require students to first take Discrete Math and Data Structures before taking DB. This means that students typically only get DB exposure late in their college education; however, in order to better shape their career paths, students should be getting earlier DB exposure. Additionally, the curriculum of a traditional DB course focuses on relational DB and Structure Query Language (SQL), even though the NoSQL DB is gaining much more popularity in the workplace. Furthermore, in the workplace, web-based applications are in high demand because they are platform independent and can be accessed worldwide. For web database application developers, it is important to learn how DB works with different technologies. Traditional DB curriculum neglects this practical aspect, and often solely focuses on theory. This paper proposes an integrative curriculum for teaching DB that interweaves essential theoretical DB concepts, as well as hands-on practical DB experience.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {131},
numpages = {1}
}

@article{10.5555/3069658.3069661,
author = {Heines, Jesse M. and Walzer, Daniel A. and Crawford, Rachel},
title = {Teaching a computer to sing},
year = {2017},
issue_date = {June 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {6},
issn = {1937-4771},
abstract = {This workshop will give attendees direct experience in working with the techniques and tools we use to teach computing in the context of music and music in the context of computing. It will describe and demonstrate the work we have done over the last two years in a middle school, after-school program that combines singing with programming. It will also provide a forum for discussion of how this work can be adapted for participants' schools.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {7–9},
numpages = {3}
}

@inproceedings{10.1109/EduHPC.2014.7,
author = {Shafi, Aamir and Akhtar, Aleem and Javed, Ansar and Carpenter, Bryan},
title = {Teaching parallel programming using Java},
year = {2014},
isbn = {9781479970216},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/EduHPC.2014.7},
doi = {10.1109/EduHPC.2014.7},
abstract = {This paper presents an overview of the "Applied Parallel Computing" course taught to final year Software Engineering undergraduate students in Spring 2014 at NUST, Pakistan. The main objective of the course was to introduce practical parallel programming tools and techniques for shared and distributed memory concurrent systems. A unique aspect of the course was that Java was used as the principle programming language. The course was divided into three sections. The first section covered parallel programming techniques for shared memory systems including multicore and Symmetric Multi-Processor (SMP) systems. In this section, Java threads API was taught as a viable programming model for such systems. The second section was dedicated to parallel programming tools meant for distributed memory systems including clusters and network of computers. We used MPJ Express---a Java MPI library---for conducting programming assignments and lab work for this section. The third and the final section introduced advanced topics including the MapReduce programming model using Hadoop and the General Purpose Computing on Graphics Processing Units (GPGPU).},
booktitle = {Proceedings of the Workshop on Education for High-Performance Computing},
pages = {56–63},
numpages = {8},
keywords = {Java MPI, MPJ express, parallel programming education},
location = {New Orleans, Louisiana},
series = {EduHPC '14}
}

@inproceedings{10.5555/2429759.2429762,
author = {Henderson, Shane G. and Jacobson, Sheldon and Robinson, Stewart},
title = {Teaching an advanced simulation topic},
year = {2012},
publisher = {Winter Simulation Conference},
abstract = {In this tutorial three experienced instructors describe how they teach an advanced simulation topic: Poisson processes (Henderson), variance reduction (Jacobson), and verification and validation (Robinson).},
booktitle = {Proceedings of the Winter Simulation Conference},
articleno = {2},
numpages = {9},
location = {Berlin, Germany},
series = {WSC '12}
}

@inproceedings{10.1145/2414659.2414661,
author = {Sreeram, Jaswanth and Herhut, Stephan and Hudson, Richard L. and Shpeisman, Tatiana},
title = {Teaching parallelism with river trail},
year = {2012},
isbn = {9781450318402},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2414659.2414661},
doi = {10.1145/2414659.2414661},
abstract = {Parallel hardware is today's reality and parallel programming models exist for most mainstream languages. Surprisingly JavaScript, the mother tongue of the web, is still stuck in its sequential past. JavaScript's unique programming model, the web's safety and security requirements, and the expectations of its programmers for determinism have impeded parallelization until now.Parallel JavaScript (code named River Trail) is a set of JavaScript extensions and an API that provides safe, deterministic parallelism to web applications while fitting within the event-driven, security oriented world of JavaScript applications. River Trail allows programmers to utilize available hardware parallelism on client machines - from SIMD units to multiple cores, using high-level parallel programming patterns.In this paper we describe River Trail, show how it can be used to provide a gentle introduction to parallelism using our selfcontained hands-on tutorial. At the end of the tutorial the student will have mastered the basic concepts of parallel programming and use this knowledge to build a realistic parallel HTML5 web application in River Trail.},
booktitle = {Proceedings of the 2012 Workshop on Developing Competency in Parallelism: Techniques for Education and Training},
pages = {1–8},
numpages = {8},
keywords = {JavaScript, parallelism},
location = {Tucson, Arizona, USA},
series = {DCP '12}
}

@inproceedings{10.1145/2159365.2159421,
author = {Sullivan, Anne and Smith, Gillian},
title = {Lessons in teaching game design},
year = {2011},
isbn = {9781450308045},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2159365.2159421},
doi = {10.1145/2159365.2159421},
abstract = {In this paper, we describe a video game design and programming class offered as part of the California Summer School for Mathematics and Science (COSMOS) program at University of California, Santa Cruz. The authors have co-taught this class for four years, and have had an opportunity to iteratively explore a number of approaches in teaching the class. The course has evolved a great deal over the last four years; this paper presents a post-mortem of the program so far, describes our different approaches, and provides insight into the game design process for students.},
booktitle = {Proceedings of the 6th International Conference on Foundations of Digital Games},
pages = {307–309},
numpages = {3},
keywords = {computer science fluency, education, game design and development, games, high school, lesson plans, outreach, project-based course},
location = {Bordeaux, France},
series = {FDG '11}
}

@inproceedings{10.5555/2433508.2433537,
author = {Macal, Charles M. and North, Michael J.},
title = {Toward teaching agent-based simulation},
year = {2010},
isbn = {9781424498642},
publisher = {Winter Simulation Conference},
abstract = {Agent-based simulation (ABS) is a relatively recent modeling technique that is being widely used to model complex adaptive systems by many disciplines. Few full length courses exist on agent-based modeling and a standard curriculum has not yet been established, but there is considerable demand to include ABS into simulation courses. Modelers often come to agent-based simulation by way of self-study or attendance at tutorials and short courses. Although there is substantial overlap, there are many aspects of ABS that differ from discrete-event simulation (DES) and System Dynamics (SD), including applicable problem domains, disciplines and backgrounds of students, and the underpinnings of its computational implementation. These factors make ABS difficult to include as an incremental add-on to existing simulation courses. This paper reports on some approaches to teaching the modeling of complex systems and agent-based simulation that the authors have used in a range of classes and workshops.},
booktitle = {Proceedings of the Winter Simulation Conference},
pages = {268–277},
numpages = {10},
location = {Baltimore, Maryland},
series = {WSC '10}
}

@inproceedings{10.5555/1854360.1854499,
author = {Zhang, Amy and Cardella, Monica},
title = {Knowledge transmission and engineering teaching},
year = {2010},
publisher = {International Society of the Learning Sciences},
abstract = {This paper explores the concept of knowledge as well as the process of knowledge transmission, both in general and specifically regarding engineering knowledge. This study focuses on twenty-four parents who discussed the activities that they engage in to help their children learn about engineering during hour-long interviews. The intergenerational transmission of knowledge that is described in the interviews is analyzed through 1) social structural and cultural analysis, and 2) a case study. We find that parents teach children what they perceived as engineering knowledge, which is not necessarily true but rather subjective, and believed to be a fact based on the parent's other forms of knowledge learned in the past. Understanding this will help us look at engineering education from a new perspective, and the application of this understanding could be used to help provide non-engineering parents alternative ways to support their wish to explore engineering knowledge with their children.},
booktitle = {Proceedings of the 9th International Conference of the Learning Sciences - Volume 1},
pages = {1087–1094},
numpages = {8},
location = {Chicago, Illinois},
series = {ICLS '10}
}

@article{10.1145/1721933.1721934,
author = {Cooper, Steve and Cunningham, Steve},
title = {Teaching computer science in context},
year = {2010},
issue_date = {March 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/1721933.1721934},
doi = {10.1145/1721933.1721934},
abstract = {Do we need another editorial about engaging students in learning computer science so they will stay in the field and prepare for a career or further study? We wish it were not so, but in spite of some progress, there is little evidence that our students complete courses or stay in their degree programs at better rates than a few years ago. There are bright spots in the picture and some promising results here and there, but an overall pattern of change and improvement is not yet evident.},
journal = {ACM Inroads},
month = {mar},
pages = {5–8},
numpages = {4},
keywords = {computational thinking, computer science education, context, engagement, motivation}
}

@article{10.1145/1506409.1506420,
author = {Guzdial, Mark},
title = {EducationTeaching computing to everyone},
year = {2009},
issue_date = {May 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {5},
issn = {0001-0782},
url = {https://doi.org/10.1145/1506409.1506420},
doi = {10.1145/1506409.1506420},
abstract = {Studying the lessons learned from creating high-demand computer science courses for non-computing majors.},
journal = {Commun. ACM},
month = {may},
pages = {31–33},
numpages = {3}
}

@article{10.5555/1516546.1516555,
author = {Stanley, Timothy and Kim, Nathan I. and Chan, Yiu-Ming and Zheng, Ji and Fife, Leslie},
title = {Experiences in teaching computer architecture},
year = {2009},
issue_date = {April 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {4},
issn = {1937-4771},
abstract = {Many methods exist for teaching computer organization and architecture. These include hardware kits, hardware emulation and logic simulation tools. Each method has advantages and disadvantages. It is important to understand the differences of each approach and the needs and interests of the students. Over a period of several years these methods have been used in sophomore level computer organization and senior level computer architecture courses. This paper explores the tradeoffs associated with each choice through a discussion of tools used.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {46–52},
numpages = {7}
}

@article{10.5555/1516546.1516553,
author = {Tucker, Allen B.},
title = {Teaching client-driven software development},
year = {2009},
issue_date = {April 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {4},
issn = {1937-4771},
abstract = {To teach the principles and practice of software development, there's no better motivator than a team project that can be completed in a semester, real-world clients will value, and other courses and clients can freely adapt. This paper considers a model for teaching software development that uses modern collaboration tools, open source, continuous client involvement, and teamwork as primary ingredients. The model is based on an extraordinary software development experience that occurred in Spring 2008. This paper describes that experience and suggests guidelines that enable similar courses to be taught in the future.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {29–39},
numpages = {11}
}

@inproceedings{10.1145/1566445.1566536,
author = {Karam, Orlando and Peltsverger, Svetlana},
title = {Teaching with security in mind},
year = {2009},
isbn = {9781605584218},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1566445.1566536},
doi = {10.1145/1566445.1566536},
abstract = {Security topics have been taught for some time at universities. The most common approach has been to teach a required topic, and then introduce a security module later in the course. We are promoting the notion of teaching security at the same time as main course's material. This helps students to adopt to the idea of writing secure code at an early stage and encourages them to focus on the security issues before beginning coding. While this method has clear advantages, it is not easy to implement in practice. This is partly a result of the faculty's luck of awareness about security issues, and the perception of security as an advanced topic. We see security as an extension of the basic concept of input validation, and so a very basic topic. We also propose teaching secure practices as the default model presented to the students, facilitating the adoption of those practices.},
booktitle = {Proceedings of the 47th Annual Southeast Regional Conference},
articleno = {68},
numpages = {4},
keywords = {SQL injection, SQL injection attacks, computer security, web development},
location = {Clemson, South Carolina},
series = {ACM-SE 47}
}

@inproceedings{10.1145/1384271.1384361,
author = {Deugo, Dwight},
title = {Eclipse as a teaching tool},
year = {2008},
isbn = {9781605580784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1384271.1384361},
doi = {10.1145/1384271.1384361},
abstract = {In this Demonstration session, I will show what to teach students about Eclipse, while remaining in the contexts of existing courses, such as CS1/CS2, in higher-level courses such as Quality Assurance, and in project courses.},
booktitle = {Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {318},
numpages = {1},
keywords = {eclipse, java, open source, teaching},
location = {Madrid, Spain},
series = {ITiCSE '08}
}

@inproceedings{10.1145/1384271.1384338,
author = {Linhoff, Joe and Settle, Amber},
title = {Teaching game programming using XNA},
year = {2008},
isbn = {9781605580784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1384271.1384338},
doi = {10.1145/1384271.1384338},
abstract = {As educators work to expand the audience interested in computer science, computer gaming programs have blossomed at a variety of educational institutions. Educators are coming to recognize that gaming is a compelling way to motivate students to learn challenging technical concepts such as programming, software engineering, algorithms, and project management. At the core of many gaming programs are game development courses, which teach technical aspects about software development in a motivating environment. While many game development courses share a common goal, the structure and goals of game development courses can be quite diverse. We describe a game development course that uses the XNA platform to allow a heterogeneous group of students to gain experience in all aspects of console game creation, an approach we believe has some interesting pedagogical benefits.},
booktitle = {Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {250–254},
numpages = {5},
keywords = {supporting courses: game development, using emerging instructional technologies: XNA},
location = {Madrid, Spain},
series = {ITiCSE '08}
}

@inproceedings{10.1145/3245827,
author = {Adams, Ray},
title = {Session details: Teaching and learning},
year = {2007},
isbn = {9781595935731},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3245827},
doi = {10.1145/3245827},
booktitle = {Proceedings of the 9th International ACM SIGACCESS Conference on Computers and Accessibility},
location = {Tempe, Arizona, USA},
series = {Assets '07}
}

@inproceedings{10.1145/1007996.1008037,
author = {Stuurman, Sylvia and Florijn, Gert},
title = {Experiences with teaching design patterns},
year = {2004},
isbn = {1581138369},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1007996.1008037},
doi = {10.1145/1007996.1008037},
abstract = {In this paper, we present an assignment for a course on Design patterns at the masters level, where students have to adapt an existing program to meet additional requirements. We describe the basic program, discuss the reasons why we decided for such an assignment, and show the results. The assignment proved to be very effective both to train students to work with design patterns and to assess that students have reached the learning goals. This was true both for students with a professional background and for students with academic interests.},
booktitle = {Proceedings of the 9th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {151–155},
numpages = {5},
keywords = {design patterns, distance learning},
location = {Leeds, United Kingdom},
series = {ITiCSE '04}
}

@inproceedings{10.1145/563340.563468,
author = {Sanders, Ian},
title = {Teaching empirical analysis of algorithms},
year = {2002},
isbn = {1581134738},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/563340.563468},
doi = {10.1145/563340.563468},
abstract = {In this paper I argue that empirical analysis of algorithms is important but also difficult and requires a place in our curricula. I discuss how I planned to include coverage of this topic through lectures, discussions and practical work and the approach that I took in the Honours Analysis of Algorithms topic at the University of the Witwatersrand in 2001. I then discuss the results of a survey conducted on the Honours class and suggest some improvements for 2002.},
booktitle = {Proceedings of the 33rd SIGCSE Technical Symposium on Computer Science Education},
pages = {321–325},
numpages = {5},
location = {Cincinnati, Kentucky},
series = {SIGCSE '02}
}

@article{10.1145/262171.262206,
author = {Pavlidis, Theo},
title = {Teaching graphics through video games},
year = {1997},
issue_date = {August 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {3},
issn = {0097-8930},
url = {https://doi.org/10.1145/262171.262206},
doi = {10.1145/262171.262206},
journal = {SIGGRAPH Comput. Graph.},
month = {aug},
pages = {56–57},
numpages = {2}
}

@inproceedings{10.1145/259081.259400,
author = {Lehmann, Stefan and Overberg, Thomas},
title = {Interactive learning and teaching environment},
year = {1997},
isbn = {0897919211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/259081.259400},
doi = {10.1145/259081.259400},
booktitle = {ACM SIGGRAPH 97 Visual Proceedings: The Art and Interdisciplinary Programs of SIGGRAPH '97},
pages = {269},
location = {Los Angeles, California, USA},
series = {SIGGRAPH '97}
}

@inproceedings{10.1145/3610540.3627010,
author = {Bennett, Gregory and Najafi, Hossein and Jackson, Lee},
title = {Pedagogical strategies for teaching Virtual Production pipelines},
year = {2023},
isbn = {9798400703119},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3610540.3627010},
doi = {10.1145/3610540.3627010},
abstract = {The incorporation of LED walls and virtual production tools in the film industry is a recent development that has significant pedagogical implications (BLISTEIN, 2020; FARID and TORRALBA, 2021). The use of LED walls combines physical and digital realities, potentially reducing post-production time and resource usage (ONG, 2020). Virtual production can facilitate immediate on-set decision-making and mitigate the need for certain post-production adjustments (EPIC GAMES, 2020). MIT researchers posit that such practices may also reduce the carbon footprint associated with location filming (FARID and TORRALBA, 2021). Nonetheless, further research and innovation are needed to overcome any limitations and fully harness the potential of this technology.The utilization of Unreal Engine software and other real-time tools in visual effects education aligns with industry trends and enhances student preparedness for professional practice (FLEISCHER, 2020). It has been suggested that engaging students with these tools can foster an understanding of the virtual production pipeline, thus aligning the educational curriculum with evolving industry standards (BALSAMO et al., 2021).As educators at Auckland University of Technology, we recognized the necessity of early integration of these paradigm-shifting tools into our curriculum to prepare students for impending and ongoing industry changes. In anticipation of procuring LED walls, we explored the potential of leveraging existing resources to initiate a pedagogical foray into the virtual production sphere. The available resources encompassed a large green screen studio, a motion capture studio, and virtual reality (VR) headsets and trackers.This paper offers two pedagogical responses that were deployed in courses situated in the final (third) year of undergraduate studies for an Animation, Visual Effects and Game Design Major, Bachelor of Design, at the School of Art and Design, Auckland University of Technology. One course is positioned within a motion capture minor and the other an option within a major capstone project framework.These two responses form case studies in the technical modification of existing teaching equipment and the need to push the limits of existing software and hardware resources within the attendant budgetary constraints of a tertiary education institution. This, in turn, is in the service of meeting shifting tertiary curriculum demands in response to a technologically fluid and future-focused industry.},
booktitle = {SIGGRAPH Asia 2023 Educator's Forum},
articleno = {11},
numpages = {10},
keywords = {compositing, computer graphics, education, motion capture, virtual production, virtual reality},
location = {<conf-loc>, <city>Sydney</city>, <state>NSW</state>, <country>Australia</country>, </conf-loc>},
series = {SA '23}
}

@inproceedings{10.1145/2889160.2889181,
author = {Stegh\"{o}fer, Jan-Philipp and Knauss, Eric and Al\'{e}groth, Emil and Hammouda, Imed and Burden, H\r{a}kan and Ericsson, Morgan},
title = {Teaching Agile: addressing the conflict between project delivery and application of Agile methods},
year = {2016},
isbn = {9781450342056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2889160.2889181},
doi = {10.1145/2889160.2889181},
abstract = {This paper analyses the changes we have made in teaching agile methodologies, practices, and principles in four courses in order to address a specific dilemma: students need to apply agile methods in order to learn them, but when complementing our courses with applied content, we face the problem that students perceive the learning and application of agile methods as less important than delivering a finished product at the end of the course. This causes students to not apply theoretical process knowledge and therefore to not develop necessary skills associated with working with defined processes in the industry. Concretely, we report on our experience with teaching Scrum with Lego, removing formal grading requirements on the delivered product, emphasising process application in post-mortem reports, and organisational changes to support the process during supervision. These changes are analysed in the context of student satisfaction, teacher observations, and achievements of learning outcomes. We also provide an overview of the lessons learnt to help guide the design of courses on agile methodologies.},
booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
pages = {303–312},
numpages = {10},
keywords = {Agile methodogies, Scrum, project-based learning, software engineering education, teaching},
location = {Austin, Texas},
series = {ICSE '16}
}

@inproceedings{10.1145/3610591.3616436,
author = {Son, Jungah and Peljhan, Marko and Legrady, George},
title = {Reflection on Abstract Art through Kandinsky's Teaching: Reflection on Abstract Art through Reconstruction of Kandinsky's Teaching at the Bauhaus},
year = {2023},
isbn = {9798400703201},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3610591.3616436},
doi = {10.1145/3610591.3616436},
abstract = {Wassily Kandinsky is considered as one of the pioneers of abstract painting in Europe. In this paper, our goal is to develop a user interface that models Kandinsky's analytical drawing process within a computational context to advance research in artificial intelligence and the arts. A user first chooses a photograph from the ObjectNet3D database, objects of which are aligned with the 3D shapes. Using the 3D shape information, the software extracts 2D projection contours. Then, it performs corner detection and finds structural networks. Lastly, the software transforms the photograph into an abstract image based on a student example.},
booktitle = {SIGGRAPH Asia 2023 Art Papers},
articleno = {7},
numpages = {4},
keywords = {Abstract art, Analytical drawing, Image stylization, Kandinsky},
location = {<conf-loc>, <city>Sydney</city>, <state>NSW</state>, <country>Australia</country>, </conf-loc>},
series = {SA '23}
}

@inproceedings{10.1145/3152130.3152136,
author = {Zamansky, Anna and van der Linden, Dirk and Baskin, Sofya},
title = {Teaching Animal-Computer Interaction: an Experience Report},
year = {2017},
isbn = {9781450353649},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3152130.3152136},
doi = {10.1145/3152130.3152136},
abstract = {Six years ago the ACI manifesto marked the birth of ACI as a scientific discipline. Since then ACI has been rapidly evolving, as can be witnessed by the variety of publications, conferences and workshops on the topic. This evolution makes it timely to explore the issue of ACI education. What constitutes the toolbox of practitioners working in the field of ACI, and how can we teach ACI to the next generation of students? This short paper invites the ACI community to engage in a discussion of these topics by presenting our own experiences and lessons learnt in designing and teaching a course on ACI to information systems and computing students at the University of Haifa.},
booktitle = {Proceedings of the Fourth International Conference on Animal-Computer Interaction},
articleno = {4},
numpages = {7},
keywords = {ACI, animal-computer interaction, education},
location = {Milton Keynes, United Kingdom},
series = {ACI '17}
}

@article{10.5555/3069658.3069693,
author = {Kortsarts, Yana},
title = {Teaching computer forensics course: challenges and opportunities},
year = {2017},
issue_date = {June 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {6},
issn = {1937-4771},
abstract = {Computer forensics, still a relatively new discipline in computer security, focuses on finding digital evidence after a computer security incident has occurred. Computer forensics is the scientific examination and analysis of data held on, or retrieved from, computer storage media in such a way that the information can be used as evidence in a court of law. Computer evidence is often transparently created by the operating system without the knowledge of the computer user. The information may be hidden from view. To find it, special forensic software tools and techniques are required. Technology is expanding at a fast rate, and along with the increased use of computers, the Internet, and digital devices comes an increase in digital crime. With the increased use of computers to commit crimes, a need has rapidly developed for forensic experts to extract useful information from computer evidence. Computer forensics is a fast-growing field with high long-term projected demand for trained professionals.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {208–209},
numpages = {2}
}

@article{10.5555/772636.772665,
author = {Close, Richard and Kopec, Danny and Aman, Jim},
title = {Teaching in shifting sands: changes in CS2},
year = {2002},
issue_date = {February 2002},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {3},
issn = {1937-4771},
abstract = {At a time when the Curriculum 2001 committee is compiling their recommendations, it is perhaps useful to look to the past and track the evolution of the CS2 course. As the computer science curriculum has evolved through the years [4], more has been expected of students in lower-level courses. This may be seen as a natural evolution; a sign of the maturity of the field. Changes in the curriculum, particularly the breadth-first approach, have affected the content and delivery of every course. The net result is that the first course in computer science is less concerned with teaching programming skills in a single language, a burden now shifted to later courses. The CS2 course has become more important in its effect on a student's experience, knowledge, and outlook on the entire computer science major.One of the most difficult questions for faculty is what precisely should be included in CS2? Should we play to the audience and teach what a fairly large number of students seem to want (Java, web-programming, Visual BASIC, etc.)? Or should we continue with the latest ACM/IEEE recommendations and risk becoming extinct or irrelevant? This paper examines the reactions of three very different institutions with very different constituencies to these questions.},
journal = {J. Comput. Sci. Coll.},
month = {feb},
pages = {178–182},
numpages = {5}
}

@inproceedings{10.1145/3459043.3459054,
author = {Ying, Huang},
title = {The Application of Game Teaching Method in the Course of "Web Design and Production" in the Teaching Project},
year = {2021},
isbn = {9781450389617},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459043.3459054},
doi = {10.1145/3459043.3459054},
abstract = {Abstract: In view of the shortcomings of the traditional teaching mode of the "Web Design and Production" course in higher education institutions, the role and significance of integrating gamification in the project teaching in the computer courses of higher education institutions are discussed. The aim is to encourage students to learn more vividly and independently, and to enjoy receiving knowledge and mastering the process of enterprise website development in the process of gamification, so as to truly realise the interface with real jobs. It has been very effective in promoting students' interest in learning and improving their core qualities, and is expected to be beneficial to the teaching reform of computer courses in higher education institutions.},
booktitle = {Proceedings of the 2021 2nd International Conference on Education Development and Studies},
pages = {55–62},
numpages = {8},
keywords = {gamification, project teaching method, webpage production},
location = {Hilo, HI, USA},
series = {ICEDS '21}
}

@inproceedings{10.1145/1187358.1187398,
author = {Flaxman, Tereza},
title = {Teaching 3D animation online: the ultimate challenge?},
year = {2005},
isbn = {9781450378314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1187358.1187398},
doi = {10.1145/1187358.1187398},
booktitle = {ACM SIGGRAPH 2005 Educators Program},
pages = {33–es},
location = {Los Angeles, California},
series = {SIGGRAPH '05}
}

@article{10.5555/3648699.3648739,
author = {Fallat, Shaun and Kirkpatrick, David and Simon, Hans U. and Soltani, Abolghasem and Zilles, Sandra},
title = {On batch teaching without collusion},
year = {2024},
issue_date = {January 2023},
publisher = {JMLR.org},
volume = {24},
number = {1},
issn = {1532-4435},
abstract = {Formal models of learning from teachers need to respect certain criteria to avoid collusion. The most commonly accepted notion of collusion-avoidance was proposed by Goldman and Mathias (1996), and various teaching models obeying their criterion have been studied. For each model M and each concept class C, a parameter M-TD(C) refers to the teaching dimension of concept class C in model M--defined to be the number of examples required for teaching a concept, in the worst case over all concepts in C.This paper introduces a new model of teaching, called no-clash teaching, together with the corresponding parameter NCTD(C). No-clash teaching is provably optimal in the strong sense that, given any concept class C and any model M obeying Goldman and Mathias's collusion-avoidance criterion, one obtains NCTD(C) ≤ M-TD(C). We also study a corresponding notion NCTD+ for the case of learning from positive data only, establish useful bounds on NCTD and NCTD+, and discuss relations of these parameters to other complexity parameters of interest in computational learning theory.We further argue that Goldman and Mathias's collusion-avoidance criterion may in some settings be too weak in that it admits certain forms of interaction between teacher and learner that could be considered collusion in practice. Therefore, we introduce a strictly stronger notion of collusion-avoidance and demonstrate that the well-studied notion of Preference-based Teaching is optimal among all teaching schemes that are strongly collusion-avoiding on all finite subsets of a given concept class.},
journal = {J. Mach. Learn. Res.},
month = {mar},
articleno = {40},
numpages = {33},
keywords = {machine teaching, collusion-freeness, VC dimension, teaching dimension, sample compression}
}

@article{10.1145/3481356,
author = {Walther, Kendra and Ladner, Richard E.},
title = {Broadening participation by teaching accessibility},
year = {2021},
issue_date = {October 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {64},
number = {10},
issn = {0001-0782},
url = {https://doi.org/10.1145/3481356},
doi = {10.1145/3481356},
abstract = {Strategies for incorporating accessibility into computing education.},
journal = {Commun. ACM},
month = {sep},
pages = {19–21},
numpages = {3}
}

@inproceedings{10.1145/3456565.3460037,
author = {Aycock, John},
title = {Teaching Social Engineering Using Improv},
year = {2021},
isbn = {9781450383974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456565.3460037},
doi = {10.1145/3456565.3460037},
abstract = {Teaching social engineering in a computer security class is tractable in a lecture-based format, but presents challenges for a hands-on, active learning course, especially for instructors who aren't specialists in that area. I present a method for teaching social engineering in an ethical, approachable fashion that draws on improvisational theater.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {629–630},
numpages = {2},
keywords = {computer security, education, improv, social engineering},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3408877.3439524,
author = {Van Dusen, Eric},
title = {Jupyter for Teaching Data Science},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439524},
doi = {10.1145/3408877.3439524},
abstract = {A recent evolution of cloud-based tools creates an easy and powerful way for students to access the industry standard data science tools from within a browser window. Jupyter notebooks were originally developed for sharing of scientific results and reproducible open science. However, when delivered through a cloud-based server, they have huge benefits for teaching, including removing the need to install any software locally or require any specific machine to be used by students. UC Berkeley has extensive experience teaching via Jupyter, including the popular introductory Data 8 course, small Data Science Modules in non- Data Science classes, and advanced work in the Data 100 and Data 102 ( Machine Learning) classes. There is a library of OER curricular materials to share between institutions. In addition, Multiple languages and interfaces can be served, from Jupyter in multiple languages, Rstudio, and even a Linux desktop, as well as auto-grading approaches. We are interested to share experiences across institutions utilizing this approach.The use of teaching Jupyterhubs to date, both for introductory to Data Science courses, as well as more advanced topics is growing rapidly. We would like to have a conversation about how to use Jupyterhubs and teaching Jupyter notebooks from a variety of instructors and institutions. We are also interested in how to provide these types of resources to additional educational settings who may be more resource constrained.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1359},
numpages = {1},
keywords = {computational thinking, data science, interactive computing},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.5555/3018088.3018091,
author = {Eijkhout, Victor},
title = {Teaching MPI from mental models},
year = {2016},
isbn = {9781509038275},
publisher = {IEEE Press},
abstract = {The Message Passing Interface (MPI) is the de facto standard for programming large scale parallelism, with up to millions of individual processes. Its dominant paradigm of Single Program Multiple Data (SPMD) programming is different from threaded and multicore parallelism, to an extent that students have a hard time switching models. In contrast to threaded programming, which allows for a view of the execution with central control and a central repository of data, SPMD programming has a symmetric model where all processes are active all the time, and none is priviliged in any sense, and where data is distributed.This model is counterintuitive to the novice parallel programmer, so care needs to be taken how to instill the proper `mental model'.We identify problems with the currently common way of teaching MPI, and propose a way that is geared to explicit reinforcing the symmetric model. Additionally, we teach starting from realistic scenarios, rather than writing artificial code just to exercise a newly-learned routine.This motivation implies that we reverse the commonly used order of presenting MPI routines, starting with collectives, and later introducing point-to-point routines only as support for certain symmetric operations, avoiding the process-to-process model.},
booktitle = {Proceedings of the Workshop on Education for High Performance Computing},
pages = {14–18},
numpages = {5},
location = {Salt Lake City, Utah},
series = {EduHPC '16}
}

@article{10.5555/2831373.2831388,
author = {Gestwicki, Paul},
title = {Teaching game programming with PlayN},
year = {2015},
issue_date = {October 2015},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {31},
number = {1},
issn = {1937-4771},
abstract = {This experience report describes the deployment of PlayN in undergraduate game programming courses. PlayN is an open-source library for developing digital games in Java and deploying them to Android, iOS, HTML5, and desktop computers. The experience report is based on four semesters and three different course configurations: in each, PlayN was deployed in a project-oriented pedagogy along with distributed version control, continuous integration, and agile project management techniques. This approach brings several benefits, including exposing students to industrial best practices, showing the benefits of code quality, helping students learn to read source code written by others, and reinforcing concepts of object-orientation, particularly the multiple possible reifications of design patterns. The same configuration that brings these benefits also brings challenges: faculty must invest time in learning the library, its dependencies, and the tooling around them; resources or experience are required to configure and maintain the technology infrastructure, as well as to assist students in overcoming fear and ignorance regarding computing systems -- even their own; and significant time must be invested in creating resources to scaffold the student learning experience.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {90–97},
numpages = {8}
}

@inproceedings{10.1145/2532748.2532762,
author = {Alexandron, Giora and Armoni, Michal and Gordon, Michal and Harel, David},
title = {On teaching programming with nondeterminism},
year = {2013},
isbn = {9781450324557},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2532748.2532762},
doi = {10.1145/2532748.2532762},
abstract = {Non-determinism (ND) is a fundamental concept in computer science, and comes in two main flavors. One is the kind of ND that appears in automata theory and formal languages. The other, which we term operative, appears in non-deterministic programming languages and in the context of concurrent and distributed systems. We believe that it is important to teach the two types of ND, especially as ND has become a very prominent characteristic of computerized systems. Currently, students are mainly introduced to ND of the first type, which is known to be hard to teach and learn. Our findings suggest that learning operative ND might be easier, and that students can reach a significant understanding of this concept when it is introduced in the context of a programming course that deals with a non-deterministic programming language like the language of Live Sequence Charts (LSC). Based on that, we suggest teaching operative ND in the context of concurrent and distributed programming, a topic which is covered by a new knowledge area that was added in Computer Science Curricula 2013.},
booktitle = {Proceedings of the 8th Workshop in Primary and Secondary Computing Education},
pages = {71–74},
numpages = {4},
keywords = {constructionism, non-determinism},
location = {Aarhus, Denmark},
series = {WiPSE '13}
}

@inproceedings{10.1145/3249868,
author = {Zhang, Jian},
title = {Session details: Paper - teaching CS1},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3249868},
doi = {10.1145/3249868},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.5555/2663678.2663685,
author = {Ludewig, Jochen and Bogicevic, Ivan},
title = {Teaching software engineering with projects},
year = {2012},
isbn = {9781467318051},
publisher = {IEEE Press},
abstract = {The software engineering curriculum offered by the University of Stuttgart emphasizes project work from the first to the last semester. While some of the projects are similar to those in other programs, others are less common. In this paper, we describe an introductory course called "Program Understanding", and the so called "Consulting Task". We also give a short description of what we call the First Software Project and the Large Software Project. In the Program Understanding course, new students learn to understand a fairly large, complex program in order to implement some modifications. In the Large Software Project, some ten people work on a serious software development for one year. In the Consulting Task, a group of three students analyses a problem, usually one given by an industrial partner. The students investigate possible solutions, and finally deliver a recommendation. Both our experience and feedback from students, including feedback from alumni, prove that these projects are very successful and highly esteemed.},
booktitle = {Proceedings of the First International Workshop on Software Engineering Education Based on Real-World Experiences},
pages = {25–28},
numpages = {4},
keywords = {consulting task, program understanding, software engineering curriculum, software projects},
location = {Zurich, Switzerland},
series = {EduRex '12}
}

@inproceedings{10.1145/3250501,
author = {Butz, Andreas},
title = {Session details: Teaching with games},
year = {2012},
isbn = {9781450310154},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250501},
doi = {10.1145/3250501},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
location = {Austin, Texas, USA},
series = {CHI '12}
}

@inproceedings{10.1145/2157136.2157312,
author = {Andrus, Jeremy and Nieh, Jason},
title = {Teaching operating systems using android},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157312},
doi = {10.1145/2157136.2157312},
abstract = {The computing landscape is shifting towards mobile devices. To learn about operating systems, it is increasingly important for students to gain hands-on kernel programming experience in these environments, which are quite different from traditional desktops and servers. We present our work at Columbia University to teach operating systems using Android, an open, commercially supported software platform increasingly used on mobile and embedded devices. We introduce a series of five Android kernel programming projects suitable for a one semester introductory operating systems course. Each project teaches a core operating system concept infused with Android or mobile device specific context, such as Android specific process relationships, use of sensors, and design considerations for resource constrained mobile devices. We also introduce an Android virtual laboratory based on virtual appliances, distributed version control, and live demonstrations which gives students hands-on Android experience, with minimal computing infrastructure. We have used these Android kernel programming projects and the Android virtual lab to teach an introductory operating systems course. Although this was our first time teaching the course using Android, over 80% of students surveyed enjoyed using Android and the majority of students preferred Android to traditional desktop development.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {613–618},
numpages = {6},
keywords = {android, mobile devices, operating systems},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@article{10.5555/1858583.1858610,
author = {Hoganson, Ken},
title = {Teaching programming concepts with GameMaker},
year = {2010},
issue_date = {December 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {26},
number = {2},
issn = {1937-4771},
abstract = {This paper explores the idea of using the popular GameMaker system, GUI, language, and IDE for introducing students to programming in an approachable way that appeals to students interests and cultural experiences. GameMaker allows students to create and program playable games using the introductory development GUI, and then seamlessly transition to programming using the GameMaker Language (GML). While the idea of introducing software development through game design or other interesting and engaging approaches is not new, many innovative approaches do not seamlessly progress into programming. Students must often discard the platform-specific techniques and skills when moving to a traditional programming language, leveraging only conceptual understanding. This is particularly true when transitioning from an icon-based drag-and-drop GUI development system that supports the logic of programming while insulating the student developer from syntax and language complexity. Because the GML follows Java syntax and supports OO concepts, the transition from GML to Java programming is a natural progression. This paper demonstrates that GameMaker GML follows Java syntax and supports OO technologies and concepts including objects, methods, and inheritance along with standard program control features (various loops and ifs), along with discrete real-time control and timing, graphical objects and design.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {181–188},
numpages = {8}
}

@article{10.1145/1386585.1386589,
author = {Harvey, Brian},
title = {Teaching social implications of computing},
year = {2008},
issue_date = {June 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {38},
number = {2},
issn = {0095-2737},
url = {https://doi.org/10.1145/1386585.1386589},
doi = {10.1145/1386585.1386589},
abstract = {I'm Brian Harvey; I'm a Lecturer with Security of Employment in the EECS Department at the University of California at Berkeley. (The strange title means that I'm a full-time teacher, but basically tenured, although I'm not supposed to call it that. There aren't very many of us: 17 on the Berkeley campus.) My main teaching assignment is our first course for CS majors, based on the Abelson and Sussman text from MIT. But I also teach "Social Implications of Computers," a course that was retired along with the professor who first taught it, and that I campaigned unsuccessfully to revive for several years until ABET, our accrediting agency, won the battle for me by complaining about the lack of ethics in our curriculum.},
journal = {SIGCAS Comput. Soc.},
month = {jun},
pages = {24–25},
numpages = {2}
}

@article{10.1145/1243481.1243484,
author = {Bishop, Matt},
title = {Teaching context in information security},
year = {2006},
issue_date = {September 2006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {3},
issn = {1531-4278},
url = {https://doi.org/10.1145/1243481.1243484},
doi = {10.1145/1243481.1243484},
abstract = {This article investigates teaching the application of technical ideas by non-technical means, especially by using puzzles to engage students. After discussing the need to teach students to evaluate contexts in which decisions about computer security must be made, we suggest questions and scenarios drawn from political science, history, as well as other humanities, to force students to apply or derive principles of computer security in unusual and unexpected situations. Our experience shows that students find the process enjoyable, stimulating, and effective.},
journal = {J. Educ. Resour. Comput.},
month = {sep},
pages = {3–es},
numpages = {12},
keywords = {Environment, computer security, instruction, judgment}
}

@inproceedings{10.5555/1138235.1138265,
author = {Klemmer, Scott R. and Verplank, Bill and Ju, Wendy},
title = {Teaching embodied interaction design practice},
year = {2005},
isbn = {159593250X},
publisher = {AIGA: American Institute of Graphic Arts},
address = {New York, NY, USA},
abstract = {Increasingly, user experiences are addressing our interactions in the world---the physical, the social, and the situated. This sketch presents our experiences introducing embodied interaction themes to a project-based Interaction Design studio course. We present and discuss examples of student-created designs, illustrating the relationship between these design methods, domains, and artifacts created. These in-the-world domains and methods appealed to budding interaction designers because it encouraged them to transcend the computer screen and design for the world at large. However, the challenge of effectively evaluating in-the-world interactions inhibited iteration. Balancing observation, craft, and evaluation was critical to project success, and we are exploring how to help students navigate these process tradeoffs.},
booktitle = {Proceedings of the 2005 Conference on Designing for User EXperience},
pages = {26–es},
keywords = {education, embodied interaction, interaction design, studio, tangible UI, teaching, urban computing},
location = {<conf-loc>, <city>San Francisco</city>, <state>California</state>, <country>USA</country>, </conf-loc>},
series = {DUX '05}
}

@article{10.5555/772488.772513,
author = {Carr, Steve and Mayo, Jean and Shene, Ching-Kuang},
title = {Teaching multithreaded programming made easy},
year = {2001},
issue_date = {October 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {1},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {162–163},
numpages = {2}
}

@inproceedings{10.1145/364447.364621,
author = {Brown, Judy and Lu, Jiayun},
title = {Designing better online teaching material},
year = {2001},
isbn = {1581133294},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/364447.364621},
doi = {10.1145/364447.364621},
abstract = {The creation of excellent online teaching material is challenging because it requires that designers are able to apply learning theories and usability principles. In this paper we describe a web-based tutorial we developed to teach database students about SQL-like operators that can be used to access data in data warehouses (very large collections of data used by analysts). This paper describes the processes and methods used to develop the tutorial and the techniques we used to test prototypes of our tutorial. We show how ideas from user-centered design and learning theory can be usefully combined to create a new process for developing online teaching material that meets learning and usability aims.},
booktitle = {Proceedings of the Thirty-Second SIGCSE Technical Symposium on Computer Science Education},
pages = {352–356},
numpages = {5},
location = {Charlotte, North Carolina, USA},
series = {SIGCSE '01}
}

@article{10.1145/337885.337896,
author = {Rodger, Susan H.},
title = {Teaching automata theory with JFLAP},
year = {1999},
issue_date = {Dec. 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {4},
issn = {0163-5700},
url = {https://doi.org/10.1145/337885.337896},
doi = {10.1145/337885.337896},
journal = {SIGACT News},
month = {dec},
pages = {53–56},
numpages = {4}
}

@inproceedings{10.1145/299649.299763,
author = {Zhou, Yan and Zhao, Yuan and Lowther, John L. and Shene, Ching-Kuang},
title = {Teaching surface design made easy},
year = {1999},
isbn = {1581130856},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299649.299763},
doi = {10.1145/299649.299763},
booktitle = {The Proceedings of the Thirtieth SIGCSE Technical Symposium on Computer Science Education},
pages = {222–226},
numpages = {5},
location = {New Orleans, Louisiana, USA},
series = {SIGCSE '99}
}

@inproceedings{10.1145/259963.260484,
author = {Quinn, Clark N. and Lowgren, Jonas and Gasen, Jean and Gorny, Peter},
title = {Designing the teaching of HCI},
year = {1994},
isbn = {0897916514},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/259963.260484},
doi = {10.1145/259963.260484},
booktitle = {Conference Companion on Human Factors in Computing Systems},
pages = {466},
location = {Boston, Massachusetts, USA},
series = {CHI '94}
}

@inproceedings{10.1145/325612.325628,
author = {Vasilescu, Eugen},
title = {Teaching Ada for business students},
year = {1985},
isbn = {9781450373180},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/325612.325628},
doi = {10.1145/325612.325628},
booktitle = {Proceedings of the Second Annual Washington Ada Symposium on Ada: Ada in the Mainstream: Applications and Education},
pages = {95–104},
numpages = {10},
location = {Washington, D. C., USA},
series = {WADAS '85}
}

@inproceedings{10.1145/800155.805021,
author = {Ellis, Robert A. and Wann, Donald F.},
title = {Teaching computer design using macromodules},
year = {1972},
isbn = {9781450374613},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800155.805021},
doi = {10.1145/800155.805021},
abstract = {This paper describes the teaching of computer design using a new and quite unusual hardware aid, macromodules. Of all the new areas emerging in Computer Science the teaching of computer structures, from an engineering viewpoint, has continually challenged the professional educator. This has in a sense presented a dilemma to him: for digital computer system design requires a broad look at a variety of configurations, but also seems to require a comprehensive examination of individual circuit details in order to remain in a practical atmosphere. As is well known, such detailed investigation of many systems is virtually impossible in the time allotted in most cirricula.Introduction of the macromodular concept, however, has permitted individual students, in one or two semesters, to achieve realizabledesigns of such devices as I/O channels, microprogrammed machines, complete small digital computers, floating point arithmetic systems and list processing hardware.},
booktitle = {Proceedings of the Second SIGCSE Technical Symposium on Education in Computer Science},
pages = {160–162},
numpages = {3},
series = {SIGCSE '72}
}

@inproceedings{10.1145/3328778.3372539,
author = {Kharitonova, Yekaterina and Rigas, Marc},
title = {Teaching Interdisciplinary Courses with Data},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372539},
doi = {10.1145/3328778.3372539},
abstract = {Teaching interdisciplinary courses is an exciting way to build collaborations between different departments and to make students aware of the potential impact of their work. Students in these courses can develop skills in synthesis and complex problem solving by learning to draw parallels between different fields of study and application areas. The goal of this BoF is to bring together a community of educators who are teaching interdisciplinary and/or data science courses with the goal of expanding a support network of data science faculty and developing educational standards for undergraduate data science curricula. We would like to leverage the SIGCSE community to bring together people from different disciplines, institutions, and organizations. The session will include a chance for participants to discuss their experience with and challenges with interdisciplinary course teaching. The second half of the hour will be spent trying to identify common themes to be addressed in follow up discussions and meetings. These materials will be posted on the Data Science Pedagogy repository: https://github.com/data-science-pedagogy},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1408},
numpages = {1},
keywords = {critical-thinking, data-science, statistics},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3328778.3372534,
author = {Jump, Maria and Schedlbauer, Martin},
title = {Effective Practices for Online Teaching},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372534},
doi = {10.1145/3328778.3372534},
abstract = {Have you been asked to teach online and don't know how to get started? Have you delivered your course online to mixed reviews? Have you been teaching online for years? As more and more courses are begin offered online in an effort to deliver a quality education to a larger, more diverse group of students, one things is clear -- many of the pedagogical practices that we have come to rely on in our on ground courses do not translate to an online course. How do the on best practices in online education adapt to CS? This BOF will provide a platform for discussion of what it means to teach an instructor-led, asynchronous online course in CS. We will discuss methodologies used by online faculty that were particularly successful in helping students learn. Topics may include designing courses for distance learning, using media and technology tools effectively, engaging the online learner, building community among students, motivating student persistence and success, and/or building an online presence.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1402},
numpages = {1},
keywords = {best-practices, distance-learning, online, pedagogy},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3328778.3366940,
author = {Malan, David J. and Yu, Brian and Lloyd, Doug},
title = {Teaching Academic Honesty in CS50},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366940},
doi = {10.1145/3328778.3366940},
abstract = {We aspire to teach academic honesty in CS50 at Harvard University not only by addressing academic dishonesty when it occurs but by addressing it before it does. By way of communication, course- and campus-wide awareness of policy, just-in-time prompts, interventional conversations, and problem sets have we tried to preempt submission of plagiarized work. But few interventions have had significant or lasting effects on the number of instances thereof. Most impactful has been the addition of one sentence to the course's syllabus, a "regret clause" that encourages students to come forward within 72 hours of some dishonest act on their part, before the course itself is even aware. While we might zero the work in question in such cases, we commit to not escalating the matter further to the university's honor council, where the outcome might instead be admonishment, probation, or even required withdrawal from the university itself. We instead advise students on how best to move forward and connect them as needed with support structures on campus for academics and mental health. Since 2014 have 89 students invoked the clause, between 1% and 3% of the course's student body each year.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {282–288},
numpages = {7},
keywords = {academic dishonesty, academic honesty, code, ethics, honor council, plagiarism, policy},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.5555/3381569.3381596,
author = {Liao, Weidong and Guzide, Osman},
title = {Teaching cloud computing in colleges},
year = {2019},
issue_date = {October 2019},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {35},
number = {3},
issn = {1937-4771},
abstract = {As a well-accepted computing paradigm, cloud computing not only impacts how IT professionals administer and manage computing infrastructure, but also changes the way software applications are developed, tested and deployed. Many industry, academia and government agencies have switched their IT infrastructure to cloud computing. It is therefore highly desirable that graduates from computing degree programs in colleges and universities are equipped with knowledge, concepts and skills of cloud computing.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {203},
numpages = {1}
}

@inproceedings{10.1145/2974927.2974945,
author = {Carney-Morris, Miranda and Murphy, Trevor},
title = {Teaching, Learning, and Classroom Design},
year = {2016},
isbn = {9781450340953},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2974927.2974945},
doi = {10.1145/2974927.2974945},
abstract = {Our schools have a variety of classroom environments from the large lecture halls, to teaching labs with a computer for every student, to rooms with movable flat tables set in a circle. Many of our classrooms are equipped with data projection and podiums. Faculty often have favorite classrooms and try to book those rooms for their classes every year. Classrooms might be assigned by class size, but there are other factors about classrooms that either match or clash with teaching styles of our faculty. In this paper we intend to explore how the classroom environment affects teaching and learning, and how classrooms can be designed to facilitate engagement and active learning at Williams College and Lewis and Clark College. We will also discuss the challenges in pursuing the creation of flexible learning spaces.},
booktitle = {Proceedings of the 2016 ACM SIGUCCS Annual Conference},
pages = {15–18},
numpages = {4},
keywords = {classroom design, education, learning spaces},
location = {Denver, Colorado, USA},
series = {SIGUCCS '16}
}

@inproceedings{10.1145/2808580.2808659,
author = {Fidalgo, Andr\'{e} Vaz and Barataud, Denis and Andrieu, Guillaume and De Craemer, Renaat and Cristea, Mihai and Benachenhou, Abdelhalim and Ankrim, Mohammed and Bouchlaghem, Karim and Ferreira, Paulo and Gericota, Manuel},
title = {EOLES project...teaching unit experiences},
year = {2015},
isbn = {9781450334426},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2808580.2808659},
doi = {10.1145/2808580.2808659},
abstract = {EOLES is an international cooperative project, with an emphasis not only on one of the facets of engineering education, but trying to involve all of them. This paper describes the course's accreditation, the structure the E-learning framework, the virtual and remote laboratories integration in the course and focuses on the experiences with one of the Teaching Units. Some data related to the first edition of the course is provided, as well as an initial analysis of the learning results and experiences. The accreditation and validation efforts are also introduced and discussed. The EOLES course is the result of an international effort involving experts from different engineering and education areas, in order to provide a better global Engineering Education.},
booktitle = {Proceedings of the 3rd International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {517–522},
numpages = {6},
keywords = {accreditation, case study, online courses, remote laboratories},
location = {Porto, Portugal},
series = {TEEM '15}
}

@inproceedings{10.1145/2769458.2769488,
author = {Howell, Michael J. and Merlo, Brian and Fishwick, Paul A.},
title = {Layered Simluations for Teaching Methodologies},
year = {2015},
isbn = {9781450335836},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2769458.2769488},
doi = {10.1145/2769458.2769488},
abstract = {Modeling &amp; Simulation are invaluable at helping us understand and predict systems at every scale. We strive to enrich learning by implementing a layered framework which is engaging and straightforward to the student. Additionally, we can communicate system dynamics by integrating well-known concepts to function as stepping stones towards complex subjects. This is primarily achieved by leveraging the data-flow language, which can accommodate a diverse range of students. We show how to develop a framework for implementing our teaching methodology using Max/MSP, and an instance of the implementation using auditory and visual presentations.},
booktitle = {Proceedings of the 3rd ACM SIGSIM Conference on Principles of Advanced Discrete Simulation},
pages = {43–44},
numpages = {2},
keywords = {interdisciplinary approaches},
location = {London, United Kingdom},
series = {SIGSIM PADS '15}
}

@article{10.1145/2684721.2684732,
author = {Touretzky, David S.},
title = {Teaching Kodu with physical manipulatives},
year = {2014},
issue_date = {December 2014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {4},
issn = {2153-2184},
url = {https://doi.org/10.1145/2684721.2684732},
doi = {10.1145/2684721.2684732},
journal = {ACM Inroads},
month = {dec},
pages = {44–51},
numpages = {8},
keywords = {Kodu, manipulatives, visual programming}
}

@article{10.5555/2382887.2382893,
author = {Bryce, Daniel},
title = {Scaffolding in teaching knowledge representation},
year = {2012},
issue_date = {December 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {2},
issn = {1937-4771},
abstract = {Knowledge representation is one of the most difficult tasks for students in introductory Artificial Intelligence courses. We study the impact of varying levels and types of scaffolding in teaching students how to model automated planning problems in a first-order logic-like language called the planning domain definition language (PDDL). We select two well-known problems: the sliding tile puzzle and the towers of Hanoi for our evaluation. The results suggest that scaffolding does increase proficiency, and that the type of scaffolding gives rise to different obstacles in learning. We discuss these learning obstacles and implications that they have upon the modeling process.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {25–31},
numpages = {7}
}

@inproceedings{10.5555/2337223.2337379,
author = {Cowling, Tony},
title = {Stages in teaching software testing},
year = {2012},
isbn = {9781467310673},
publisher = {IEEE Press},
abstract = {This paper describes how a staged approach to the development of students’ abilities to engineer software systems applies to the specific issue of teaching software testing. It evaluates the courses relating to software testing in the Software Engineering volume of Computing Curriculum 2001 against a theoretical model that has been developed from a well-established programme in software engineering, from the perspectives of how well the courses support the progressive development of both students’ knowledge of software testing and their ability to test software systems. It is shown that this progressive development is not well supported, and that to improve this some software testing material should be taught earlier than recommended.},
booktitle = {Proceedings of the 34th International Conference on Software Engineering},
pages = {1185–1194},
numpages = {10},
location = {Zurich, Switzerland},
series = {ICSE '12}
}

@inproceedings{10.1145/1639622.1639624,
author = {Gopalakrishnan, Ganesh and Yang, Yu and Vakkalanka, Sarvani and Vo, Anh and Aananthakrishnan, Sriram and Szubzda, Grzegorz and Sawaya, Geof and Williams, Jason and Sharma, Subodh and DeLisi, Michael and Atzeni, Simone},
title = {Some resources for teaching concurrency},
year = {2009},
isbn = {9781605586557},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1639622.1639624},
doi = {10.1145/1639622.1639624},
abstract = {With the increasing emphasis on exploiting concurrency efficiently and correctly, the lack of suitable pedagogical material for teaching concurrency is a growing problem. In this paper, we summarize a recently concluded class as well as some independent projects in the area of concurrency and multi-core computing that offer some insights to address this problem. We examine background papers, the teaching of low level concurrency, and the teaching of threading and message passing. The use of dynamic formal verification tools in a class setting is discussed in some detail. We conclude with a summary of pedagogical material being assembled, including exercises from a popular textbook on MPI solved using our dynamic verifier ISP. Our observation is that the teaching of concurrency is greatly facilitated by the use of dynamic push-button formal verification tools that can handle non-trivial concurrent programs. Given the growing number of publications on how to teach concurrency as well as employ new programming approaches, our work addresses the somewhat neglected topic of using modern dynamic formal verification methods within the context of widely used concurrency approaches and libraries.},
booktitle = {Proceedings of the 7th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging},
articleno = {2},
numpages = {6},
keywords = {MPI, computer science education, concurrency, dynamic verification, education, memory models, multi-core, pthreads},
location = {Chicago, Illinois},
series = {PADTAD '09}
}

@inproceedings{10.1145/1352135.1352141,
author = {Armoni, Michal and Lewenstein, Noa and Ben-Ari, Mordechai},
title = {Teaching students to think nondeterministically},
year = {2008},
isbn = {9781595937995},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1352135.1352141},
doi = {10.1145/1352135.1352141},
abstract = {Nondeterminism is a fundamental concept of computer science. However, since it is a very abstract concept, teaching and learning nondeterminism is difficult. In this paper we focus on one aspect of the teaching and learning processes of nondeterminism: the extent to which undergraduate students of computer science perceive that nondeterministic automata exhibit nondeterministic behavior, that is, they are unpredictable and inconsistent. First we show that students tend to think of nondeterministic automata as consistent machines; then we show that an explicit intervention can significantly affect students' mental models of nondeterministic automata in the direction of improving their perception of nondeterministic behavior.},
booktitle = {Proceedings of the 39th SIGCSE Technical Symposium on Computer Science Education},
pages = {4–8},
numpages = {5},
keywords = {nondeterminism, nondeterministic automata},
location = {Portland, OR, USA},
series = {SIGCSE '08}
}

@article{10.5555/1127351.1127382,
author = {McMillan, Mike},
title = {Teaching Visual Basic.NET objects-first},
year = {2006},
issue_date = {May 2006},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {21},
number = {5},
issn = {1937-4771},
abstract = {Object-orientation is the prevalent paradigm in programming. Despite this, programming students are usually taught procedural programming first in their first course. Even languages that are object-oriented, such as Java, are taught by first introducing many procedural constructs of the language before introducing concepts such as classes, inheritance, etc. It has been shown (at least anecdotally) that students who first learn procedural programming have a harder time learning object-oriented programming. It has also been shown (again, anecdotally) that it is easier for students to learn procedural programming after they've learned object-oriented programming than the other way around.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {180},
numpages = {1}
}

@inproceedings{10.5555/1082424.1082430,
author = {Warren, Ian},
title = {Teaching patterns and software design},
year = {2005},
isbn = {1920682244},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
abstract = {In this paper we describe our experiences with reengineering an undergraduate course in software design. The course's learning outcomes require that students can model, design and implement software. These are inherently practical skills and rely on functioning knowledge. To facilitate a learning environment in which students can acquire the necessary deep level of understanding, we have designed the course by applying the educational theory of constructive alignment and a number of proven techniques for teaching, learning, and assessment. Fundamentally, we have embraced the active learning paradigm that recognises that student activity is critical to the learning process. In this paper, we describe several active learning techniques that we have used including role play, problem solving and peer learning. We also describe two novel assessment techniques we have developed, holistic assessment and formative examination. In addition we describe how students work with JUnit, a popular unit testing tool, not as users but as developers by applying design patterns to extend it with new functionality. Finally, we report on student assessment results and relay student feedback.},
booktitle = {Proceedings of the 7th Australasian Conference on Computing Education - Volume 42},
pages = {39–49},
numpages = {11},
keywords = {JUnit, UML, active and peer learning, constructive alignment, design patterns, formative and holistic assessment},
location = {<conf-loc>, <city>Newcastle</city>, <state>New South Wales</state>, <country>Australia</country>, </conf-loc>},
series = {ACE '05}
}

@inproceedings{10.1145/1186107.1186115,
author = {Matossian, Michele},
title = {Teaching art with 3D software},
year = {2004},
isbn = {1581138962},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1186107.1186115},
doi = {10.1145/1186107.1186115},
abstract = {Now that the field of 3D computer graphics has come of age, 3D artists have sophisticated tools at their fingertips for designing complex games, stunning effects, beautiful scenes, or to reveal the secrets of nature. At the same time, 3D software programs are an excellent vehicle for students to discover both science and art.},
booktitle = {ACM SIGGRAPH 2004 Educators Program},
pages = {7},
location = {Los Angeles, California},
series = {SIGGRAPH '04}
}

@inproceedings{10.1145/973620.973717,
author = {Caballero-Gil, P. and Bruno-Casta\~{n}eda, C. and Hern\'{a}ndez-Goya, C.},
title = {The teaching of cryptologic mathematics},
year = {2003},
isbn = {9549641333},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/973620.973717},
doi = {10.1145/973620.973717},
abstract = {This work addresses the topic of Mathematics Education from a current and stimulating point of view intimately related to Computer Science. Different mathematical objects such as functions, matrices, modular arithmetic, combinatory, equations and statistics, constitute the theoretical and practical basis of Cryptology, so their teaching should be previous to cryptologic courses. On the other hand, such a fact might be used to introduce those mathematical concepts in a captivating way through basic cryptographic and cryptanalytic activities.},
booktitle = {Proceedings of the 4th International Conference Conference on Computer Systems and Technologies: E-Learning},
pages = {580–584},
numpages = {5},
keywords = {cryptology, education, mathematics},
location = {Rousse, Bulgaria},
series = {CompSysTech '03}
}

@article{10.1145/585597.585612,
author = {Palsberg, Jens and Baxter, Scott J.},
title = {Teaching reviewing to graduate students},
year = {2002},
issue_date = {December 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {12},
issn = {0001-0782},
url = {https://doi.org/10.1145/585597.585612},
doi = {10.1145/585597.585612},
abstract = {Incorporating the principles and practices of formal review into a Ph.D. education, smoothly and inexpensively, as part of the existing coursework.},
journal = {Commun. ACM},
month = {dec},
pages = {22–24},
numpages = {3}
}

@article{10.5555/775009.775037,
author = {McGuffee, James W.},
title = {Tools for teaching computer ethics},
year = {2002},
issue_date = {April 2002},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {5},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {161},
numpages = {1}
}

@article{10.5555/775339.775376,
author = {Warren, Peter},
title = {Teaching programming using scripting languages},
year = {2001},
issue_date = {December 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {2},
issn = {1937-4771},
abstract = {This paper looks at the potential for using scripting languages to teach programming. It demonstrates that the so-called "system programming languages" such as Java and C++ are not suitable to teaching novices. Conversely the modern "scripting languages" are sophisticated and powerful environments in which students can learn the basics of programming without the unnecessary complications entailed in the alternative approach.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {205–216},
numpages = {12}
}

@inproceedings{10.1145/377435.377712,
author = {Koppelman, Herman},
title = {Teaching abstraction explicitly (poster session)},
year = {2001},
isbn = {1581133308},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/377435.377712},
doi = {10.1145/377435.377712},
abstract = {When one has to learn programming one has to learn a programming language, but also the concept of abstraction. Learning abstraction is not a logical consequence of learning a programming language. Moreover, it can be doubted whether novice programmers naturally tend to use abstraction. So, our approach is to teach abstraction explicitly to novices. We show that even for simple problems it makes sense to look for levels of abstraction in the problem definition and subsequently to design programs that reflect explicitly those levels of abstraction.We will discuss the way it works on the basis of a simple example.},
booktitle = {Proceedings of the 6th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {191},
location = {Canterbury, United Kingdom},
series = {ITiCSE '01}
}

@article{10.5555/378613.378625,
author = {Goodrich, Michael},
title = {Teaching Internet algorithmics (invited talk)},
year = {2001},
issue_date = {2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {16},
number = {4},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {xvii}
}

@inproceedings{10.1145/354908.354935,
author = {Hyde, Paul and Hall, John},
title = {Different strokes for teaching folks},
year = {2000},
isbn = {1581132298},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/354908.354935},
doi = {10.1145/354908.354935},
booktitle = {Proceedings of the 28th Annual ACM SIGUCCS Conference on User Services: Building the Future},
pages = {122–124},
numpages = {3},
keywords = {classroom use, faculty, instructional support, teaching},
location = {Richmond, Virginia, USA},
series = {SIGUCCS '00}
}

@inproceedings{10.1145/333334.333401,
author = {Roldan, Malu},
title = {Teaching electronic commerce (panel session)},
year = {2000},
isbn = {158113228X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/333334.333401},
doi = {10.1145/333334.333401},
abstract = {This panel will discuss various approaches and issues pertaining to the development and implementation of courses in Electronic Commerce — at the undergraduate, graduate, and executive levels. There has never been a better time to be teaching e-commerce. Web applications have evolved to a point where Gilder's “hollowing out the computer” seems almost achievable — as dot-com companies eager to build market share provide essential tools for the price of an eyeball (multiplied by the size of your outlook address book). The same toolbox that is creating an exciting and accessible platform for building e-businesses can be used to build the e-commerce classes that introduce students to such endeavors. This situation makes it possible to augment local school platforms to design rich, portable e-commerce classes that teach students the fundamentals of e-business as well as empower them to stretch the definition of this evolving phenomenon.The panel will explore key issues and options for the design of e-commerce classes, including: the structure of e-commerce classes — types of requirements, amount of hands-on experience, amount of programming required; appropriate content for various types of classes and how to keep it current; textbook options — what's out there, what's coming up, how people have supplemented these texts; platform options — local programs vs. web-based applications, providing students with marketable skills; where to apply technology — in projects, small hands-on exercises, in class management and communications; and managing projects — client relationships, limiting project scope, and team management.},
booktitle = {Proceedings of the 2000 ACM SIGCPR Conference on Computer Personnel Research},
pages = {196},
location = {Chicago, Illinois, USA},
series = {SIGCPR '00}
}

@article{10.1145/340396.340439,
author = {Wong, SY},
title = {Ada as a teaching language},
year = {1999},
issue_date = {Dec. 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {XIX},
number = {4},
issn = {1094-3641},
url = {https://doi.org/10.1145/340396.340439},
doi = {10.1145/340396.340439},
abstract = {There is a need for a single, simple language suitable both for teaching the important fundamentals of programming and for practical applications long after graduation.},
journal = {Ada Lett.},
month = {dec},
pages = {22–23},
numpages = {2}
}

@article{10.1145/571535.571554,
author = {Knox, Deborah L.},
title = {The computer science teaching center},
year = {1999},
issue_date = {June 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/571535.571554},
doi = {10.1145/571535.571554},
journal = {SIGCSE Bull.},
month = {jun},
pages = {22–23},
numpages = {2}
}

@inproceedings{10.1145/280953.281012,
author = {Marchese, Francis T.},
title = {Teaching computer graphics with spreadsheets},
year = {1998},
isbn = {1581130465},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/280953.281012},
doi = {10.1145/280953.281012},
abstract = {Spreadsheets are a great way to introduce computer graphics
concepts to computer science students. Through direct manipulation
of numbers, students develop a more concrete understanding of the
data they compute from the formulas they derive and use. This paper
presents some experiences using spreadsheets for in-class
demonstrations and homework assignments.},
booktitle = {ACM SIGGRAPH 98 Conference Abstracts and Applications},
pages = {84–87},
numpages = {4},
location = {Orlando, Florida, USA},
series = {SIGGRAPH '98}
}

@article{10.1145/234993.234995,
author = {Gladfelter, Suzanne},
title = {Collaboratively teaching a multidisciplinary course},
year = {1996},
issue_date = {July 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {3},
issn = {1078-2192},
url = {https://doi.org/10.1145/234993.234995},
doi = {10.1145/234993.234995},
abstract = {In spring 1996 two colleagues and I collaboratively taught an experimental multidisciplinary introductory-level honors speech communications course. The semester-long 4.5 credit course covered public speaking, presentation software, and philosophical soundness. The course demonstrated to students and faculty how technology can serve the humanities.},
journal = {3C ON-LINE},
month = {jul},
pages = {7–8},
numpages = {2}
}

@inproceedings{10.1145/130385.130421,
author = {Jackson, Jeffrey and Tomkins, Andrew},
title = {A computational model of teaching},
year = {1992},
isbn = {089791497X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/130385.130421},
doi = {10.1145/130385.130421},
abstract = {Goldman and Kearns [GK91] recently introduced a notion of the teaching dimension of a concept class. The teaching dimension is intended to capture the combinatorial difficulty of teaching a concept class. We present a computational analog which allows us to make statements about bounded-complexity teachers and learners, and we extend the model by incorporating trusted information. Under this extended model, we modify algorithms for learning several expressive classes in the exact identification model of Angluin [Ang88]. We study the relationships between variants of these models, and also touch on a relationship with distribution-free learning.},
booktitle = {Proceedings of the Fifth Annual Workshop on Computational Learning Theory},
pages = {319–326},
numpages = {8},
location = {Pittsburgh, Pennsylvania, USA},
series = {COLT '92}
}

@inproceedings{10.1145/800038.801019,
author = {Aiken, Robert M.},
title = {Reflections on teaching computer ethics},
year = {1983},
isbn = {0897910915},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800038.801019},
doi = {10.1145/800038.801019},
abstract = {(This paper has been accepted for publication in the Proceedings, but the photo-ready form was not delivered in time. Copies of the paper should be available upon request at the presentation.)},
booktitle = {Proceedings of the Fourteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {85},
location = {Orlando, Florida, USA},
series = {SIGCSE '83}
}

@inproceedings{10.1145/990555.990568,
author = {McCurdy, Robert},
title = {Teaching toward error free programming},
year = {1978},
isbn = {9781450374767},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/990555.990568},
doi = {10.1145/990555.990568},
abstract = {A newly developed teaching technique designed to help students produce error free code using a block-structured flowcharting method, a block-structured pseudocode, and an implementation language is presented [1]. The posters illustrate how block structure, once established, is maintained in the pseudocode and into an implementation language. The flowcharting method was developed at Draper Labs in connection with the Apollo Program [2].},
booktitle = {Papers of the SIGCSE/CSA Technical Symposium on Computer Science Education},
pages = {33},
numpages = {1},
location = {Detroit, Michigan},
series = {SIGCSE '78}
}

@inproceedings{10.1145/1499799.1499827,
author = {Scala, Joseph},
title = {Teaching art through computer graphics},
year = {1976},
isbn = {9781450379175},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1499799.1499827},
doi = {10.1145/1499799.1499827},
abstract = {The computer is becoming an important tool for the production of works of art. Art students are becoming increasingly interested in tapping the potential of the computer in the area of static and animated graphics. This paper deals with my personal experience in teaching art through computer graphics, at Syracuse University, to art majors and students from other academic disciplines.},
booktitle = {Proceedings of the June 7-10, 1976, National Computer Conference and Exposition},
pages = {185–189},
numpages = {5},
location = {New York, New York},
series = {AFIPS '76}
}

@inproceedings{10.1145/3561833.3568497,
author = {Simmhan, Yogesh},
title = {Pedagogic Practices for Teaching Distributed Systems Courses},
year = {2022},
isbn = {9781450397759},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3561833.3568497},
doi = {10.1145/3561833.3568497},
abstract = {Parallel and Distributed systems such as cluster computing, cloud computing and Internet of Things (IoT) have become pervasive technologies that are essential not just to computer science but also to design and deploy applications from interdisciplinary and data science domains. Under-graduate and post-graduate curriculum needs to incorporate these as essential or elective courses to ensure that students are well trained for their careers. This requires imparting systems concepts, teaching programming models and conducting hands-on labs to translate theory to practice. This talk will discuss experiences and best practices in teaching systems courses and designing systems labs, and briefly review a model curriculum for distributed and cloud systems micro-specialization.},
booktitle = {Proceedings of the 15th Annual ACM India Compute Conference},
pages = {6},
numpages = {1},
location = {<conf-loc>, <city>Jaipur</city>, <country>India</country>, </conf-loc>},
series = {COMPUTE '22}
}

@inproceedings{10.1145/3448139.3448152,
author = {Schlotterbeck, Danner and Uribe, Pablo and Araya, Roberto and Jimenez, Abelino and Caballero, Daniela},
title = {What Classroom Audio Tells About Teaching: A Cost-effective Approach for Detection of Teaching Practices Using Spectral Audio Features},
year = {2021},
isbn = {9781450389358},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3448139.3448152},
doi = {10.1145/3448139.3448152},
abstract = {Acoustic features and machine learning models have been recently proposed as promising tools to analyze lessons. Furthermore, acoustic patterns, both in the time and spectral domain, have been found to be related to teacher pedagogical practices. Nonetheless, most of previous work relies on expensive or third party equipment, limiting its scalability, and additionally, it is mainly used for diarization. Instead, in this work we present a cost-effective approach to identify teachers’ practices according to three categories (Presenting, Administration, and Guiding) which are compiled from the Classroom Observation Protocol for Undergraduate STEM. Particularly, we record teachers’ lessons using low-cost microphones connected to their smartphones. We then compute the mean and standard deviation of the amplitude, Mel spectrogram, and Mel Frequency Cepstral coefficients of the recordings to train supervised models for the task of predicting three categories compiled from the Classroom Observation Protocol for Undergraduate STEM. We found that spectral features perform better at the task of predicting teachers’ activities along the lessons and that our models can predict the presence of the two most common teaching practices with over 80% of accuracy and good discriminative power. Finally, with these models, we found that using audio obtained from the teachers’ smartphones it is also possible to automatically discriminate between sessions where students are using or not an online platform. This approach is important for teachers and other stakeholders who could use an automatic and cost-effective tool for analyzing teaching practices.},
booktitle = {LAK21: 11th International Learning Analytics and Knowledge Conference},
pages = {132–140},
numpages = {9},
keywords = {COPUS, Classroom Sound, Spectral Audio Features, Teacher Activity Detection},
location = {Irvine, CA, USA},
series = {LAK21}
}

@article{10.1145/274375.274376,
author = {Allan, V. H. and Kolesar, M. V.},
title = {Teaching computer science: a problem solving approach that works},
year = {1997},
issue_date = {Jan./April 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {25},
number = {1–2},
issn = {0163-5735},
url = {https://doi.org/10.1145/274375.274376},
doi = {10.1145/274375.274376},
abstract = {The typical programming course is not an appropriate first course for many students. Results indicate that our skill-based approach to computer science is a better preparation for the traditional first programming experience than even prior programming. (This work was partially supported by the National Science Foundation under grant DUE-9254186.},
journal = {SIGCUE Outlook},
month = {jan},
pages = {2–10},
numpages = {9},
keywords = {computer science, pre-programming, problem solving, teaching}
}

@inproceedings{10.1145/169070.169495,
author = {Decker, Rick and Hirshfield, Stuart},
title = {Top-down teaching: object-oriented programming in CS 1},
year = {1993},
isbn = {0897915658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/169070.169495},
doi = {10.1145/169070.169495},
booktitle = {Proceedings of the Twenty-Fourth SIGCSE Technical Symposium on Computer Science Education},
pages = {270–273},
numpages = {4},
location = {Indianapolis, Indiana, USA},
series = {SIGCSE '93}
}

@inproceedings{10.1145/3626686.3626687,
author = {Jin, Yan and Liu, Yaojie and Jia, Yan and Jiang, Chang},
title = {A Blended Teaching Procedure of Spatial Statistics Course based on the Knowledge Map Analysis of Teaching Methods of Science},
year = {2023},
isbn = {9798400708527},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626686.3626687},
doi = {10.1145/3626686.3626687},
abstract = {The era of big data has brought increasing attention to spatial statistics due to the vast amounts of spatially-referenced data from sources such as remote sensing, GPS tracking, and social media. However, traditional spatial statistics courses are often teacher-centered, leading to students struggling with the concepts and lacking practical application skills. This article presents a knowledge map analysis of science education teaching methods and proposes a novel teaching procedure for the spatial statistics course. Bibliometrics and scientific mapping techniques were employed to analyze citation data from the Web of Science (WOS) and China National Knowledge Internet (CNKI) from 2000 to 2022. The study identified the research status and development trends of science teaching methods and proposed a blended teaching approach based on an intelligent problem library, combining multiple methods and online teaching materials, to enhance students' learning outcomes. This research offers valuable insights into effective teaching methods, emphasizing the need to adapt strategies to specific course requirements. It also highlights the usefulness of R and VOSviewer software in conducting knowledge map analyses of teaching methods in science education. Although further testing is necessary to determine the effectiveness of the proposed reform, this study has significant implications for science education.},
booktitle = {Proceedings of the 7th International Conference on Digital Technology in Education},
pages = {109–117},
numpages = {9},
keywords = {Blended teaching, biliometric analysis, intelligent problem library, spatial statistics},
location = {<conf-loc>, <city>Hangzhou</city>, <country>China</country>, </conf-loc>},
series = {ICDTE '23}
}

@article{10.1145/2874239.2874305,
author = {Jones, Simon},
title = {Teaching smart phone ethics: an interdisciplinary approach},
year = {2016},
issue_date = {September 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {3},
issn = {0095-2737},
url = {https://doi.org/10.1145/2874239.2874305},
doi = {10.1145/2874239.2874305},
abstract = {The phenomenal rise of the smartphone, and the rapid diffusion of mobile computing generally, are amongst the most notable developments of recent times in information and communication technologies (ICTs). The smartphone has become a ubiquitous communication tool, evolving into a digital Swiss Army knife, with an ever growing number of functions, from personal communications manager, navigation system, gaming terminal and camera, to payment device, internet access point and all-round digital lifestyle hub. For these reasons, the smartphone represents a prime topic for teaching and thinking about ICT ethics. This paper proposes an inter-disciplinary approach to this task.},
journal = {SIGCAS Comput. Soc.},
month = {jan},
pages = {445–452},
numpages = {8},
keywords = {ICT ethics, framework, inter-disciplinary, pedagogy, smartphone}
}

@inproceedings{10.1145/2047594.2047653,
author = {Whittinghill, David Matthew and Lutes, Kyle D.},
title = {Teaching enterprise application development: strategies and challenges},
year = {2011},
isbn = {9781450310178},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2047594.2047653},
doi = {10.1145/2047594.2047653},
abstract = {Enterprise application development requires a skill set that is broader than that provided by traditional programming courses. Enterprise applications are distributed, networked, multi-user, and, in most instances, fairly complex. As such, competent software developers must possess more than the basic understanding of a programming language. Developers of enterprise applications must also possess an understanding of networking fundamentals, network and application security, relational database management systems, concurrency, and application deployment and scaling. They should additionally be knowledgeable with the mechanics of at least one specific application platform, for example J2EE or Microsoft's .NET. This collection of competencies tend not to be taught in the software development curriculum as a collective whole, rather they are touched upon in many different courses in the curriculum. Though this traditional approach is more or less successful in creating adaptable skills for students who are then positioned to learn application domain-specific technologies and concepts, this approach is likely to fail in providing in-depth knowledge of the principles, patterns, and techniques used for developing these types of large enterprise applications. The acquisition of this knowledge must therefore be obtained in either an on-the-job or self-taught fashion. Our department has been addressing these issues for over ten years via a software development course that uses a variety of technologies including COM/DCOM, .NET, and J2EE. Our expressed goal is to educate our students with the knowledge required to design and implement enterprise applications.In this paper, we present the goals and history of our course, the framework we have used for teaching the subject, as well as the challenges that can arise in administering the associated coursework. The observations are based on the two authors' collective experience teaching enterprise application development in a university setting.},
booktitle = {Proceedings of the 2011 Conference on Information Technology Education},
pages = {221–226},
numpages = {6},
keywords = {education, enterprise application development, teaching},
location = {West Point, New York, USA},
series = {SIGITE '11}
}

@article{10.1145/571535.571580,
author = {McCauley, Ren\'{e}e and Jackson, Ursula},
title = {Teaching software engineering early: experiences and results},
year = {1999},
issue_date = {June 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/571535.571580},
doi = {10.1145/571535.571580},
abstract = {In the fall of 1994, we reorganized the content of our three-course computer science introductory sequence in order to introduce software engineering concepts early and provide a consistent software engineering focus from one course to the next. We also established documentation and design standards that would serve as a framework for teaching the software engineering principles and techniques that we considered appropriate and essential to novice software developers. In an attempt to assess the impact of this new teaching process, we compared the performances in upper-level project-oriented courses of students who had been exposed to the new introductory sequence to those of students who had not.This paper describes the documentation and design standards established in 1994, their evolution over the past four years, and how these standards can be used as a framework for teaching software engineering concepts early in the curriculum. It also reports on what we have learned through tracking our students. We found that, in three upper-level courses, project grades for students exposed to software engineering concepts early averaged as much as half a letter grade higher than those of other students.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {86–91},
numpages = {6}
}

@inproceedings{10.1145/216591.216599,
author = {Levy, Suzanne Pawlan and McCormick, John W.},
title = {Teaching programming for reuse: generics for educators},
year = {1995},
isbn = {0897917057},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/216591.216599},
doi = {10.1145/216591.216599},
booktitle = {Tutorial Proceedings on TRI-Ada '91: Ada's Role in Global Markets: Solutions for a Changing Complex World},
pages = {105–117},
numpages = {13},
location = {Anaheim, California, USA},
series = {TRI-Ada '95}
}

@inproceedings{10.1145/3561833.3568492,
author = {Kumar, Ns},
title = {Teaching Data Structures: My View},
year = {2022},
isbn = {9781450397759},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3561833.3568492},
doi = {10.1145/3561833.3568492},
abstract = {Data structure remains to be a core course in the study for a degree in Computer Science. Is this being taught the right way? More often than not, a data structure is taught as an implementation than an interface. A list is always considered as a linked list. Alternate implementations for the interface of a data structure are rarely discussed. Separation of interface from implementation leading to flexibility in changing the implementation without affecting the client is not highlighted. Any data structure would have number of components. Could we refer to a component without exposing the implementation? Could we have an opaque structure standing for the position? Could we have a way to traverse the data structure if it is semantically allowed? Do all data structure libraries support this concept? If yes, why is that we do not teach this concept in our courses? This talk shall try to address the following features:},
booktitle = {Proceedings of the 15th Annual ACM India Compute Conference},
pages = {1},
numpages = {1},
location = {<conf-loc>, <city>Jaipur</city>, <country>India</country>, </conf-loc>},
series = {COMPUTE '22}
}

@inproceedings{10.5555/3466184.3466559,
author = {Doddavaram, Ravi and Corlu, Canan Gunes},
title = {Teaching risk analytics using R},
year = {2021},
isbn = {9781728194998},
publisher = {IEEE Press},
abstract = {We discuss our experience with using R, which is a free software that is particularly suitable for computer simulation, in a risk analytics course offered to students having different experience levels and technical sophistication. We highlight relevant packages in R that we found useful for the purposes of input modeling and stochastic optimization along with several examples. We also introduce a new package that allows the simulation of decision trees. Student feedback regarding the use of R in comparison to a spreadsheet-based platform has been very positive.},
booktitle = {Proceedings of the Winter Simulation Conference},
pages = {3272–3281},
numpages = {10},
location = {Orlando, Florida},
series = {WSC '20}
}

@inproceedings{10.1145/3328778.3372538,
author = {Van Dusen, Eric},
title = {Jupyter for Teaching Data Science},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372538},
doi = {10.1145/3328778.3372538},
abstract = {There has been a recent evolution of cloud-based tools that allow for easy and powerful ways for students to access the industry standard data science toolkit from within a browser window. Jupyter notebooks were originally developed for sharing of scientific results and reproducible open science. However, when delivered through a cloud-based server, they have huge benefits for teaching, including removing the need to install any software locally or require any specific machine to be used by students. The use of teaching Jupyterhubs to date, both for introductory to Data Science courses, as well as more advanced topics is growing rapidly. We would like to have a conversation about how to use Jupyterhubs and teaching Jupyter notebooks from a variety of instructors and institutions. We are also interested in how to provide these types of resources to additional educational settings who may be more resource constrained.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1399},
numpages = {1},
keywords = {cloud-based-instruction, data-science, jupyter},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/3104986,
author = {Keating, Jennifer and Nourbakhsh, Illah},
title = {Teaching artificial intelligence and humanity},
year = {2018},
issue_date = {February 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {61},
number = {2},
issn = {0001-0782},
url = {https://doi.org/10.1145/3104986},
doi = {10.1145/3104986},
abstract = {Considering rapidly evolving human-machine interactions.},
journal = {Commun. ACM},
month = {jan},
pages = {29–32},
numpages = {4}
}

@inproceedings{10.1145/2462476.2465583,
author = {Bryfczynski, Sam and Pargas, Roy P. and Cooper, Melanie M. and Klymkowsky, Michael and Dean, Brian C.},
title = {Teaching data structures with beSocratic},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2465583},
doi = {10.1145/2462476.2465583},
abstract = {This paper describes a novel intelligent tutoring system called beSocratic, which targets question types that allow students to respond with free-form input but are able to be automatically evaluated and analyzed. Using beSocratic's GraphPad module, students are able to draw data structures using a mouse, touch, or a stylus. Once a student has completed a question, their final answer and a replay of their actions is uploaded to beSocratic's database. This allows teachers to replay student answers and identify common mistakes. In addition, beSocratic contains a set of post-analysis tools that utilize hidden Markov modeling to cluster student submissions with similar sequences of actions. Along with the modeling, beSocratic generates several visualizations to help teachers interpret the results. This can potentially help teachers identify students who are using the same strategies to answer questions. We have begun pilot-testing its use in computer science classrooms to teach student to properly construct splay trees. The splay tree activity teaches students to construct data structures using free-form drawing and the rotations needed for the splay operation. The activity concludes with an extended example where students must construct a splay tree from scratch. At each step, GraphPad evaluates how the students are performing and provides feedback. Students responded positively to the initial pilot study and we believe this warrants further investigation. beSocratic is free to use at beSocratic.clemson.edu.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {105–110},
numpages = {6},
keywords = {data structures, feedback, intelligent tutors, splay trees},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@inproceedings{10.1145/2462476.2462494,
author = {Scharlau, Bruce A.},
title = {Games for teaching software development},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2462494},
doi = {10.1145/2462476.2462494},
abstract = {We have been using games to teach software development for a number of years now with our MSc IT students as a warm-up to the group project over the summer. Games, and game-like processes without accompanying lectures can provide the participants with enough insight into the thinking and rationale of agile, lean, and kanban approaches to software development. This weeklong crash course consists of games and exercises to provide students with a good foundation in software development processes. The agile games, and game-like service design activities along with some Lego® Serious Play® games, illustrate why we use the agile approach. The game environment provides a mixture of icebreaker, team building and software development aspects in a useful week of work that the students enjoy.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {303–308},
numpages = {6},
keywords = {agile, games, lean, lego serious play, service design, software development},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@article{10.1145/2381083.2381092,
author = {Petre, Marian and Bandara, Arosha and Price, Blaine},
title = {Teaching cybersecurity at a distance},
year = {2012},
issue_date = {December 2012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {4},
issn = {2153-2184},
url = {https://doi.org/10.1145/2381083.2381092},
doi = {10.1145/2381083.2381092},
journal = {ACM Inroads},
month = {dec},
pages = {20–21},
numpages = {2}
}

@inproceedings{10.5555/1627306.1627327,
author = {Stone, Matthew},
title = {Support collaboration by teaching fundamentals},
year = {2008},
isbn = {9781932432145},
publisher = {Association for Computational Linguistics},
address = {USA},
abstract = {This paper argues for teaching computer science to linguists through a general course at the introductory graduate level whose goal is to prepare students of all backgrounds for collaborative computational research, especially in the sciences. We describe our work over the past three years in creating a model course in the area, called Computational Thinking. What makes this course distinctive is its combined emphasis on the formulation and solution of computational problems, strategies for interdisciplinary communication, and critical thinking about computational explanations.},
booktitle = {Proceedings of the Third Workshop on Issues in Teaching Computational Linguistics},
pages = {129–136},
numpages = {8},
location = {Columbus, Ohio},
series = {TeachCL '08}
}

@article{10.5555/1352079.1352118,
author = {Hsin, Wen-Jung},
title = {Teaching recursion using recursion graphs},
year = {2008},
issue_date = {April 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {4},
issn = {1937-4771},
abstract = {Teaching recursion to undergraduate students is a challenging task. In this paper, a Recursion Graph is proposed to help students understand the process of recursion. Specifically, it provides a visual aid to illustrate the concept of recursion.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {217–222},
numpages = {6}
}

@inproceedings{10.1145/1140124.1140141,
author = {Plimmer, Beryl and Amor, Robert},
title = {Peer teaching extends HCI learning},
year = {2006},
isbn = {1595930558},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1140124.1140141},
doi = {10.1145/1140124.1140141},
abstract = {Crafting a good user experience requires skills in several disciplines. Few people have this breadth of knowledge, and undergraduate computer science students are no exception. Encouraging computer science students to appreciate the ways that other disciplines contribute to Human Computer Interaction is important, yet difficult. Our students learn about this disciplinary interdependence through peer teaching as part of a group project. Each group contains students with complementary skills and we expect a transfer of knowledge. Here we discuss the educational theory behind the project, the project's essential elements and an evaluation of how it aids learning. The model we have developed could be easily adapted for other courses which draw on diverse skills.},
booktitle = {Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {53–57},
numpages = {5},
keywords = {HCI education, group projects, peer teaching},
location = {Bologna, Italy},
series = {ITICSE '06}
}

@inproceedings{10.1145/971300.971424,
author = {Kaplan, Daniel T.},
title = {Teaching computation to undergraduate scientists},
year = {2004},
isbn = {1581137982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/971300.971424},
doi = {10.1145/971300.971424},
abstract = {This paper describes the motivation and design of an introductory computational course for natural, physical, and social scientists.},
booktitle = {Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education},
pages = {358–362},
numpages = {5},
keywords = {databases, education, image processing, scientific programming, signal processing},
location = {Norfolk, Virginia, USA},
series = {SIGCSE '04}
}

@article{10.5555/948835.948838,
author = {Zaidman, Marsha},
title = {Teaching defensive programming in Java},
year = {2004},
issue_date = {January 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {19},
number = {3},
issn = {1937-4771},
abstract = {Teaching the need and methods of producing secure and reliable code is one of the challenges of teaching programming in an academic setting. Some programming languages like Ada are designed to protect programs from common program deficiencies. Other languages like Java are more trusting and rely on the programmer to bullet-proof his/her own code. This article discusses issues that should be addressed through programming style and coding guidelines. Students applying these guidelines produce more reliable programs and learn good programming practices. Programming standards are not a novel concept but one that bears revisiting in light of languages like Java.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {33–43},
numpages = {11}
}

@inproceedings{10.1145/961511.961575,
author = {Adams, Liz and Daniels, Mats and Goold, Annegret and Hazzan, Orit and Lynch, Kathy and Newman, Ian},
title = {Challenges in teaching capstone courses},
year = {2003},
isbn = {1581136722},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/961511.961575},
doi = {10.1145/961511.961575},
abstract = {Many of us run capstone project courses and do so in different ways. The members of this panel come from different countries, belong to different types of institutions, teach in different computing disciplines and the capstone projects they run also vary considerably. Yet, there is a strong sense of consensus about what a capstone project is and how valuable it is as a learning experience for students.The panel discussion will serve as an inspiration to develop new, and change old capstone project courses. The main aim is to discuss why, or why not, different approaches work in a capstone project. What are the learning objectives behind the approach? What are the problems? What are the benefits? How is assessment managed? What resources, tools and techniques are used to administer and manage the projects?Concrete examples of how capstone projects are run at the six institutions represented by the panellists will be given, and issues such as framework, methodologies, project examples and technologies used in the process of producing projects will be addressed.},
booktitle = {Proceedings of the 8th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {219–220},
numpages = {2},
keywords = {capstone projects, computer science education},
location = {Thessaloniki, Greece},
series = {ITiCSE '03}
}

@article{10.5555/364133.364189,
author = {Thomas, Rebecca},
title = {Experiences teaching C++ programming online},
year = {2000},
issue_date = {May 2000},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {15},
number = {5},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {211–219},
numpages = {9}
}

@inproceedings{10.1145/273133.274324,
author = {Gelfand, Natasha and Goodrich, Michael T. and Tamassia, Roberto},
title = {Teaching data structure design patterns},
year = {1998},
isbn = {0897919947},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/273133.274324},
doi = {10.1145/273133.274324},
abstract = {In this paper we present an approach for teaching the Freshman-Sophomore introduction to data structures course (CS2) in a way that provides an introduction to object-oriented software engineering patterns in addition to the theory of data structures. We survey in this paper several design patterns and describe how they can be naturally integrated in the CS2 curriculum.},
booktitle = {Proceedings of the Twenty-Ninth SIGCSE Technical Symposium on Computer Science Education},
pages = {331–335},
numpages = {5},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '98}
}

@inproceedings{10.1145/268084.268135,
author = {Parlante, Nick},
title = {Teaching with object oriented libraries},
year = {1997},
isbn = {0897918894},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/268084.268135},
doi = {10.1145/268084.268135},
abstract = {This paper describes a new course centered around the use of large object-oriented libraries and the distinct skills required to use them effectively. The paper describes the needs which led to the formation of the new course, an outline of the course's goals, topics and projects, and observations and conclusions from the course's first offerings.},
booktitle = {Proceedings of the Twenty-Eighth SIGCSE Technical Symposium on Computer Science Education},
pages = {140–144},
numpages = {5},
location = {San Jose, California, USA},
series = {SIGCSE '97}
}

@inproceedings{10.1145/76738.76782,
author = {Curry, G. L. and Deuermeyer, B. L. and Feldman, R. M.},
title = {Teaching simulation with MOR/DS},
year = {1989},
isbn = {0911801588},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/76738.76782},
doi = {10.1145/76738.76782},
abstract = {The goal in many introductory simulation courses is to focus on the concepts of simulation and minimize the time spent in learning language specific techniques. The MOR/DS (Microcomputer support for Operations Research and Management Science--Discrete Simulation) language has been developed with this goal in mind: to provide a microcomputer environment designed for teaching simulation. In this paper, we discuss its use as a teaching tool for simulation and as an introduction to languages that students will most likely use after leaving school.},
booktitle = {Proceedings of the 21st Conference on Winter Simulation},
pages = {350–359},
numpages = {10},
location = {Washington, D.C., USA},
series = {WSC '89}
}

@article{10.1145/15075.15094,
author = {Taffe, William J},
title = {Teaching computer science through writing},
year = {1986},
issue_date = {June 1986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/15075.15094},
doi = {10.1145/15075.15094},
abstract = {Student difficulty in expressing computing concepts in clear, concise English has stimulated me to introduce a writing assignment into various Computer Science courses. This article describes the problem, the goals of the assignment, and student improvement and reaction.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {82–83},
numpages = {2}
}

@article{10.1145/382208.382513,
author = {Daigle, R. J.},
title = {Teaching COBOL with generic design},
year = {1985},
issue_date = {Sept. 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/382208.382513},
doi = {10.1145/382208.382513},
journal = {SIGCSE Bull.},
month = {sep},
pages = {12–16},
numpages = {5}
}

@inproceedings{10.1145/800038.801015,
author = {Shooman, Martin L.},
title = {The teaching of software engineering},
year = {1983},
isbn = {0897910915},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800038.801015},
doi = {10.1145/800038.801015},
abstract = {It has become abundantly clear to all that during the last two decades of the twentieth century and long into the twenty first, software will be both the heart and the binding force of all our large technological developments. Two decades ago large software systems began to be born. Within the last decade, leaders in industry, government, and the universities have realized that software can represent up to 90% of the cost of large computer projects. During this time period, the term Software Engineering has emerged, which can be defined as:Software Engineering: The collection of analysis, design, test, documentation, and management techniques needed to produce timely software within budgeted cost.One of the major challenges facing computer science departments is how to teach software engineering to the large number of B.S. and M.S. students who are now studying Computer Science.},
booktitle = {Proceedings of the Fourteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {66–71},
numpages = {6},
location = {Orlando, Florida, USA},
series = {SIGCSE '83}
}

@inproceedings{10.1145/800176.809944,
author = {Sheil, B. A.},
title = {Teaching procedural literacy (Presentation Abstract)},
year = {1980},
isbn = {0897910281},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800176.809944},
doi = {10.1145/800176.809944},
abstract = {The naive way to teach a skill is to teach the surface characteristics of its expert performance. The cost of this naivete, however, is that one eventually runs afoul of both the genetic dependencies between sub-skills and the need to capture (and teach) the relationships between the various expert behaviors. Sooner or later, a transition to a more “deep structured” approach must be made.Programming instruction is currently making such a transition. Traditional methods of instruction in terms of surface characteristics of the programming task, such as specific computers and programming languages, are gradually yielding to less media dependent treatment of programming as a problem of structured design (Floyd, 1979). However, while these more abstract design issues are essential concerns of the professional systems engineer, the orientation of basic programming instruction around them is simply moving our focus from one aspect of expert performance to another. This would be tenable were our concern primarily the training of computer professionals but, while we have been developing our understanding of programming, the spread of computing has changed the motivation for programming instruction. What was once professional education has become an important component of literacy.},
booktitle = {Proceedings of the ACM 1980 Annual Conference},
pages = {125–126},
numpages = {2},
series = {ACM '80}
}

@inproceedings{10.1145/800104.803377,
author = {Maurer, W. D.},
title = {The teaching of program correctness},
year = {1977},
isbn = {9781450374071},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800104.803377},
doi = {10.1145/800104.803377},
abstract = {For the past seven years, including three years at the University of California (Berkeley) and four years at The George Washington University, this author has taught material relating to the correctness of programs in both undergraduate and graduate courses.The simplest material on correctness that we teach is the proof of correctness of Euclid's algorithm, implemented as a program in FORTRAN, AL-GOL 60, PL/I, or BASIC, depending on the language to which elementary students are first introduced. (It would work just as easily in PASCAL.) This proof is found in (1), pp. 14-20. We usually give a simplified version of it, because the program in (1), for purposes of efficiency, works by dividing and taking the remainder, and we feel it is easier to illustrate the relevant concepts by using an algorithm that works by simple subtractions.},
booktitle = {Proceedings of the Seventh SIGCSE Technical Symposium on Computer Science Education},
pages = {142–144},
numpages = {3},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '77}
}

@inproceedings{10.1145/800284.811154,
author = {Gerhart, Susan L.},
title = {Methods for teaching program verification},
year = {1975},
isbn = {9781450373982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800284.811154},
doi = {10.1145/800284.811154},
abstract = {“Program verification” is generally defined as the process of ascertaining and demonstrating that a program is correct, i.e., that a program satisfies a given set of specifications. The most common method of verifying a program is by testing, the process of executing a program for a set of selected inputs and inferring from the results of those executions that the program is correct for all possible inputs.In practice today, a few programs are being proved correct but the most common method of program verification is still testing. Both methods are unreliable in different ways, but when combined, their complementary relationship can provide a high degree of assurance that programs are correct. The purpose of this paper is (1) to review the state of the art of these two approaches to program verification and the relationship between them, and (2) to suggest a number of ways in which program verification can be introduced into the computer science curriculum.},
booktitle = {Proceedings of the Fifth SIGCSE Technical Symposium on Computer Science Education},
pages = {172–178},
numpages = {7},
series = {SIGCSE '75}
}

@article{10.5555/1040151.1040190,
author = {Terrell, Robert},
title = {Teaching freshmen VB.NET: anticipated and unexpected issues: panel discussion},
year = {2004},
issue_date = {December 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {2},
issn = {1937-4771},
abstract = {Teaching computer programming to beginners has always been an experience filled with challenges and rewards, but the advent of the new Microsoft .NET Framework has brought new issues and opportunities to the classroom. Many colleges offer Visual Basic as a beginning programming course, and this presentation provides a view of the special problems and concerns that have arisen as a result of the complete re-write of VB in the .NET environment. Just as most of us were getting comfortable teaching Version 6.0, the whole world changed.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {293},
numpages = {1}
}

@inproceedings{10.1145/237466.237633,
author = {Kwiatkowski, Jan and Andruszkiewicz, Marek and Luque, Emilio and Margalef, Tomas and Cunha, Jose and Lourenco, Joao and Krawczyk, Henryk and Szejko, Stanislaw},
title = {Teaching parallel processing: development of curriculum and software tools},
year = {1996},
isbn = {0897918444},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/237466.237633},
doi = {10.1145/237466.237633},
booktitle = {Proceedings of the 1st Conference on Integrating Technology into Computer Science Education},
pages = {159–161},
numpages = {3},
location = {Barcelona, Spain},
series = {ITiCSE '96}
}

@inproceedings{10.1145/3371647.3371657,
author = {Stolinsk\'{a}, Dominika Prov\'{a}zkov\'{a} and \v{S}melov\'{a}, Eva},
title = {Teaching Assistant: New Element Supporting the Inclusive Approach in Czech Primary School},
year = {2020},
isbn = {9781450372251},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3371647.3371657},
doi = {10.1145/3371647.3371657},
abstract = {Currently, a research project is implemented at Palack\'{y} University Olomouc, the purpose of which is to facilitate pupils' adaptation to primary school with an emphasis on current inclusive trends. In the context of this issue, a new position has emerged - teaching assistant. Teaching assistants are non-educational staff and their competences differ from assistants to specific pupils or teachers. In the Czech Republic this model is currently under testing. This paper presents the research results in the form of a job description scheme of a teaching assistant as required by practice. The analysis of activities was based on time-based examination of 11 teaching assistants in the course of 2 months.},
booktitle = {Proceedings of the 2019 3rd International Conference on Education and E-Learning},
pages = {119–121},
numpages = {3},
keywords = {Primary school, adaptation, inclusive approach, research, school assistant},
location = {Barcelona, Spain},
series = {ICEEL '19}
}

@inproceedings{10.5555/1599812.1599835,
author = {Davis, Elizabeth A.},
title = {Elementary teachers' ideas about effective science teaching: a longitudinal study},
year = {2008},
publisher = {International Society of the Learning Sciences},
abstract = {Beginning elementary teachers face numerous challenges in engaging in effective science teaching, and the expectations for elementary science teaching are becoming even more demanding. Since teachers' beliefs mediate their practice, characterizing their beliefs about effective science teaching can yield insights about ways to support beginning elementary teachers as they learn to teach science. This longitudinal study follows six elementary teachers in their early years of teaching. Five conceptions of effective science teaching are identified. In addition, though the teachers' beliefs are largely consistent over time-indicating that these are, indeed, central beliefs within their beliefs systems--a move away from reform-oriented practices is identified for most of the teachers in their third year of teaching. Implications for teacher preparation and induction point to the importance of supporting teachers in understanding the rationales behind reforms such as inquiry-oriented science teaching and engaging students in scientific practices.},
booktitle = {Proceedings of the 8th International Conference on International Conference for the Learning Sciences - Volume 1},
pages = {199–206},
numpages = {8},
location = {Utrecht, The Netherlands},
series = {ICLS'08}
}

@inproceedings{10.1145/354908.354985,
author = {Vry, Janet and Bianchi, Julius},
title = {Teaching with technology: designing, implementing, and sustaining faculty development programs},
year = {2000},
isbn = {1581132298},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/354908.354985},
doi = {10.1145/354908.354985},
booktitle = {Proceedings of the 28th Annual ACM SIGUCCS Conference on User Services: Building the Future},
pages = {337},
keywords = {faculty development, instruction, teaching and technology},
location = {Richmond, Virginia, USA},
series = {SIGUCCS '00}
}

@inproceedings{10.1145/2401796.2401820,
author = {Patitsas, Elizabeth and Kroeker, Vanessa and Jordan, Rachel and Voll, Kimberly},
title = {Teaching CPU architecture: a new way to provide effective scaffolding},
year = {2012},
isbn = {9781450317955},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2401796.2401820},
doi = {10.1145/2401796.2401820},
abstract = {CPU architecture is a complex field in which students can be easily overwhelmed. To mitigate this complexity we demonstrate the "Paper CPU", an in-class activity wherein students simulate a Y86 processor on paper. Students report the activity to be an interesting and useful introduction to CPU architecture, and appear to focus more on the behaviour of the system.},
booktitle = {Proceedings of the 12th Koli Calling International Conference on Computing Education Research},
pages = {149–150},
numpages = {2},
keywords = {CPU architecture, CS education, computer organization},
location = {Koli, Finland},
series = {Koli Calling '12}
}

@article{10.5555/1047846.1047886,
author = {Baas, Brent},
title = {Teaching in Abyssinia: a CS instructor's experience in northern Ethiopia},
year = {2005},
issue_date = {April 2005},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {4},
issn = {1937-4771},
abstract = {This paper is an experiential report on a Fulbright-sponsored teaching endeavor in Computer Science at Mekelle University in northern Ethiopia during the 2002--2003 academic year. The reader is introduced to the country of Ethiopia and the administration, teachers, and students of Mekelle University. The paper is intended to increase awareness of similar needs and challenges available through opportunities such as the Fulbright Scholar Program.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {256–261},
numpages = {6}
}

@article{10.1145/2382564.2382565,
author = {Benkrid, Khaled and Clayton, Thomas},
title = {Digital Hardware Design Teaching: An Alternative Approach},
year = {2012},
issue_date = {November 2012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {4},
url = {https://doi.org/10.1145/2382564.2382565},
doi = {10.1145/2382564.2382565},
abstract = {This article presents the design and implementation of a complete review of undergraduate digital hardware design teaching in the School of Engineering at the University of Edinburgh. Four guiding principles have been used in this exercise: learning-outcome driven teaching, deep learning, affordability, and flexibility. This has identified discrete electronics as key components in the early stages of the curriculum and FPGAs as an economical platform for the teaching of various digital hardware design concepts and techniques in later stages of the curriculum. In particular, the article presents the detailed design and implementation of one digital hardware design laboratory, called Gateway, which introduces students to synchronous digital circuit development from high level functional specifications, uses Verilog for hardware description and FPGAs as an implementation platform. Biggs’ theory of constructive alignment was applied in the design of this lab’s learning outcomes, lab content, teaching and learning methods, and assessment methods. The lab makes extensive use of multimedia in both lab content delivery and demonstration applications developed by students. Student feedback following the deployment of this lab was overwhelmingly positive and an evaluation of the lab results compared to previous lab offerings’ shows the merit of the approach taken.},
journal = {ACM Trans. Comput. Educ.},
month = {nov},
articleno = {13},
numpages = {20},
keywords = {Digital hardware design, FPGA, Verilog, computer engineering, constructive alignment, curriculum design, electrical and electronics engineering, reconfigurable hardware}
}

@article{10.5555/1181849.1181895,
author = {Brownsmith, Joseph D},
title = {Teaching and learning middleware: a new course},
year = {2007},
issue_date = {January 2007},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {22},
number = {3},
issn = {1937-4771},
abstract = {This paper addresses creating and teaching a course in middleware as part of a Computer Science Information System curriculum. Middleware is an important, relevant, and timely issue in industry; one which our students have no exposure. Faculty experience with this topic is also typically limited. This paper discusses the advantages of partnering with a middleware solution provider in preparing such a course. The course goals were student awareness of the issues and choices that drive application integration, and hands-on experience in creating working middleware solutions.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {251–256},
numpages = {6}
}

@article{10.1145/122506.122507,
author = {Gershuny, J. I. and Slater, J. B.},
title = {Computers in teaching initiative: an executive summary},
year = {1991},
issue_date = {Spring 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {1},
issn = {0736-6892},
url = {https://doi.org/10.1145/122506.122507},
doi = {10.1145/122506.122507},
abstract = {In 1982, the Nelson working party of the Computer Board for Universities and Research Councils identified serious shortages in the provision of workstations for use in teaching in UK universities, and in the support of those workstations with software and skilled manpower. Countries such as the USA, Japan and Germany were at that time apparently doing much better. As a result, the Board set aside three tranches of £500000 at half yearly intervals to fund 23 pilot projects in the use of computers in teaching. This was supplemented by a further project funded by the Department of Education for Northern Ireland. In 1985, the University Grants Committee injected significant funds and, by 1986/7, the central expenditure on a total of 139 projects was £9.5 million. Allowing for university contributions above the central provision, the initiative brought together funds of approximately £20 million.},
journal = {SIGUCCS Newsl.},
month = {mar},
pages = {14–18},
numpages = {5}
}

@inproceedings{10.1145/2669711.2669896,
author = {Villagrasa, Sergi and Fonseca, David and Dur\'{a}n, Jaume},
title = {Teaching case: applying gamification techniques and virtual reality for learning building engineering 3D arts},
year = {2014},
isbn = {9781450328968},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2669711.2669896},
doi = {10.1145/2669711.2669896},
abstract = {In this paper the researchers describe the use of gamification and virtual reality-enhanced learning in university engineering and architecture classes. Our goal is to increase student motivation and engagement through various technologies and learning methodologies based on game mechanics, called gamification, and the use of virtual reality.Gamification is used to engage students in the learning process and stretch their retention of the knowledge and skills received beyond a single lecture. Engagement is the main objective in applying gamification. The use of gamification and new technologies for enhancing the learning process will boost achievement in 3D architectural subjects for design, and convey and validate any architectural project.The researchers used virtual reality and software like Sketchfab, Unity, and Oculus Rift VR to enter virtual and immersive worlds that students used to enhance their architectural designs. To connect the technologies, the researchers used Unity for programming all the viewer behaviors and the virtual world interactivity. The researchers used Oculus Rift, a heads-up display for virtual reality with a high immersive presence, to design a pavilion and create a virtual island from scratch.},
booktitle = {Proceedings of the Second International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {171–177},
numpages = {7},
keywords = {3d design, 3d education, gamification, human interaction, learning management tools, virtual reality, web GL},
location = {Salamanca, Spain},
series = {TEEM '14}
}

@inproceedings{10.1145/2832920.2832921,
author = {Salewski, Falk and Schmidt, Rainer},
title = {Teaching Industrial Automation: An Approach for a Practical Lab Course},
year = {2015},
isbn = {9781450338974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2832920.2832921},
doi = {10.1145/2832920.2832921},
abstract = {While Embedded Systems are present in industrial automation for several decades already, the scope and complexity of their applications is constantly growing. In addition, further aspects gain importance. One aspect is that today's automation systems are more and more interconnected, e.g. for the exchange of status and manufacturing data. Another aspect is that the use of already existing software components is important to meet cost and time-to-market requirements. This paper describes a lab course for industrial automation based on PLC systems addressing these aspects. In this course, six groups of students work together on the automation of a model factory consisting of six manufacturing stages. Challenges resulting from the interaction between the groups could be solved by a software framework and a specific hardware setting presented in this paper. According to this approach, students are faced with the realistic scenario of starting a development on basis of existing software components. Further possibilities within the scope of this course are discussed as well as the transfer to other lab course settings in the embedded systems domain.},
booktitle = {Proceedings of the WESE'15: Workshop on Embedded and Cyber-Physical Systems Education},
articleno = {1},
numpages = {7},
keywords = {industrial automation, lab course design, model factory, project based learning},
location = {Amsterdam, Netherlands},
series = {WESE'15}
}

@article{10.5555/3580619.3580635,
author = {Abhyankar, Ramachandra B.},
title = {Teaching Programming Paradigms Using CLIPS},
year = {2022},
issue_date = {November 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {4},
issn = {1937-4771},
abstract = {CLIPS is an expert system shell, originally developed at NASA. In universities, it is often used in courses in Artificial Intelligence and Expert Systems and projects for building expert systems. I believe it can be used effectively in courses in Programming Languages to teach three programming paradigms: Rule-Based, Procedural, and Object-Oriented. CLIPS not only supports these programming paradigms, but also supports their integration.Courses in programming languages that teach programming paradigms, often teach the paradigms in isolation. Prolog is often used to teach the Logic Programming paradigm. Haskell is often used to teach the Functional Programming Paradigm. There are several choices available to teach the Object-Oriented Paradigm: Smalltalk, Eiffel, Ruby, etc. Concurrent Programming is often taught using C, Java. However, Rule Based Programming is typically not taught in courses in Programming Languages as a programming paradigm.Use of CLIPS in Programming Languages courses will not only support the teaching of the often-neglected Rule Based programming paradigm, but also teach the integration of this programming paradigm with the Object-Oriented and Procedural programming paradigms. CLIPS is a free download and comes with copious free documentation. Tutorials for CLIPS are also available in some books. CLIPS is a valuable resource for teaching multi-paradigm programming, which has been largely neglected by the academic community.The presentation will show examples of CLIPS code that illustrate the different programming paradigms that it supports, and their integration.},
journal = {J. Comput. Sci. Coll.},
month = {nov},
pages = {78},
numpages = {1}
}

@inproceedings{10.1145/3501292.3511582,
author = {Brown, Lisa},
title = {Lessons Learned from Pandemic Teaching},
year = {2022},
isbn = {9781450391931},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501292.3511582},
doi = {10.1145/3501292.3511582},
abstract = {As educational technology specialists, we help faculty create and deliver online classes all the time. However, online classes are a small part of our offerings at the University of Rochester. During the pandemic, there was a move to remote teaching in spring 2020, and then hybrid/online teaching in fall 2020 and spring 2021. Providing access to technology tools, and information about best practices in online course delivery was easy. But having everything online was different. This provided us with some lessons learned for future online delivery methods that will be shared in this lightning talk.},
booktitle = {Proceedings of the 2022 ACM SIGUCCS Annual Conference},
pages = {51–53},
numpages = {3},
keywords = {online learning, online teaching, teaching with technology},
location = {Virtual Event, USA},
series = {SIGUCCS '22}
}

@inproceedings{10.1145/3465631.3465975,
author = {Li, Xiujuan},
title = {Online Language Teaching During Coronavirus},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465975},
doi = {10.1145/3465631.3465975},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {302},
numpages = {5},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/3287324.3293722,
author = {Gregg, Chris and Lupoli, Shawn and Strange, Laney},
title = {Teaching Track Faculty in CS},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293722},
doi = {10.1145/3287324.3293722},
abstract = {Many computer science departments have chosen to hire faculty to teach in teaching-track positions that parallel the standard tenure-track position, providing the possibility of promotion, longer- term contracts, and higher pay for excellence in teaching and service. This birds-of-a-feather is designed to gather educators, both experienced and new to teaching track positions, who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information. In particular, we will discuss how to support for new teaching track faculty, as many CS departments are expanding and adding teaching track positions.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1245},
numpages = {1},
keywords = {non-tenure, teaching, teaching track faculty},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3287324.3287450,
author = {L\'{e}deczi, \'{A}kos and Mar\'{O}ti, Mikl\'{O}s and Zare, Hamid and Yett, Bernard and Hutchins, Nicole and Broll, Brian and V\"{o}lgyesi, P\'{e}ter and Smith, Michael B. and Darrah, Timothy and Metelko, Mary and Koutsoukos, Xenofon and Biswas, Gautam},
title = {Teaching Cybersecurity with Networked Robots},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287450},
doi = {10.1145/3287324.3287450},
abstract = {The paper presents RoboScape, a collaborative, networked robotics environment that makes key ideas in computer science accessible to groups of learners in informal learning spaces and K-12 classrooms. RoboScape is built on top of NetsBlox, an open-source, networked, visual programming environment based on Snap! that is specifically designed to introduce students to distributed computation and computer networking. RoboScape provides a twist on the state of the art of robotics learning platforms. First, a user's program controlling the robot runs in the browser and not on the robot. There is no need to download the program to the robot and hence, development and debugging become much easier. Second, the wireless communication between a student's program and the robot can be overheard by the programs of the other students. This makes cybersecurity an immediate need that students realize and can work to address. We have designed and delivered a cybersecurity summer camp to 24 students in grades between 7 and 12. The paper summarizes the technology behind RoboScape, the hands-on curriculum of the camp and the lessons learned.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {885–891},
numpages = {7},
keywords = {block-based programming, computer science education, cybersecurity, netsblox, robotics, snap!, visual programming},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3306500.3306548,
author = {Raviolo, Paolo},
title = {Online higher education teaching practices},
year = {2019},
isbn = {9781450366021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3306500.3306548},
doi = {10.1145/3306500.3306548},
abstract = {In the last years, the number of online courses offered by the Italian Universities has increased significantly and it has reached overall 100 courses and 77.000 students enrolled. Many academics have thus experienced the design of online courses delivered by means of Virtual Learning Environments. The aim of the research reported in the present contribute is to investigate this scenario with respect to the Italian Universities. We assumed that a reconceptualization of the models for University's online teaching activities has triggered the born of new communities of practices (CoPs), that emerged to animate the search for more effective and sustainable online teaching models. The survey focused on the presence and the key features of CoPs for online teaching. The results of the survey confirm the presence of informal learning dynamics within the University's organizations: a common repertoire, a sense of community and active interactions toward common objectives were identified and described by the interviewees.},
booktitle = {Proceedings of the 10th International Conference on E-Education, E-Business, E-Management and E-Learning},
pages = {79–84},
numpages = {6},
keywords = {community of practices (CoPs), e-learning, higher education, online teaching, university teaching},
location = {Tokyo, Japan},
series = {IC4E '19}
}

@inproceedings{10.1145/3209635.3209647,
author = {Smith, Jacqueline},
title = {Lightweight Strategies for Inclusive Teaching},
year = {2018},
isbn = {9781450358057},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3209635.3209647},
doi = {10.1145/3209635.3209647},
abstract = {Diversity and inclusion are important topics in computer science education, and garner much discussion about institutional policies and outreach programs that can impact diversity. Classroom experiences are also key for underrepresented students, but many instructors feel ill-equipped to address inclusion in their own classrooms. In this presentation, I will review some helpful resources for instructors looking to think more about inclusion in their teaching, and share my own experiences implementing some of them. In particular, I will focus on strategies that an instructor can implement with little to no cost, and without broader institutional changes.},
booktitle = {Proceedings of the 23rd Western Canadian Conference on Computing Education},
articleno = {14},
numpages = {1},
location = {Victoria, BC, Canada},
series = {WCCCE '18}
}

@article{10.1145/3036699.3036707,
author = {F\"{o}rster, Anna and Dede, Jens and K\"{o}nsgen, Andreas and Udugama, Asanga and Zaman, Idrees},
title = {TEACHING THE INTERNET OF THINGS},
year = {2017},
issue_date = {July 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {3},
issn = {2375-0529},
url = {https://doi.org/10.1145/3036699.3036707},
doi = {10.1145/3036699.3036707},
abstract = {Teaching the Internet of Things has become vital in engineering, but also very challenging. This is mainly due to the almost unbelievable variety of available systems, hardware and software components, and online resources. This column discusses how we, at the University of Bremen, approached this problem: with hands-on experience and concept abstraction.},
journal = {GetMobile: Mobile Comp. and Comm.},
month = {jan},
pages = {24–28},
numpages = {5}
}

@article{10.5555/2184451.2184482,
author = {Dickson, Paul E.},
title = {Teaching mobile computing using Cabana},
year = {2012},
issue_date = {June 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {6},
issn = {1937-4771},
abstract = {Mobile computing is a growing market and an area of increasing interest to students. To answer our student demand we decided to develop a mobile computing course but one with a focus on interface and application design rather than implementation. The course is designed for a student audience ranging from novice programmers to experts. Using Cabana as our platform, we were able to achieve this end while also enabling our students to build functioning mobile applications. Cabana enables rapid interface design and application development without the learning curve of more traditional mobile application building. In this paper we describe our project-based curriculum and discuss its successes and failures.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {128–134},
numpages = {7}
}

@article{10.5555/2168874.2168882,
author = {Lartigue, Jonathan},
title = {Teaching design patterns in gaming},
year = {2012},
issue_date = {May 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {5},
issn = {1937-4771},
abstract = {Game development is a cool and interest- grabbing topic area for many undergraduate students. Therefore, it is not surprising that many instructors choose to incorporate game development projects in their courses and assignments.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {32},
numpages = {1}
}

@inproceedings{10.1145/1920778.1920799,
author = {Corriveau, Jean-Pierre and Shi, Wei},
title = {Teaching strategies to millenial students},
year = {2010},
isbn = {9781450302357},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1920778.1920799},
doi = {10.1145/1920778.1920799},
abstract = {Millenial students are very technology-aware and see technology as a necessity in most aspects of their life including learning. Traditional learning methods, in which the instructor largely controls the learning process, are not well adapted to such a clientele. Conversely, serious gaming environments offer complex and diversified approaches to active learning, which millenial students greatly appreciate. In this paper, we report on how one such environment, namely Second Life, was used to create a teaching center for a university course on business strategies.},
booktitle = {Proceedings of the International Academic Conference on the Future of Game Design and Technology},
pages = {143–150},
numpages = {8},
keywords = {business strategies, scripted animations, second life, serious games},
location = {Vancouver, British Columbia, Canada},
series = {Futureplay '10}
}

@inproceedings{10.1145/1597990.1598054,
author = {Geigel, Joe},
title = {Teaching animation in Second Life},
year = {2009},
isbn = {9781605588346},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1597990.1598054},
doi = {10.1145/1597990.1598054},
abstract = {In the Spring of 2009, the Computer Science Department at the Rochester Institute of Technology gave an experimental offering of their course: Computer Animation: Algorithm and Techniques, entirely in the virtual world of Second Life. The goal of the experiment was to discover whether worlds like Second Life could be used effectively to teach computer graphics in a distance learning environment.},
booktitle = {SIGGRAPH 2009: Talks},
articleno = {64},
numpages = {1},
location = {New Orleans, Louisiana},
series = {SIGGRAPH '09}
}

@inproceedings{10.1145/1508865.1508954,
author = {Yang, Li},
title = {Teaching database security and auditing},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1508954},
doi = {10.1145/1508865.1508954},
abstract = {Hands-on laboratory experiences are essential critical for students to understand concepts and gain real-world insights in database security and auditing. We are developing a set of hands-on labs to integrate theories of database security into practices. Our designed labs do not require purchasing any commercial software or pre-configuration. Each lab includes objectives, results, and resources to help students to understand database security concepts including access control, virtual private database, and database auditing etc. We use two major database products (Microsoft SQL Server and Oracle 10g) to design and implement our labs.},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {241–245},
numpages = {5},
keywords = {auditing, curriculum, database security},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@article{10.1145/1534490.1534493,
author = {Almeida, Carlos},
title = {Practical experience teaching embedded systems},
year = {2008},
issue_date = {October 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {3},
url = {https://doi.org/10.1145/1534490.1534493},
doi = {10.1145/1534490.1534493},
abstract = {The area of embedded systems and their interconnection is of utmost importance nowadays. The technological evolution, and widespread use, of small electronic devices with processing and communication capabilities, creates the potential for the development of new applications in several different domains. Areas such as industrial control, automotive, home automation, surveillance systems, sensor networks applied to the monitoring of wild life, environment, or buildings, are examples of such potential and ubiquity.The importance of this area can not be ignored in an Electrical and Computer Engineering Course. It is important to make students able to master the technologies related to embedded systems, including "hands-on" experience developing and testing real systems, and dealing with specific application environments with low resources and close hard-ware/software interaction.This paper describes the author's experience teaching a course of embedded systems in an Electrical and Computer Engineering Course.},
journal = {SIGBED Rev.},
month = {oct},
articleno = {3},
numpages = {8},
keywords = {embedded systems development, embedded systems education}
}

@article{10.1145/1190070.1190072,
author = {Stewart, Michael},
title = {Teaching art at a distance},
year = {2006},
issue_date = {December 2006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2006},
number = {12},
url = {https://doi.org/10.1145/1190070.1190072},
doi = {10.1145/1190070.1190072},
journal = {ELearn},
month = {dec},
pages = {1–es}
}

@inproceedings{10.1145/1231047.1231052,
author = {Walden, James and Frank, Charles E.},
title = {Secure software engineering teaching modules},
year = {2006},
isbn = {1595934375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1231047.1231052},
doi = {10.1145/1231047.1231052},
abstract = {We are designing a course in secure software engineering that will teach students how to incorporate security throughout the software development lifecycle. The class will serve as a capstone for a new graduate certificate in secure software engineering. This paper describes the class goals, the design for the class, and the materials that we will develop to teach secure software engineering. We are creating ten modules to cover the core topics in software security. Each module will cover one or more class goals and will consist of both explanatory materials and assignments to give students the opportunity to apply their learnings in a small context. The modules will be developed over the Summer and Fall of 2006, and the class will be first offered in Spring 2007. The class will also incorporate a team-based web development project that students will work on throughout the semester to gain experience applying security principles to a large-scale project.},
booktitle = {Proceedings of the 3rd Annual Conference on Information Security Curriculum Development},
pages = {19–23},
numpages = {5},
keywords = {information security education, secure software engineering, software security},
location = {Kennesaw, Georgia},
series = {InfoSecCD '06}
}

@article{10.5555/1127442.1127471,
author = {Stiller, Evelyn and LeBlanc, Cathie},
title = {Teaching software development by example},
year = {2006},
issue_date = {June 2006},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {21},
number = {6},
issn = {1937-4771},
abstract = {We have been teaching a course in client-server application development since 1998. We have introduced certain pedagogical strategies to enable our students to more successfully develop their own client/server application by the conclusion of the course. This paper explores these innovations and discusses how student success has improved as a result. This paper covers reusable components for client-server communication and design-by-example techniques used in this course. We also discuss how we model evolutionary application development throughout the course.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {228–237},
numpages = {10}
}

@article{10.1145/1101670.1101671,
author = {Feldman, Yishai A.},
title = {Teaching quality object-oriented programming},
year = {2005},
issue_date = {March 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {1},
issn = {1531-4278},
url = {https://doi.org/10.1145/1101670.1101671},
doi = {10.1145/1101670.1101671},
abstract = {Computer science students need to learn how to write high-quality software. An important methodology for achieving quality is design-by-contract, in which code is developed together with its specification, which is given as class invariants and method pre- and postconditions. This paper describes practical experience in teaching design-by-contract and other principles of object-oriented programming and design by a comprehensive set of programming exercises. These are implemented in Java, augmented with a design-by-contract tool. The conceptual gap between the theoretical principles taught in the course and the capabilities of this programming environment causes pedagogical problems; these problems and some solutions are discussed in this paper.},
journal = {J. Educ. Resour. Comput.},
month = {mar},
pages = {1–es},
numpages = {16},
keywords = {Software quality}
}

@inproceedings{10.1145/1047344.1047500,
author = {Weiss, Stephen},
title = {Teaching design patterns by stealth},
year = {2005},
isbn = {1581139977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1047344.1047500},
doi = {10.1145/1047344.1047500},
abstract = {Learning design patterns is tough, even for seasoned programmers who have seen lots of programs and hence have a sense for constructs that tend to recur. Teaching design patterns to new programmers is even tougher. As Asher Sterkin states, "Teaching design patterns in isolation is similar to studying a foreign language with only a dictionary." [4]. It is far better to try to teach design patterns using killer examples to help motivate and illustrate each pattern. I propose here something a little more radical: to teach by stealth. With a small number of principles of good program design, and using a running case study that grows in complexity through the semester, we can, through class discussions and exercises, "invent" programming solutions that turn out to be some of the important design patterns. The official names and definitions of the pattern [2, 3] are revealed only after the fact, if at all.},
booktitle = {Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education},
pages = {492–494},
numpages = {3},
keywords = {design patterns, programming pedagogy},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '05}
}

@inproceedings{10.1145/1027802.1027847,
author = {Saul, John},
title = {Moving from training to teaching},
year = {2004},
isbn = {1581138695},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1027802.1027847},
doi = {10.1145/1027802.1027847},
abstract = {Training at Drew University has been done mostly in an intense and concentrated format. With only an hour to train customers, we have to pack as much content in as possible. The problem with this method manifests once our customers return to their offices. Unable to immediately put into use all of what they learned, it may be days or weeks before they attempt a particular task they learned in a training session, and they have forgotten how.In an attempt to provide extra learning opportunities and to explore another method of training employees, the Staff Technology Development Seminar was created. This seminar provides instruction on software packages and their uses. Instead of a training methodology, a teaching methodology was used. The students attended class for two days a week, received homework and reading assignments. They were instructed in the logic of how the software was designed to be used, and taught how to use that logic to accomplish a series of tasks, both individually and in a group.The Staff Technology Development Seminar is entering its second year, and this paper is intended to cover the creation of the resources needed for the seminar.},
booktitle = {Proceedings of the 32nd Annual ACM SIGUCCS Conference on User Services},
pages = {191–193},
numpages = {3},
keywords = {advanced training topics, staff development, training},
location = {Baltimore, MD, USA},
series = {SIGUCCS '04}
}

@inproceedings{10.1145/1186107.1186130,
author = {Border, Peter M.},
title = {Teaching physics by designing games},
year = {2004},
isbn = {1581138962},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1186107.1186130},
doi = {10.1145/1186107.1186130},
booktitle = {ACM SIGGRAPH 2004 Educators Program},
pages = {19},
location = {Los Angeles, California},
series = {SIGGRAPH '04}
}

@inproceedings{10.1145/971300.971382,
author = {Dougherty, John P. and Horton, Thomas B. and Garcia, Daniel D. and Rodger, Susan H.},
title = {Panel on teaching faculty positions},
year = {2004},
isbn = {1581137982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/971300.971382},
doi = {10.1145/971300.971382},
booktitle = {Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education},
pages = {231–232},
numpages = {2},
keywords = {professor of the practice, security of employment, teaching faculty, teaching professor},
location = {Norfolk, Virginia, USA},
series = {SIGCSE '04}
}

@article{10.1145/3261993,
author = {Kinnersley, Nancy},
title = {Session details: Teaching internet technology},
year = {2002},
issue_date = {March 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3261993},
doi = {10.1145/3261993},
journal = {SIGCSE Bull.},
month = {mar}
}

@inproceedings{10.1145/3248199,
author = {Kinnersley, Nancy},
title = {Session details: Teaching internet technology},
year = {2002},
isbn = {1581134738},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248199},
doi = {10.1145/3248199},
booktitle = {Proceedings of the 33rd SIGCSE Technical Symposium on Computer Science Education},
location = {Cincinnati, Kentucky},
series = {SIGCSE '02}
}

@inproceedings{10.1145/571968.571970,
author = {Almstrum, Vicki L. and Dean, C. Neville and Goelman, Don and Hilburn, Thomas B. and Smith, Jan},
title = {Support for teaching formal methods},
year = {2001},
isbn = {9781450373586},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/571968.571970},
doi = {10.1145/571968.571970},
abstract = {This report describes a growth path for the area referred to as formal methods within the computing education community. We define the term formal methods and situate it within our field by highlighting its role in Computing Curricula 1991, Computing Curricula 2001, and the SoftWare Engineering Body Of Knowledge (SWEBOK). The working group proposes an enhancement to an existing web resource, which is a rich collection of materials and links related to formal methods. The new resource is designed to provide a bridge between the general computing education community and the formal methods community. The goal is to allow the latter to provide useful support for the former for the ultimate benefit of all of our students. Eventually, the working group aspires to see the concepts of formal methods integrated seamlessly into the computing curriculum so that it is not necessary to separate them in our discussions.},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {71–88},
numpages = {18},
series = {ITiCSE-WGR '00}
}

@article{10.1145/291712.291758,
author = {Davis, No\"{e}l and Ransbottom, Scot and Hamilton, Drew},
title = {Teaching computer networks through modeling},
year = {1998},
issue_date = {Sept./Oct. 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {XVIII},
number = {5},
issn = {1094-3641},
url = {https://doi.org/10.1145/291712.291758},
doi = {10.1145/291712.291758},
abstract = {Modern computer scientists need to understand both the theoretical and practical aspects of computer networking. As computer science teaching methods continue to mature, experiences in mixing theory and application have been shared in the community [Marti 96]. While the literature is rich with experiences in applied or project based courses in artificial intelligence, architecture, software engineering, data structures and algorithms, few have addressed the challenge of coordinating theory and practice in computer networking courses.Combining theory and practice in a single course on computer networks is difficult because of the complexity and scale of modern networks. Classroom modeling of networks is a technique to illustrate the theoretical aspects of networking through practical models of computer networks. At West Point we are evolving our network course to use network modeling and simple simulation as a visualization tool to show how networks operate and the performance tradeoffs associated with network design decisions. This approach provides the opportunity to do more than teach an undergraduate survey course in computer networking.},
journal = {Ada Lett.},
month = {sep},
pages = {104–110},
numpages = {7}
}

@inproceedings{10.1145/282991.283084,
author = {Hampel, Thorsten and Ferber, Ferdinand and Keil-Slawik, Reinhard and M\"{u}ller, Wolfgang H.},
title = {Hypermedia teaching of mechanics—MechANIma},
year = {1998},
isbn = {1581130007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/282991.283084},
doi = {10.1145/282991.283084},
abstract = {In this paper we describe the mechANIma project, a joint venture between the department of computer science and the laboratory for mechanics at the University of Paderborn, Germany.},
booktitle = {Proceedings of the 6th Annual Conference on the Teaching of Computing and the 3rd Annual Conference on Integrating Technology into Computer Science Education: Changing the Delivery of Computer Science Education},
pages = {112–116},
numpages = {5},
keywords = {animations, co-operative learning, hypermedia learning, multimedia, student centered learning, visualisations},
location = {Dublin City Univ., Ireland},
series = {ITiCSE '98}
}

@inproceedings{10.1145/273133.273173,
author = {Lankewicz, Linda B.},
title = {Resources for teaching computer networks},
year = {1998},
isbn = {0897919947},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/273133.273173},
doi = {10.1145/273133.273173},
abstract = {Teaching a computer networks course can be a challenge both in terms of deciding on the focus of the course and providing appropriate practical experiences to complement the theoretical issues. However, because the course overlaps other areas of the computer science curriculum, it is an opportunity to apply some of the concepts from other areas and to expose students to the research in the field. This paper describes a computer networks course to accomplish this along with a collection of resources.},
booktitle = {Proceedings of the Twenty-Ninth SIGCSE Technical Symposium on Computer Science Education},
pages = {112–116},
numpages = {5},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '98}
}

@inproceedings{10.1145/299359.299391,
author = {Kearns, R. and Shead, S. and Fekete, A.},
title = {A teaching system for SQL},
year = {1997},
isbn = {0897919580},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299359.299391},
doi = {10.1145/299359.299391},
booktitle = {Proceedings of the 2nd Australasian Conference on Computer Science Education},
pages = {224–231},
numpages = {8},
location = {The Univ. of Melbourne, Australia},
series = {ACSE '97}
}

@inproceedings{10.1145/134510.134570,
author = {Owen, G. Scott},
title = {Teaching computer graphics using RenderMan},
year = {1992},
isbn = {0897914686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/134510.134570},
doi = {10.1145/134510.134570},
abstract = {A computer graphics course is extremely hardware system dependent, even more than most computer science courses. To produce high quality graphics images requires a high resolution system with extensive color capability and a fast cpu. Fortunately, the computer graphics capabilities of inexpensive systems have continued to increase. As this trend continues we need to consider changing the way we teach our computer graphics courses. In this paper I discuss a major shift in my teaching methods in the past year. Whereas, previously my students developed their own programs to create images, I have switched to the use of the Pixar RenderMan graphics package in the second graphics course and use it at the end of the first graphics course. I will discuss the rational for this change, mine and the students' experiences with it, and future planned modifications of the courses.},
booktitle = {Proceedings of the Twenty-Third SIGCSE Technical Symposium on Computer Science Education},
pages = {304–308},
numpages = {5},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '92}
}

@inproceedings{10.1145/126551.126611,
author = {Henry, John A.},
title = {AdaTRAN as a teaching tool},
year = {1991},
isbn = {0897914457},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/126551.126611},
doi = {10.1145/126551.126611},
booktitle = {Proceedings of the Conference on TRI-Ada '91: Today's Accomplishments; Tomorrow's Expectations},
pages = {476–483},
numpages = {8},
location = {San Jose, California, USA},
series = {TRI-Ada '91}
}

@article{10.1145/36077.36079,
author = {Leach, Ronald J.},
title = {Experiences teaching concurrency in Ada},
year = {1987},
issue_date = {Sept./Oct. 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {VII},
number = {5},
issn = {1094-3641},
url = {https://doi.org/10.1145/36077.36079},
doi = {10.1145/36077.36079},
abstract = {Many students have great difficulty understanding concurrent programming at anything but the most superficial level. In this paper, we describe some experience teaching concurrent programming in Ada and give some suggestions for implementing the ideas discussed here.},
journal = {Ada Lett.},
month = {sep},
pages = {40–41},
numpages = {2}
}

@article{10.1145/382188.382563,
author = {Aiken, Robert M.},
title = {Reflections on teaching computer ethics},
year = {1983},
issue_date = {Sept. 1983},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/382188.382563},
doi = {10.1145/382188.382563},
journal = {SIGCSE Bull.},
month = {sep},
pages = {8–12},
numpages = {5}
}

@article{10.1145/989314.989320,
author = {Ford, Gary},
title = {A framework for teaching recursion},
year = {1982},
issue_date = {June 1982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/989314.989320},
doi = {10.1145/989314.989320},
abstract = {Recursion is presented as a generalized control structure, with iteration being a special case. A method is described to determine when to use recursion and when to use iteration in designing an algorithm to solve a problem.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {32–39},
numpages = {8}
}

@inproceedings{10.1145/3230977.3230998,
author = {Oleson, Alannah and Mendez, Christopher and Steine-Hanson, Zoe and Hilderbrand, Claudia and Perdriau, Christopher and Burnett, Margaret and Ko, Amy J.},
title = {Pedagogical Content Knowledge for Teaching Inclusive Design},
year = {2018},
isbn = {9781450356282},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3230977.3230998},
doi = {10.1145/3230977.3230998},
abstract = {Inclusive design is important in today's software industry, but there is little research about how to teach it. In collaboration with 9 teacher-researchers across 8 U.S. universities and more than 400 computer and information science students, we embarked upon an Action Research investigation to gather insights into the pedagogical content knowledge (PCK) that teachers need to teach a particular inclusive design method called GenderMag. Analysis of the teachers' observations and experiences, the materials they used, direct observations of students' behaviors, and multiple data on the students' own reflections on their learning revealed 11 components of inclusive design PCK. These include strategies for anticipating and addressing resistance to the topic of inclusion, strategies for modeling and scaffolding perspective taking, and strategies for tailoring instruction to students' prior beliefs and biases.},
booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
pages = {69–77},
numpages = {9},
keywords = {design methods, inclusive design, pedagogical content knowledge},
location = {Espoo, Finland},
series = {ICER '18}
}

@inbook{10.1145/3477355.3477366,
author = {Sufrin, Bernard},
title = {Teaching at Belfast and Oxford},
year = {2021},
isbn = {9781450387286},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
edition = {1},
url = {https://doi.org/10.1145/3477355.3477366},
booktitle = {Theories of Programming: The Life and Works of Tony Hoare},
pages = {223–250},
numpages = {28}
}

@inproceedings{10.1145/3197091.3197111,
author = {Aycock, John and Groeneveldt, Andrew and Kroepfl, Hayden and Copplestone, Tara},
title = {Exercises for teaching reverse engineering},
year = {2018},
isbn = {9781450357074},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3197091.3197111},
doi = {10.1145/3197091.3197111},
abstract = {The ability to reverse engineer binary code is a skill of critical importance within computer security: deciding if an unknown piece of binary code is malicious and, if so, what it does. And yet, there is very little work in computer science education that considers how reverse engineering can be effectively taught. This is a timely area to examine, given that the demand for skilled security professionals continues to rise, while emphasis on low-level topics diminishes. How can we teach students the skills and thought processes underlying reverse engineering?  We present a set of exercises designed to help teach reverse engineering in a graduated fashion to students, along with our experience using them in a computer security course. In addition to some specifically constructed exercises, we have developed two tools that can be used to generate an arbitrary number of examples. And, to highlight learning the thought processes for reverse engineering, one of our exercises is a physical board game that we have designed, built, and used in the classroom. We report on our experience and some results from a formal evaluation of our exercises, and look at areas beyond computer security where reverse engineering training is useful.},
booktitle = {Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education},
pages = {188–193},
numpages = {6},
keywords = {binary reverse engineering, board game, computer security, exercises, malicious software},
location = {Larnaca, Cyprus},
series = {ITiCSE 2018}
}

@inproceedings{10.1145/2611009.2614394,
author = {Buckland, Adam and Quigley, Aaron},
title = {CSCT - Computer Supported Cooperative Teaching},
year = {2014},
isbn = {9781450329521},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2611009.2614394},
doi = {10.1145/2611009.2614394},
abstract = {Personal tablet style devices are projected to become a staple in classroom settings due to their increasing capabilities, improving affordability, portability, weight and ability to hold the texts a student might need. However, these devices are not islands of computing and storage and instead represent a display ecosystem which can support new forms of interaction, teaching, planning, coordination and hence learning. In this paper, we describe CSCT - Computer Supported Cooperative Teaching, a system to allow teachers in a one-tablet-per-child classroom to gain valuable feedback from their students, making the classroom more effective and allowing teachers to create lesson plans that more accurately reflects the learners abilities. We describe the design and motivation for such a system.},
booktitle = {Proceedings of The International Symposium on Pervasive Displays},
pages = {188–189},
numpages = {2},
keywords = {Collaboration, Education, Interactive Surface, Teaching},
location = {Copenhagen, Denmark},
series = {PerDis '14}
}

@inproceedings{10.1145/2445196.2445238,
author = {Salgian, Andrea and Nakra, Teresa M. and Ault, Christopher and Wang, Yunfeng},
title = {Teaching creativity in computer science},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445238},
doi = {10.1145/2445196.2445238},
abstract = {In this paper, we describe how a multidisciplinary undergraduate course in Conducting Robots becomes a venue for fostering creativity and teaching strategies for creativity enhancement. We perform a number of creativity measurements and explain our results in the context of creativity research.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {123–128},
numpages = {6},
keywords = {creativity, multidisciplinary, music, orchestral conducting, robotics},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/1666611.1666613,
author = {Silva, Frutuoso G. M.},
title = {Teaching animation in computer science},
year = {2009},
isbn = {9781450379335},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1666611.1666613},
doi = {10.1145/1666611.1666613},
abstract = {In the last four years, we have been using Blender software to support the Animation course for computer science students. In particular to support the lab classes and to develop a practical project, i.e. a short 3D animation film. The use of a modelling and animation software helps students to understand how it works in practice the several mathematics and physics concepts. For example, how interpolation methods affect the results of a motion path? Thus in the Blender they can see the results of use different interpolation methods. The choice of Blender is due to three factors: it is a free open source 3D content creation suite; it has similar capabilities to the commercial software and it has a large support in terms of documentation, examples and tutorials available in the Internet.Our undergraduate students start by using OpenGL in a Computer Graphics course. In this course they have their first introduction to 3D, and the graphics pipeline is introduced. Then, during their Master degree, the students have the Animation course where they learn the main modelling and animation techniques. In parallel, some topics such as lighting, colouring and texturing are introduced to enable the realization of an animation film. Of course, other topics that are useful to film production such as sketching, storytelling and character design are not taught. The artistic component is minor in our case because the focus of a computer scientist is more technical.However, the films produced by our students reveal the different skills of each one. For example, some reveal more capabilities relating to modelling while others reveal more capabilities relating to animation. Another interesting aspect revealed by projects is the different skills of director, producer and editor.In summary, Blender is an excellent choice for 3D creation and it is a good tool for support the learning process, in particular for topics such as modelling and animation techniques. Besides, it enables the development of all technical steps of an animation film. In fact, the use of animation software makes easier and interesting the learning process of the course because it enables students to evaluate some theoretical concepts.},
booktitle = {ACM SIGGRAPH ASIA 2009 Educators Program},
articleno = {2},
numpages = {6},
keywords = {animation, blender, computer science},
location = {Yokohama, Japan},
series = {SIGGRAPH ASIA '09}
}

@article{10.5555/1629036.1629040,
author = {Cliburn, Daniel},
title = {Teaching Virtual Reality to undergraduates},
year = {2009},
issue_date = {December 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {2},
issn = {1937-4771},
abstract = {Virtual Reality (VR) is a contemporary area of research with many exciting applications in simulation and training. The National Academy of Engineering recently named "Enhance Virtual Reality" as one of fourteen "Grand Challenges for Engineering", and many students find the subject to be exciting and engaging. However, VR receives little or no attention in most undergraduate Computer Science programs. This tutorial will have two objectives. The first will be to introduce attendees to the field of VR through several freely available online lesson modules, and attendees will be shown how the modules are actually being integrated into a variety of existing courses. The second tutorial objective will be to describe two immersive stereo display systems: a Head-Mounted Display (HMD) unit and a stereo display wall.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {30},
numpages = {1}
}

@inproceedings{10.1145/1268784.1268798,
author = {Sheehan, Robert J.},
title = {Teaching operating systems with ruby},
year = {2007},
isbn = {9781595936103},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1268784.1268798},
doi = {10.1145/1268784.1268798},
abstract = {Dynamic languages have regained enormous popularity in recent years. One of the principal dynamic programming languages, Ruby, has been used as the language for assignment work and the presentation of concepts in an introductory Operating Systems course. This was a strange choice for a systems course but there were several good reasons for the choice including the ease with which Ruby provides access to Unix commands and system calls. After some initial problems, the change has been very successful and demonstrates that even in the core courses of a Computer Science curriculum dynamic programming languages have benefits.},
booktitle = {Proceedings of the 12th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {38–42},
numpages = {5},
keywords = {operating systems education, ruby, scripting language},
location = {<conf-loc>, <city>Dundee</city>, <country>Scotland</country>, </conf-loc>},
series = {ITiCSE '07}
}

@inproceedings{10.1145/1168054.1168084,
author = {Schmolitzky, Axel},
title = {Teaching inheritance concepts with Java},
year = {2006},
isbn = {3939352055},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1168054.1168084},
doi = {10.1145/1168054.1168084},
abstract = {In teaching object-oriented programming, teaching inheritance is the most challenging and at the same time the most crucial aspect. The interplay of dynamic binding, late-bound self-reference, subtype polymorphism and method redefinition is so complex that it is difficult for instructors to design a gentle, step-by-step introduction. Should polymorphism be introduced first? Or is code reuse better suited as an introductory motivation? The Java Programming Language adds a further aspect to this discussion: when should named interfaces be introduced? Most textbooks follow the historical development of the mechanism and cover interfaces after the discussion of abstract classes. In this paper a different approach is described: interfaces are introduced long before and in isolation from inheritance; and the discussion of inheritance is explicitly split into its two major constituents, namely subtype polymorphism and implementation inheritance. We applied this novel approach in the two introductory courses on software development (SD1 and SD2) in the newly created Bachelor of Science in Informatics curriculum at the University of Hamburg, Germany. This experience report reflects on the design rationale behind this new approach.},
booktitle = {Proceedings of the 4th International Symposium on Principles and Practice of Programming in Java},
pages = {203–207},
numpages = {5},
keywords = {pedagogy},
location = {Mannheim, Germany},
series = {PPPJ '06}
}

@inproceedings{10.5555/1041530.1041546,
author = {Frank, Charles E. and Naugler, David R.},
title = {Tutorial: teaching user interface design},
year = {2004},
publisher = {Mid-South College Computing Conference},
address = {Little Rock, Arkansas, USA},
abstract = {To the computer user the interface is the program. If software has a confusing or visually unappealing interface it does not matter that it does wonderful things with efficient algorithms; the user will have a low opinion of it.},
booktitle = {Proceedings of the 2nd Annual Conference on Mid-South College Computing},
pages = {107–108},
numpages = {2},
location = {<conf-loc>, <city>Little Rock</city>, <state>Arkansas</state>, <country>USA</country>, </conf-loc>},
series = {MSCCC '04}
}

@inproceedings{10.1145/268084.268167,
author = {McDonald, Chris and Kazemi, Kamran},
title = {Improving the PVM teaching environment},
year = {1997},
isbn = {0897918894},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/268084.268167},
doi = {10.1145/268084.268167},
abstract = {The parallel programming community has long recognized the need for a simple programming environment offering interprocess communication between heterogeneous systems. As the Parallel Virtual Machine environment, PVM, has emerged to meet this goal, an increasing number of educational institutions are choosing PVM to support their teaching of parallel and distributed computing using networks of workstations. However, it is often the nature of PVM's design and implementation that can severely limit its success in a teaching environment. This paper first motivates and then describes improvements to the PVM environment which increase both robustness and efficiency in an educational setting.},
booktitle = {Proceedings of the Twenty-Eighth SIGCSE Technical Symposium on Computer Science Education},
pages = {219–223},
numpages = {5},
location = {San Jose, California, USA},
series = {SIGCSE '97}
}

@inproceedings{10.1145/169070.169102,
author = {Erickson, Carl},
title = {USENET as a teaching tool},
year = {1993},
isbn = {0897915658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/169070.169102},
doi = {10.1145/169070.169102},
booktitle = {Proceedings of the Twenty-Fourth SIGCSE Technical Symposium on Computer Science Education},
pages = {43–47},
numpages = {5},
location = {Indianapolis, Indiana, USA},
series = {SIGCSE '93}
}

@inproceedings{10.5555/114836.114865,
author = {Goldman, Sally A. and Kearns, Michael J.},
title = {On the complexity of teaching},
year = {1991},
isbn = {1558602135},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA},
booktitle = {Proceedings of the Fourth Annual Workshop on Computational Learning Theory},
pages = {303–314},
numpages = {12},
location = {Santa Cruz, California, USA},
series = {COLT '91}
}

@article{10.1145/15075.15080,
author = {Lees, Brian},
title = {Teaching microcomputer concepts through modelling},
year = {1986},
issue_date = {June 1986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/15075.15080},
doi = {10.1145/15075.15080},
journal = {SIGCSE Bull.},
month = {jun},
pages = {19–24},
numpages = {6}
}

@inproceedings{10.1145/5600.5902,
author = {Rager, John E.},
title = {Graphics packages for teaching graphics},
year = {1986},
isbn = {0897911784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/5600.5902},
doi = {10.1145/5600.5902},
abstract = {The design and implementation of graphics packages has been widely studied and discussed. The special needs of the teaching environment change the requirements of a package in some interesting ways because the details usually hidden from the user are of interest to the students. Here the design of such a package is considered. In order to identify the needs of the package, the structures of CORE (which is used throughout as an example of an applications-oriented package) are compared with a list of topics covered in an elementary graphics course. Some of the nonessential flexibility of CORE can be thrown away, and procedures needed to handle hierarchy and manipulation of the structured display file can be added. A package (the Northwestern University Simple Graphics Package) resulting from this analysis is described. Specific suggestions are made for pruning CORE to a manageable size. A natural way of accessing the structured display files and a system of symbols are included. The resulting package is small, manageable and useful.During the summer of 1983 I was given the opportunity to teach the first computer graphics course to be offered at the University of Chicago. The only available software was PLOT-10 [11], in a version designed to interface to FORTRAN on the DEC-20. The only prerequisite for the course was an elementary programming course which taught PASCAL, hence the students could not be expected to program in FORTRAN. Some experimentation with the versions of FORTRAN, PASCAL, and PLOT-10 on the DEC-20 revealed that interfacing the PLOT-10 routines to PASCAL wasn't going to work. A second, more important, reason for rejecting this option was the lack of segmentation capability in PLOT-10. I was planning to use Principles of Interactive Computer Graphics by Foley and Van Dam [3] and I wanted the students to be able to program in the spirit of the ACM CORE [4] inspired Simple Graphics Package (SGP) used in the text. My solution was to implement this SGP in PASCAL on the DEC-20, with drivers for two of the terminal types available on campus. During the quarter I taught the course I realized that this was not an adequate solution. There were some things I just couldn't demonstrate for the students and some things that I couldn't put into the programming assignments.For example, a fair amount of time was spent discussing package implementation: clipping algorithms, coordinate transformations, the segment data (visibility, detectability), etc. It was impossible, in the UC SGP, to look at this information as an image was constructed and modified. It was equally impossible for the students to manipulate these constructs directly.I would have had similar problems with a full implementation of CORE and with any other package with which I am familiar. Basically, the packages designed for graphics applications hide the details of the implementation and present a high level view to the user. This is great when implementing an interactive graphics program but it is not so great when trying to teach how the packages work.This should not be taken as a blanket condemnation of the use of packages for computer graphics classes, nor as a suggestion that students should always be reduced to programming at the display processor level. There are good reasons for using packages, or at least package-like systems, in an elementary graphics course. Packages provide the user-friendly environment needed to start the students in computer graphics, and to allow the students to become familiar with graphics software as it exists in the real world. The students will learn the style and format of CORE, GKS [6, 12, 13, 14], PLOT-10, or whatever package is chosen. Last, but perhaps most important to a busy instructor (and is there any other kind?), using a package means writing a minimum of new software.Learning from the experience of writing and using the UC SGP, I modified the package to include some extra capabilities. At this time the package was also moved to a VAX 11/780 at Northwestern University. The design described in this paper includes slightly more than either of these packages. (Throughout the discussion the first package is called UC SGP and the second NU SGP.)The design and implementation of a graphics teaching system depends on the available tools. If there is already a sophisticated package, a little bit of extra software may suffice. I'm going to consider the situation in which a new package will be written expressly for use in teaching. Similar considerations are valid when extending an extant package. There are certain objectives to keep in mind. The package should be small so that it runs efficiently and so that it can be implemented with a reasonable effort. The features which will make it a good learning tool should be emphasized and those which further flexibility but not insight can be de-emphasized. The system should be designed to work with dumb terminals, if those are the ones likely to be available in sufficient quantity for student use. (If there are enough smart terminals the package can do a little more and may be easier to produce.) When designing a small system like this one, it is a good idea to keep the available hardware in mind, retaining sufficient flexibility to include other hardware later. (In the real world the flexibility of the package depends somewhat on the shortness of the time available for the implementation.)I'd like to start with the ACM CORE, a well documented and well known system, and sculpt it to the needs of teaching carving away some excess and adding some new capabilities.},
booktitle = {Proceedings of the Seventeenth SIGCSE Technical Symposium on Computer Science Education},
pages = {225–231},
numpages = {7},
location = {Cincinnati, Ohio, USA},
series = {SIGCSE '86}
}

@article{10.1145/964167.964174,
author = {Ross, Rockford J.},
title = {Teaching programming to the deaf},
year = {1982},
issue_date = {Autumn 1982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
number = {30},
issn = {0163-5727},
url = {https://doi.org/10.1145/964167.964174},
doi = {10.1145/964167.964174},
abstract = {For certain groups of handicapped persons the field of computer science offers challenging, high-paying careers which are more accessible than other careers. Programming can be done at cathode ray tube terminals which provide a dynamic, visual environment needed by the hearing impaired, and which can be placed in locations convenient to those with mobility impairments. Unfortunately, most colleges and universities are not prepared to teach such students, particularly the deaf. In this paper an ongoing research project to design an online, dynamic, student-controlled library of programming language examples for use in teaching programming languages is described. This system promises to be useful in meeting the needs of handicapped students.},
journal = {SIGCAPH Comput. Phys. Handicap.},
month = {sep},
pages = {18–26},
numpages = {9}
}

@inproceedings{10.1145/800066.801386,
author = {Frank, Ronald and Waren, Allan and Bialac, Richard},
title = {Teaching new technologies (Panel Discussion)},
year = {1982},
isbn = {0897910672},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800066.801386},
doi = {10.1145/800066.801386},
abstract = {One of the more difficult tasks in this era of adopting curriculums, is to keep a program current with technology. There is a growing number of new hardware, software, and concepts that emerge each year. The speakers will share their experiences in bringing to the classroom the new technology that the students will face or should be facing as professionals in the marketplace. The discussions will focus on implementation of courses in Computer Graphics, Decision Support Systems, and Artificial Intelligence. These courses have been taught at all levels (undergraduate, graduate, Executive MBA) in Computer Science and Business environments.The speakers will also hold a discussion on questions from the audience.},
booktitle = {Proceedings of the Thirteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {268},
location = {Indianapolis, Indiana, USA},
series = {SIGCSE '82}
}

@inproceedings{10.1145/800037.800996,
author = {Smith, Jeffrey W.},
title = {A method for teaching programming},
year = {1981},
isbn = {0897910362},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800037.800996},
doi = {10.1145/800037.800996},
abstract = {A classroom method for programming instruction which emphasizes the evolution of correct algorithms by try, test, repeat is presented. The method is simple, reasonably obvious, and serves to illustrate many of the concepts of introductory programming. No special equipment or background is needed.The objective of the introductory programming course is the introduction of the concepts and techniques of programming to the uninitiated.As the presentation will attempt to make clear, this method relies on demonstration, teaching-by-example, intuition, and reasonableness. The goal is the presentation of algorithms and the associated techniques and concepts as they influence and abet the design processes so vital to programming.},
booktitle = {Proceedings of the Twelfth SIGCSE Technical Symposium on Computer Science Education},
pages = {252–255},
numpages = {4},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '81}
}

@inproceedings{10.1145/800250.807484,
author = {Hankley, William and Wallentine, Virgil},
title = {Color graphics for remote teaching},
year = {1980},
isbn = {0897910214},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800250.807484},
doi = {10.1145/800250.807484},
abstract = {A system for preparation and manipulation of color graphics video frames is described. The system commands are designed for use by a class instructor (who is not a computer science person) in preparation and delivery of lectures to a remote site. The system can provide the types of images, overlays, and coloring that could be drawn using transparency sheets and color pens, or that could prepared as 35 mm technical slides (not photographs, but text and diagrams). The hardware consists of standardly available input, display, and output components. Several hardware alternatives are noted so that cost and capability tradeoffs can be compared. Communication between the instructor's site and the remote class site uses standard telephone lines for transmission of participants' voices and for digital graphics commands and compressed image data. The system software is yet in experimental form. It is in BASIC, but in modular form. While none of the individual components or graphics concepts in this system is in itself dramatically new, the integrated system demonstrates an important advancement in state-of-the-art for remote instruction.},
booktitle = {Proceedings of the 7th Annual Conference on Computer Graphics and Interactive Techniques},
pages = {147–153},
numpages = {7},
keywords = {Color graphics, Teaching support},
location = {Seattle, Washington, USA},
series = {SIGGRAPH '80}
}

@article{10.1145/1316855.1316858,
author = {Daykin, P. N.},
title = {Teaching recursive programming using BASIC},
year = {1974},
issue_date = {January 1974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {1},
issn = {0163-5735},
url = {https://doi.org/10.1145/1316855.1316858},
doi = {10.1145/1316855.1316858},
abstract = {The value of a recursive programming capability in a high level programming language is now generally recognized. The teaching of recursive programming, however, is often postponed to a second-semester college course in computing science, as if the topic belonged to an advanced level, though it has been shown (1, 2) that recursion can be grasped by students of mathematics at the secondary school level or earlier. One unfortunate result of this postponement of recursion in computing science teaching is that students who take one semester only carry away with them the false notion that computers are limited intrinsically to understanding iterative processes.},
journal = {SIGCUE Outlook},
month = {jan},
pages = {11–13},
numpages = {3}
}

@inproceedings{10.1145/2530544.2530547,
author = {Bauer, Kerstin and Schneider, Klaus},
title = {Teaching cyber-physical systems: a programming approach},
year = {2012},
isbn = {9781450317658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2530544.2530547},
doi = {10.1145/2530544.2530547},
abstract = {One major problem for the design of cyber-physical systems is the understanding of problems that can arise from the interaction of discrete and continuous behaviors, i.e., the behaviors of hybrid systems whose discrete states enable attached differential equations. Tools like Simulink, Labview, Scicos, and Dymola are powerful choices for the simulation of such systems. However, the modeling capabilities of these tools are limited to a composition of given blackbox modules, so that they miss the notion of typical programs. To make use of algorithmic models, we recently proposed an extension of the synchronous programming language Quartz to model, simulate, and verify cyber-physical systems. We developed an operational semantics of this language that formally specifies a simulator, and we also defined a translation to hybrid state transition systems for the formal verification of these systems.In this paper, we describe how our Quartz language and the related Averest toolset can be used for teaching cyber-physical systems. We present the concept of an introductory course for modeling, simulation, and verification of these systems in a Master program in Computer Science. The goal of the lecture is to provide a broad overview to introduce the students to the main research areas in this field. Besides a theoretical foundation, we emphasize the combination of lecture courses with practical exercises using our Averest tools for simulation and verification. This way, we show our students several effects that may occur in the design of cyber-physical systems like zeno behaviors, urgent transitions, real-time requirements, etc.},
booktitle = {Proceedings of the Workshop on Embedded and Cyber-Physical Systems Education},
articleno = {3},
numpages = {8},
keywords = {cyber-physical systems, modeling},
location = {Tampere, Finland},
series = {WESE '12}
}

@article{10.1145/1709424.1709440,
author = {Mahoney, William and Pedersen, Jay},
title = {Teaching compiler code generation: simpler is better},
year = {2010},
issue_date = {December 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {41},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/1709424.1709440},
doi = {10.1145/1709424.1709440},
abstract = {The code generation portion of a compiler is still typically constructed by hand in an ad-hoc manner. When teaching a compiler construction class, the code generation phase can occupy a large portion of a one semester project. To address this, we have created an extremely small instruction set simulator which is easily learned in a short period of time. We've termed this a RRISC (Really Reduced Instruction Set Computer) and have been using it successfully for several years.},
journal = {SIGCSE Bull.},
month = {jan},
pages = {30–34},
numpages = {5},
keywords = {code generation, instruction set, simulation}
}

@inproceedings{10.1145/3465631.3465953,
author = {Zhang, Yuping and Liu, Wenbin},
title = {University Teachers Improve Teaching By Doing Scientific Research},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465953},
doi = {10.1145/3465631.3465953},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {281},
numpages = {4},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/949344.949431,
author = {Edwards, Stephen H.},
title = {Teaching software testing: automatic grading meets test-first coding},
year = {2003},
isbn = {1581137516},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/949344.949431},
doi = {10.1145/949344.949431},
abstract = {A new approach to teaching software testing is proposed: students use test-driven development on programming assignments, and an automated grading tool assesses their testing performance and provides feedback. The basics of the approach, screenshots of the sytem, and a discussion of industrial tool use for grading Java programs are discussed.},
booktitle = {Companion of the 18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
pages = {318–319},
numpages = {2},
keywords = {CS1, Java, extreme programming, laboratory-based teaching, test-driven development},
location = {Anaheim, CA, USA},
series = {OOPSLA '03}
}

@inproceedings{10.1145/800140.804638,
author = {Hankley, William and Lewis, Ted and Meyer, Stuart and Clark, Ron and Wallentine, Virg},
title = {Remote teaching (Panel Discussion): Technology and experience},
year = {1980},
isbn = {0897910133},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800140.804638},
doi = {10.1145/800140.804638},
abstract = {The demand for computer science education on the college campus is rapidly increasing. This is due to the ever expanding market for computer expertise in industry, government, and academia. The growth in the need for off-campus computer science instruction is also phenomenal. Professionals in areas other than computer science—engineering, business, etc.—need to acquire computing skills. Computer scientists need to continually keep pace with the rapidly evolving computer technology. This training must be available at sites remote from the college campus. In the era of overall decreasing college enrollments, computer science educators are being requested to service this off-campus market.Traditional forms of providing education to this market include faculty or student travel, remote campuses, live video, and audio teleconferencing systems. Each has either high cost, an ineffectiveness, and/or inconvenience factors. It is the purpose of this panel to explore the electronic remote education. The particular systems to be discussed are the “electronic blackboard,” controlled scan TV, computer teleconferencing and computer-based color-graphics technologies. The first two systems are in use and the latter two are proposed. Ted Lewis will describe experience with the electronic blackboard and Stuart Meyer will describe the use of the controlled scan TV. Ron Clarke and William Hankley will describe the proposed usage of the computer teleconferencing and color graphics, respectively, in the remote classroom. Each of these panelists will briefly describe the particular system and address the areas of teaching technique and effectiveness within the specific technology.Following the formal presentations, there will be an open discussion of the issues presented. For those people who cannot attend the panel discussion, a very short bibliography on electronic education and teleconferencing is included.},
booktitle = {Proceedings of the Eleventh SIGCSE Technical Symposium on Computer Science Education},
pages = {192},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '80}
}

@article{10.1145/243350.243359,
author = {Fellers, Jack W.},
title = {Teaching teamwork: exploring the use of cooperative learning teams in information systems education},
year = {1996},
issue_date = {Spring 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {2},
issn = {0095-0033},
url = {https://doi.org/10.1145/243350.243359},
doi = {10.1145/243350.243359},
abstract = {The business world continues to change at a tremendous rate. We in the information systems field contribute to this rate of change and at the same time try to keep up with it. While the content in our field changes constantly, the way in which we attempt to educate our students (pedagogy) has not changed for some time. One way to change how we teach our students is through the use of alternative pedagogical models, such as the cooperative learning model. Cooperative learning is defined as "… the instructional use of small groups so that students work together to maximize their own and each other's learning" (Johnson, Johnson, and Smith 1991a; p. 3). This paper presents an overview of the cooperative learning model, two examples of the model in use, and an exploratory assessment of the model. Additionally, limitations of this study, and recommendations for future research and for practice are provided.},
journal = {SIGMIS Database},
month = {apr},
pages = {44–60},
numpages = {17},
keywords = {IS education, cooperative learning, teamwork}
}

@inproceedings{10.5555/3398761.3399111,
author = {Silva, Felipe Leno Da and Warnell, Garrett and Costa, Anna Helena Reali and Stone, Peter},
title = {Agents Teaching Agents: A Survey on Inter-agent Transfer Learning},
year = {2020},
isbn = {9781450375184},
publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
address = {Richland, SC},
abstract = {While reinforcement learning (RL) has helped artificial agents solve challenging tasks, high sample complexity is still a major concern. Inter-agent teaching -- endowing agents with the ability to respond to instructions from others -- has been responsible for many developments towards scaling up RL. RL agents that can leverage instructions can learn tasks significantly faster than agents that cannot take advantage of such instruction. That said, the inter-agent teaching paradigm presents many new challenges due to, among other factors, differences between the agents involved in the teaching interaction. This paper is a summary of our JAAMAS article, where we propose two frameworks that provide a comprehensive view of the challenges associated with inter-agent teaching. We highlight state-of-the-art solutions, open problems, prospective applications, and argue that new research in this area should be developed in the context of the proposed frameworks.},
booktitle = {Proceedings of the 19th International Conference on Autonomous Agents and MultiAgent Systems},
pages = {2165–2167},
numpages = {3},
keywords = {multiagent learning, reinforcement learning, transfer learning},
location = {Auckland, New Zealand},
series = {AAMAS '20}
}

@inproceedings{10.1145/2462476.2483800,
author = {Ridgeway, Jennifer and Walters, Robert and Pau, Reena},
title = {Diversifying computing teaching: building an online hub to promote inclusivity},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2483800},
doi = {10.1145/2462476.2483800},
abstract = {It is an ongoing industrial concern that there is an under-representation of women in the field of Computer Science. The "shrinking pipeline" [1] illustrates that this problem occurs at every stage of the educational process. The recently launched UK ICT curriculum will give students a better understanding of Computer Science, and as such they will need accurate information surrounding the subject. Teachers will also need assistance with the change in order to support gender friendly teaching.This poster will give an overview of the resources that teachers require, based on a combination of a literature review and the results of interviews and surveys conducted during this research. These resources will be made available online with an aim to assist teachers with the curriculum changes and also to increase the number of female students enrolling on Computational degree courses.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {332},
numpages = {1},
keywords = {gender},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@inproceedings{10.5555/2888619.2889096,
author = {Perera, Terrence and Rupasinghe, Thashika},
title = {Teaching supply chain simulation: from beginners to professionals},
year = {2015},
isbn = {9781467397414},
publisher = {IEEE Press},
abstract = {Both in academia and industry, supply chain simulation is a relatively mature subject. Academic researchers have produced supply chain modelling/simulation frameworks and have used simulation to teach supply chain dynamics. A review of industrial applications however points to the heavy use of consultants and/or simulation software vendors. The shortage of in-house supply chain simulation skills/practitioners appears to be hampering the wider use of simulation. Although many universities in the UK offer postgraduate programs in Supply Chain Management a very few provide opportunities to learn and experience hands-on simulation. This paper presents how a commercial simulation software that understands supply chain language was used in various settings to develop simulation skills and teach supply chain dynamics. This paper will also outline how an integrated environment involving simulation software and an industry standard supply chain management framework can be used to develop the simulation skills and competencies of supply chain professionals.},
booktitle = {Proceedings of the 2015 Winter Simulation Conference},
pages = {3548–3556},
numpages = {9},
location = {Huntington Beach, California},
series = {WSC '15}
}

@article{10.1145/1316850.1316851,
author = {Bork, Alfred M.},
title = {The computer in teaching: ten widely believed myths},
year = {1973},
issue_date = {Octobr 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {4},
issn = {0163-5735},
url = {https://doi.org/10.1145/1316850.1316851},
doi = {10.1145/1316850.1316851},
abstract = {The following remarks were made by the author at the SIGUCC meeting which followed immediately upon the Fourth Conference on Computers in Undergraduate Curricula, held in Claremont in June.},
journal = {SIGCUE Outlook},
month = {oct},
pages = {2–5},
numpages = {4}
}

@inproceedings{10.1145/1734263.1734321,
author = {Osborne, R. Brook and Thomas, Antony J. and Forbes, Jeffrey R.N.},
title = {Teaching with robots: a service-learning approach to mentor training},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734321},
doi = {10.1145/1734263.1734321},
abstract = {This paper describes a program in which undergraduates mentor teams of local middle and high school students on robotics projects. These teams learn and apply the scientific, mathematical, and computing fundamentals behind the construction of robots and the design of control algorithms. The mentors play a crucial role in the effectiveness of the program. Mentor training has evolved over the five-year life of the program from ad-hoc preparation to a service-learning course where students learn both the technical skills required to design, construct, and test, mobile robots and the pedagogical techniques necessary to mentor middle and high school students. We provide an overview of the program and some evaluation results.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {172–176},
numpages = {5},
keywords = {outreach, robotics, service-learning},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/1370868.1370881,
author = {Babka, Vlastimil and Bulej, Lubomir and Decky, Martin and Holub, Viliam and Tuma, Petr},
title = {Teaching operating systems: student assignments and the software engineering perspective},
year = {2008},
isbn = {9781605580760},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1370868.1370881},
doi = {10.1145/1370868.1370881},
abstract = {This paper is an experience report outlining a transformation of an operating systems course in a systems oriented master study program. We present the initial and current stages of the transformation and summarize the lessons learned throughout the process. To illustrate the effects of the transformation, we provide feedback gathered from the students who have completed the course during the transformation. We put emphasis on general software engineering experience, which may prove useful in balancing the many issues related to most courses with programming assignments.},
booktitle = {Proceedings of the 2008 International Workshop on Software Engineering in East and South Europe},
pages = {71–78},
numpages = {8},
keywords = {operating systems, student assignments, teaching},
location = {Leipzig, Germany},
series = {SEESE '08}
}

@inproceedings{10.1145/2536536.2536615,
author = {Payo, Adriana Recam\'{a}n and Rodr\'{\i}guez, Ana Iglesias and Miguela\~{n}ez, Susana Olmos and Abad, Fernando Mart\'{\i}nez},
title = {Virtual teaching tools: the moodle (studium) contribution to the evaluation activity},
year = {2013},
isbn = {9781450323451},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2536536.2536615},
doi = {10.1145/2536536.2536615},
abstract = {The aim of this study was developed under the Innovation Project "Evaluation and monitoring of the use of virtual teaching tools in a teaching b-learning stage". Its main purpose was, above all, to evaluate the use of Studium by teachers in the Department of Didactics, Organization and Research Methods at Salamanca University. Studium is the Moodle platform (http://moodle.usal.es), supported by the University of Salamanca (USAL). We have pretended to take into account teachers' point of view to subsequently propose improvement actions.The results showed how the subjects related to Information Technology and Communication (ICT) have integrated more digital content as well as activities such as surveys and wikis. In the same group, self-assessment, evaluation of work and tests punctuate significantly higher. However, there is no perceptible difference in the interaction among students themselves and in students with teachers groups.},
booktitle = {Proceedings of the First International Conference on Technological Ecosystem for Enhancing Multiculturality},
pages = {515–519},
numpages = {5},
keywords = {assessment, b-learning, digital resources, evaluation, moodle, online education tools, studium, teaching},
location = {Salamanca, Spain},
series = {TEEM '13}
}

@inproceedings{10.1145/611892.611901,
author = {Barnes, Julie and Bryant, Rob and McCracken, Daniel D. and Reiser, Susan},
title = {Teaching human-computer interaction: reports from the trenches},
year = {2003},
isbn = {158113648X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/611892.611901},
doi = {10.1145/611892.611901},
abstract = {Most schools introduce HCI into the CS curriculum through a bootstrapping process. There are many excellent HCI programs at universities around the world, and some new faculty with HCI graduate degrees are starting to appear. But the extreme shortage of faculty forces most schools now starting to teach HCI to use the time-honored method of learning a subject by teaching it.Consensus: Insert HCI into any opening you can find. Learn more about the subject yourself. Let colleagues get comfortable with the idea. A required course in HCI may be some years off, or maybe you will never do exactly that, but you will have laid the foundation for getting HCI into your curriculum.},
booktitle = {Proceedings of the 34th SIGCSE Technical Symposium on Computer Science Education},
pages = {125–126},
numpages = {2},
keywords = {HCI, human-computer interface, usability, web design},
location = {Reno, Navada, USA},
series = {SIGCSE '03}
}

@article{10.1145/306286.306306,
author = {Petre, Marian},
title = {Assessing innovation in teaching: an example — part 2},
year = {1998},
issue_date = {Dec. 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/306286.306306},
doi = {10.1145/306286.306306},
journal = {SIGCSE Bull.},
month = {dec},
pages = {28–31},
numpages = {4}
}

@inproceedings{10.1145/3017680.3017798,
author = {Leyzberg, Dan and Moretti, Christopher},
title = {Teaching CS to CS Teachers: Addressing the Need for Advanced Content in K-12 Professional Development},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017798},
doi = {10.1145/3017680.3017798},
abstract = {Two-thirds of all computer science teachers in the United States do not have a degree in computer science. As demand for K-12 computer science education continues to grow, and as industry continues to lure computer science graduates away from careers in education, school administrators are increasingly forced to ask teachers with little formal training in computer science to teach computer science courses. This is such a common phenomenon that there are now many competing summer professional development programs aimed at training teachers of other subjects to teach a first course in computer science. However, once these teachers become comfortable teaching the introductory material, there is little support available for them to gain more content knowledge to be able to support their more advanced students or design additional computer science courses. In this paper, we describe our approach to providing more advanced computer science content knowledge to computer science teachers in a week-long summer professional development program.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {369–374},
numpages = {6},
keywords = {K-12, professional development},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@inproceedings{10.1145/3606094.3606110,
author = {Meng, Zhaoyi and Dai, Ming},
title = {IOT Cloud Teaching Platform Design},
year = {2023},
isbn = {9798400700422},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3606094.3606110},
doi = {10.1145/3606094.3606110},
abstract = {The Internet of Things is the intersection and integration of various professional technologies. In order to better understand and learn the related technologies of the Internet of Things, this paper takes the two-way flow of data as the starting point to design a cloud teaching platform for the Internet of Things, from how to obtain data and upload it to the human-machine The interactive control data is issued, and the existing teaching content is integrated with the experimental links. The edge computing, IOT gateway, data storage, WEB front-end development and other links mentioned in the platform are drawn from the applied electronic technology of the college and the application technology of the Internet of Things. , network engineering technology and software technology and other related courses, and the realization process of platform functions, can enable students to deeply understand the underlying design of the Internet of Things and the knowledge structure required to realize the two-way flow of data.},
booktitle = {Proceedings of the 2023 8th International Conference on Distance Education and Learning},
pages = {66–71},
numpages = {6},
location = {<conf-loc>, <city>Beijing</city>, <country>China</country>, </conf-loc>},
series = {ICDEL '23}
}

@inproceedings{10.1145/3531072.3535320,
author = {Alawini, Abdussalam and Rao, Peilin and Zhou, Leyao and Kang, Lujia and Ho, Ping-Che},
title = {Teaching Data Models with TriQL},
year = {2022},
isbn = {9781450393508},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3531072.3535320},
doi = {10.1145/3531072.3535320},
abstract = {With the abundance of database systems implementing various data models, such as the relational, graph, and document-oriented models, learners often find it challenging to understand the trade-offs between different data models and to decide which database system they should learn and why. Additionally, most introductory database courses focus on the predominant relational model for teaching database design and programming, and do not discuss other emerging databases. While the relational database systems still play a vital role in modern data systems, especially with the emergence of NewSQL, it is crucial to introduce students to databases implementing other data models. In this paper, we introduce TriQL, a system for helping novices learn the schema and query languages of three major database systems, including MySQL (a relational database), Neo4J (a graph database), and MongoDB (a document-oriented database). TriQL offers learners a graphical user interface to design and execute a query against a generic database schema without requiring them to have any database programming experience. TriQL follows an interactive approach to learning new database models, supporting a dynamic and agile learning environment that can be easily integrated into database labs and homework assignments.},
booktitle = {1st International Workshop on Data Systems Education},
pages = {16–21},
numpages = {6},
keywords = {MongoDB, Neo4J, SQL, database education},
location = {Philadelphia, PA, USA},
series = {DataEd '22}
}

@inproceedings{10.1145/3442481.3442510,
author = {Motara, Yusuf Moosa},
title = {Obstacles when teaching functional programming},
year = {2021},
isbn = {9781450388726},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3442481.3442510},
doi = {10.1145/3442481.3442510},
abstract = {This work describes a course in typed functional programming, the obstacles that are often encountered during the teaching of this course, and solutions which have been devised for those obstacles.},
booktitle = {Proceedings of the 9th Computer Science Education Research Conference},
articleno = {14},
numpages = {2},
keywords = {computer science education, curriculum development, functional programming},
location = {Virtual Event, Netherlands},
series = {CSERC '20}
}

@inproceedings{10.1145/3270112.3270138,
author = {Stevens, Perdita},
title = {Teaching and learning about abstraction},
year = {2018},
isbn = {9781450359658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3270112.3270138},
doi = {10.1145/3270112.3270138},
abstract = {It is a commonplace in computer science education that abstraction is a key concept. In model-driven development in particular, we all understand that the power of models comes from the fact that a model is an abstract representation of something important about a system. As a community, we are sometimes conflicted about whether the ability to think abstractly - to generate "good" abstractions, and/or to use abstractions effectively - is innate, or can be taught. To whatever extent it can be taught, how is this best done? I will review the state of the art concerning these matters, relating it to my experience in teaching modelling to university students, and to my brief trials of teaching it to ten-year-old school children.},
booktitle = {Proceedings of the 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings},
pages = {143},
numpages = {1},
location = {Copenhagen, Denmark},
series = {MODELS '18}
}

@inproceedings{10.1145/3058555.3058563,
author = {Gay, Greg and Djafarova, Naza and Zefi, Leonora},
title = {Teaching Accessibility to the Masses},
year = {2017},
isbn = {9781450349000},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3058555.3058563},
doi = {10.1145/3058555.3058563},
abstract = {Web developers are a key element in creating an accessible web, but few have received formal training on inclusive web design. In this paper, we discuss the challenges of teaching web accessibility online, and the process of creating a public Massive Open Online Course (MOOC) aimed at teaching web accessibility auditing practices to web developers. The outcomes from the Professional Web Accessibility Auditing Made Easy [10] course delivered to two cohorts is presented. The lessons learned from the experience are added to the discussion around the pedagogical culture and the need to better integrate accessibility education into computer science curriculum.},
booktitle = {Proceedings of the 14th International Web for All Conference},
articleno = {15},
numpages = {8},
keywords = {Accessibility training, MOOC, computer science, curriculum, pedagogical culture, retention, web accessibility, web development},
location = {Perth, Western Australia, Australia},
series = {W4A '17}
}

@inproceedings{10.1145/1962300.1962356,
author = {Gavrilova, Tatiana and Gorovoy, Vladimir and Bolotnikova, Ekaterina},
title = {Cognitive ergonomics of teaching ontologies},
year = {2010},
isbn = {9781605589466},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1962300.1962356},
doi = {10.1145/1962300.1962356},
abstract = {Motivation -- Evaluation of the visual design and cognitive ergonomics of teaching ontologies.Research approach -- The underlying research framework is pursuing one method, where clarity and harmony of teaching ontology are evaluated by assessing its structure with several quantitative metrics.Findings/Design -- The method represents an 8-step methodology where different parameters of an ontology are assessed. An application was developed that helps experts during the evaluation process by utilizing automatic metric values calculating.Research limitations/Implications -- Such an approach is feasible for ontologies that are used by people for education or knowledge sharing; it is not applicable for evaluating ontology performance in the software applications.Originality/Value -- This method will practically aid the process of knowledge structuring and ontology design.Take away message -- The main characteristic of "good" teaching ontology is its harmony.},
booktitle = {Proceedings of the 28th Annual European Conference on Cognitive Ergonomics},
pages = {271–278},
numpages = {8},
keywords = {knowledge engineering, ontology, ontology engineering, ontology evaluation, teaching ontology},
location = {Delft, Netherlands},
series = {ECCE '10}
}

@inproceedings{10.1145/1822090.1822140,
author = {Koppelman, Herman and van Dijk, Betsy},
title = {Teaching abstraction in introductory courses},
year = {2010},
isbn = {9781605588209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1822090.1822140},
doi = {10.1145/1822090.1822140},
abstract = {Abstraction is viewed as a key concept in computer science. It is not only an important concept but also one that is difficult to master. This paper focuses on the problems that novices experience when they first encounter this concept. Three assignments from introductory courses are analyzed, to understand why abstraction is difficult for novices. This analysis leads to a number of guidelines that can be used by instructors to support novices learning abstraction.},
booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
pages = {174–178},
numpages = {5},
keywords = {abstraction, abstraction level, computer science, pedagogy, recursion},
location = {Bilkent, Ankara, Turkey},
series = {ITiCSE '10}
}

@inproceedings{10.1145/1731740.1731827,
author = {Jab\l{}onowski, Janusz},
title = {Some remarks about OO teaching},
year = {2009},
isbn = {9781605589862},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1731740.1731827},
doi = {10.1145/1731740.1731827},
abstract = {This paper summarizes experiences gained with OO teaching for several years at the Warsaw University. We start with description of students being taught and the impact of their skills and motivation on the chosen teaching approach. Then we sketch the adopted teaching program. Finally we discuss how the teaching may be improved by using modern teaching tools like the Moodle system.},
booktitle = {Proceedings of the International Conference on Computer Systems and Technologies and Workshop for PhD Students in Computing},
articleno = {81},
numpages = {6},
keywords = {Moodle, object-oriented programming, programming languages, teaching of programming},
location = {Ruse, Bulgaria},
series = {CompSysTech '09}
}

@inproceedings{10.1145/3255318,
author = {Liu, Thomas},
title = {Session details: Teaching computer graphics},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255318},
doi = {10.1145/3255318},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

@article{10.1145/1064830.1064865,
author = {Landau, Susan},
title = {What lessons are we teaching?},
year = {2005},
issue_date = {June 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {48},
number = {6},
issn = {0001-0782},
url = {https://doi.org/10.1145/1064830.1064865},
doi = {10.1145/1064830.1064865},
journal = {Commun. ACM},
month = {jun},
pages = {144},
numpages = {1}
}

@inbook{10.5555/1074100.1074248,
author = {Zinn, Karl L.},
title = {Computer-assisted learning and teaching},
year = {2003},
isbn = {0470864125},
publisher = {John Wiley and Sons Ltd.},
address = {GBR},
abstract = {The impact of computers on teaching and learning activities at all levels of education is considerable, and the extent of use increases as computers become more convenient to use and less expensive to purchase and maintain. Every area of post-secondary education is affected. A medical student practices diagnosis and prescription on a wide variety of hypothetical patients simulated by computer programs. A group of engineering students uses computer assistance to solve problems in analysis and design that otherwise would not be approachable. A student aide develops a program to help a professor of chemistry evaluate the effectiveness of questions on a multiple-choice quiz.},
booktitle = {Encyclopedia of Computer Science},
pages = {328–336},
numpages = {9}
}

@inproceedings{10.1145/1242073.1242082,
author = {Tarbell, Roberta and Tan, LiQin},
title = {Animating art history for teaching},
year = {2002},
isbn = {1581135254},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1242073.1242082},
doi = {10.1145/1242073.1242082},
abstract = {"Animating Art History for Teaching" is a creative learning methodology that incorporates new perspectives for introductory art history courses through digital technology created by computer animation and art history professors and their students.},
booktitle = {ACM SIGGRAPH 2002 Conference Abstracts and Applications},
pages = {23–24},
numpages = {2},
keywords = {3D animation, art history, contrapposto, digital media, dome construction, holy trinity},
location = {San Antonio, Texas},
series = {SIGGRAPH '02}
}

@inproceedings{10.1145/544414.544473,
author = {Bergin, Joseph},
title = {Teaching on the wiki web},
year = {2002},
isbn = {1581134991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/544414.544473},
doi = {10.1145/544414.544473},
abstract = {A wiki is a completely interactive web site. Any page can be edited by any visitor. It is driven by a specialized web server or set of cgi scripts generating dynamic pages from the results of visitor edits. A visitor edits a page by grabbing the current content of a page in an ordinary web form and editing it arbitrarily and then saving it back. Users can also create new pages. Generally the name of a page is the name of a topic. Most wikis are text only. The syntax of a wiki is simpler than HTML, but HTML is recognized by some wikis. Some wikis are very easy to administer. There is no history or automatic backup, however. A wiki is totally "live.},
booktitle = {Proceedings of the 7th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {195},
numpages = {1},
location = {Aarhus, Denmark},
series = {ITiCSE '02}
}

@inproceedings{10.1145/268819.268825,
author = {Hitz, Martin and K\"{o}geler, Stefan},
title = {Teaching C++ on the WWW},
year = {1997},
isbn = {0897919238},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/268819.268825},
doi = {10.1145/268819.268825},
abstract = {We present the WWW-based interactive C++ Course developed at the University of Vienna to support introductory programming lectures of the first year of our Wirtschaftsinformatik ("business informatics") curriculum.The paper focuses on some major design concepts of the course as well as on the lessons learned during the project, such as the 3-layer structure of the course, ergonomic issues, an integrated programming interface with multi-user support, and maintainability issues.All of these may apply also to similar projects for different programming languages.},
booktitle = {Proceedings of the 2nd Conference on Integrating Technology into Computer Science Education},
pages = {11–13},
numpages = {3},
location = {Uppsala, Sweden},
series = {ITiCSE '97}
}

@article{10.1145/140660.140665,
author = {Shpigel, Boris Ya.},
title = {Center for teaching APL announced},
year = {1992},
issue_date = {June 1992},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {4},
issn = {0163-6006},
url = {https://doi.org/10.1145/140660.140665},
doi = {10.1145/140660.140665},
journal = {SIGAPL APL Quote Quad},
month = {jun},
pages = {4–5},
numpages = {2}
}

@inproceedings{10.5555/339771.339920,
author = {Agrawal, Jagdish C. and Manickam, Shan},
title = {Comprehensive approach to teaching Ada},
year = {1987},
publisher = {George Washington University},
address = {USA},
booktitle = {Proceedings of the Joint Ada Conference Fifth National Conference on Ada Technology and Fourth Washington Ada Symposium},
pages = {274–276},
numpages = {3},
location = {Arlington, Virginia, USA},
series = {WADAS '87}
}

@article{10.1145/382086.382627,
author = {Terry, P. D.},
title = {CLANG - a simple teaching language},
year = {1985},
issue_date = {Dec. 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {12},
issn = {0362-1340},
url = {https://doi.org/10.1145/382086.382627},
doi = {10.1145/382086.382627},
journal = {SIGPLAN Not.},
month = {dec},
pages = {54–63},
numpages = {10}
}

@article{10.1145/379486.379506,
author = {Stipak, Brian},
title = {Teaching public administators about computers},
year = {1985},
issue_date = {Jan 1 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14,15},
number = {1,2,3,4},
issn = {0095-2737},
url = {https://doi.org/10.1145/379486.379506},
doi = {10.1145/379486.379506},
abstract = {Public administration curricula typically offer only very limited exposure to computers, despite the growing importance of computers in public management. This paper examines an approach to teaching computer management in a masters of public administration program, and relates that approach to the broader question of what public administrators need to know about computers. The approach involves instruction in computer literacy, computer applications, and management of computer resources. Instruction in these three areas appears to increase the importance students place on managing computer resources and on understanding computer concepts, and to decrease the relative importance students place on managers' knowledge about specific computer applications. This shift in viewpoint appears appropriate based on interviews which suggest that practicing administrators place greater emphasis on understanding the broad issues of computer resource management, rather that on more specific computer knowledge or skill.},
journal = {SIGCAS Comput. Soc.},
month = {jan},
pages = {8–11},
numpages = {4}
}

@inproceedings{10.1145/3341042.3341044,
author = {Hai, Mo and Li, Haifeng},
title = {Research and Application of Project-based Teaching Reform Method Based on Flipped Classroom in the Teaching of Programming Design Courses},
year = {2019},
isbn = {9781450372220},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341042.3341044},
doi = {10.1145/3341042.3341044},
abstract = {Aiming at the problems existing in current teaching of program design courses in financial and economic universities: pay more attention to grammar than methods, pay more attention to standardization than exploring, pay more attention to teaching than learning, a project-based teaching reform method based on flipped classroom is put forward, which is used in the teaching of program design courses in financial and economic universities; then based on this method, the overall framework and teaching activities are designed, which is applied in the teaching practice of Java programming. By questionnaires, we investigate the students' learning effects and satisfaction after adopting this teaching reform method, and compare the teaching effect before and after adopting this method, then a further improvement of the teaching reform method according to the results of the questionnaires and comparisons is proposed.},
booktitle = {Proceedings of the 2019 International Conference on Modern Educational Technology},
pages = {49–53},
numpages = {5},
keywords = {flipped classroom, learning effect and satisfaction, program design course, project-based teaching reform method, questionnaires},
location = {Nanjing, China},
series = {ICMET 2019}
}

@article{10.5555/3144645.3144663,
author = {Hamdan, Basil},
title = {Teaching case study: introducing data analytics in an advanced cybersecurty course},
year = {2017},
issue_date = {December 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {2},
issn = {1937-4771},
abstract = {This paper provides a group project-based teaching case that introduces students in a cybersecurity course to data security analytics. The case involves analyzing Web server log data of a fictional and deliberately vulnerable e-commerce Web site. Students are given a large Web Server log file in the combined format and asked to (i) analyze the data for evidence of potential intrusions and incidents and (ii) produce a detailed report documenting the tools they utilized, the results of analyses, and how they arrived at these results. To help guide the analyses, the students are given a list of questions whose answers can be used to uncover cybersecurity intrusions and compromises. By using traditional SQL relational databases, NoSQL databases, specialized log parsers, and/or specialized Security Analytics tools, the students will be able to conduct in-depth analyses, slice-and-dice the data across multiple dimensions/criteria, and present the results in a multitude of formats including tables, charts, time series, and/or dashboards.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {113–120},
numpages = {8},
keywords = {HIVE, analytics, big data, cybersecurity, noSQL, splunk}
}

@inproceedings{10.5555/1082060.1082093,
author = {Reading, J. and Inniss, G.},
title = {Teaching for tomorrow: integrating learning technologies into early years professional development},
year = {2003},
isbn = {1920682163},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
booktitle = {Proceedings of the International Federation for Information Processing Working Group 3.5 Open Conference on Young Children and Learning Technologies - Volume 34},
pages = {147},
numpages = {1},
location = {<conf-loc>, <city>Sydney</city>, <country>Australia</country>, </conf-loc>},
series = {CRPIT '03}
}

@inproceedings{10.1145/3545922.3545932,
author = {Tsai, Chia-Wen and Feng, Chung-Shun and Hsiao, Ming-Yu and Chen, Jan-Nan and Lin, Hsuan},
title = {User Experience Design Evaluation on Remote Virtual Teaching Model and In-person Teaching Model - An Example of Design Education},
year = {2022},
isbn = {9781450396660},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545922.3545932},
doi = {10.1145/3545922.3545932},
abstract = {Under the panic caused by COVID-19 and the threat of rapid spread of the virus, human lifestyles and educational patterns are changed. Educational institutions have been greatly impacted due to COVID-19, with many students being unable to enter schools or dropping out, and many faculty members losing their jobs. This research carried out “User Experience Design Evaluation on Remote Virtual Teaching Model and In-person Teaching Model” in the major of Art and Design. Based on the interface operation of the video conference platform, students’ participation, image recognition, and other factors, this research adopted the user experience and usability principal theory of Norman and Jakob Nielsen to compare user experience satisfaction and students’ learning outcomes in the education courses of art and design between the virtual teaching model and the in-person teaching model.},
booktitle = {Proceedings of the 8th International Conference on E-Society, e-Learning and e-Technologies},
pages = {57–62},
numpages = {6},
keywords = {Cognitive psychology, Remote virtual, User experience design, Video conferencing apps},
location = {<conf-loc>, <city>Rome</city>, <country>Italy</country>, </conf-loc>},
series = {ICSLT '22}
}

@inproceedings{10.1145/3482632.3487494,
author = {Feng, Yang and Zhan, Xiuheng and Cao, Changcheng},
title = {Research on the Construction and Application of a Micro-Teaching Training Platform for Teaching Skills of Teacher-Training Students in Chinese Universities},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3487494},
doi = {10.1145/3482632.3487494},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {2680–2685},
numpages = {6},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@article{10.5555/1629036.1629065,
author = {Abernethy, Ken and Treu, Kevin},
title = {Teaching computing soft skills: an experiential approach},
year = {2009},
issue_date = {December 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {2},
issn = {1937-4771},
abstract = {While teaching technical skills to students of computer science and information technology is critical, it has become increasingly clear that computing professionals must also excel at the "soft" skills of communication and interpersonal interactions. This paper describes the authors' experience with two computing courses that focus on giving students exposure to soft skills within the context of real-world computing projects with real clients.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {178–186},
numpages = {9},
keywords = {communication, interpersonal skills, project management, software development}
}

@inproceedings{10.5555/1030818.1031092,
author = {Hatch, Melanie L. and Byrkett, Donald L.},
title = {Introductory teaching of simulation: designing simulation projects},
year = {2003},
isbn = {0780381327},
publisher = {Winter Simulation Conference},
abstract = {Simulation projects provide a useful way to tie together the expected learning outcomes in a simulation class. Designing a good project is a challenging task and simulation instructors are always on the lookout for interesting ideas. This paper provides simulation instructors with two interesting simulation applications, a supply chain project and a web site design project. The supply chain problem is based on a real company problem and the web site design problem is based on a textbook problem. Each application is described in detail and links are provided so that other simulation instructors can access handouts and possible solutions. The authors also provide some insights about simulation project design.},
booktitle = {Proceedings of the 35th Conference on Winter Simulation: Driving Innovation},
pages = {1982–1988},
numpages = {7},
location = {New Orleans, Louisiana},
series = {WSC '03}
}

@article{10.1145/130647.130659,
author = {Peelle, Howard A.},
title = {Teaching APL to beginners: critical issues (part 2)},
year = {1991},
issue_date = {Dec. 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {2},
issn = {0163-6006},
url = {https://doi.org/10.1145/130647.130659},
doi = {10.1145/130647.130659},
journal = {SIGAPL APL Quote Quad},
month = {dec},
pages = {22–25},
numpages = {4}
}

@inproceedings{10.1145/3456887.3457104,
author = {Hu, Fang},
title = {Bidirectional Promotion of Ideological and Political Education in Curriculum and Online Teaching—Taking Online Teaching of Mathematics as an Example},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457104},
doi = {10.1145/3456887.3457104},
abstract = {In consideration of the influence brought by COVID-19, online teaching has been implemented among all students at all grades throughout the whole China for the very first time, and consequently, many teachers focusing on teaching career and scientific research became “network anchors”. After all, each education fellow needs to face and solve the problem of how to integrate online teaching with ideological and political education in curriculum in depth in face of the new situation so that they could be promoted mutually. This paper elaborates the mutual promotion of ideological and political education in curriculum and online teaching as well as the relevant explorations on their further promotion in the post-epidemic period.As explicitly specified in the Guiding Opinions on the Organization and Management of Online Education in Universities and Colleges during the Epidemic Prevention and Control Period promulgated by the Ministry of Education of the People's Republic of China during the outbreak of COVID-19, universities and colleges should…carry out online teaching activities such as online teaching and online learning actively during the epidemic prevention and control period in order to achieve the purpose of “teaching and learning out of class” and guarantee both teaching progress and quality[1]. With online teaching implemented among all students at all grades throughout the whole China for the very first time, many teachers focusing on teaching career and scientific research became “anchors”. After all, each education fellow needs to face and solve the problem of how to integrate online teaching with ideological and political education in curriculum in depth in face of the new situation so that they could be promoted mutually.The ideological and political education in curriculum (hereinafter referred to as “the Education”) essentially means taking the guidance of ideal and belief, value idea and moral concept as the very important teaching contents and implementing the above in the teaching process of professional courses, besides imparting professional knowledge, so as to form the pattern of super ideological and political and big moral education together with ideological and political courses and finally character and civic virtue subtly[2]. According to the report on Make Overall Plans, Cope with Changes and Create a New Pattern—Win the Battle of Revitalizing Undergraduate Education Comprehensively made by Wu Yan, the director of the Department of Higher Education of the Ministry of Education in Xiamen University in August 2020, the essence of winning the battle lies in the Education. He affirmed the contributions that the Education had made to online teaching totally. By responding to the relevant deployment and arrangement of the Ministry of Education on “teaching and learning out of class” actively, our university was active in exploring online teaching based on platforms such as MOOC, Superstar Learning and Zhihuishu on February 17, 2020 and opened 11 mathematics courses, including the self-developed MOOC Advanced Mathematics IIA, Advanced Mathematics IIB, Advanced Mathematics IIC, Mathematical Statistics, Management Statistics, etc.Education essentially means enabling students to study and is aimed to improve their comprehensive quality. The ideological and political factors in course teaching are explored on the basis of realizing the teaching objective so as to educate people subtly. By taking the course Mathematical Statistics as an example, the course team introduced “collecting and sorting of statistical data” in virtue of the chart of changing trend of COVID-19 infection growth (Figure 1) so that students could fully understand the severity of the current epidemic, learn about the epidemic's development tread with fluctuating data in a scientific and reasonable manner and motivate their interests data analyzing, disposing and exploring. Students were also encouraged to adjust their study and life at home, eliminate their anxiety and panic, and enhance their confidence in winning the fight against the epidemic.The traditional “teaching + learning” mode can be changed into “learning + teaching” mode by integrating the Education into the mathematics course teaching and fully exerting the leading role of “ideological and political elements” to achieve students-based teaching and focus on three dimensions of students’ development and learning and learning effect [3] in order to center on students, motivate their endogenous power of learning, change their learning attitude from passively to initiatively, and liberate teachers from the operation and control work so that they could have more time focusing on teaching design and realization of teaching goal. Practice shows that in the “learning + teaching” mode, students become more active in class teaching and their satisfactory degree has increased to 92% from 85% at the very beginning. Therefore, students could obtain a higher sense of achievements.The ideological and political factors are all inclusive. The course team developed the Education by choosing the contents in such aspects as patriotism, cultural history, professional quality and value orientation based on teaching contents of mathematics courses and explored the class examination reform in depth. For example, Advanced Mathematics IIA is assessed in the form of Xuexitong process assessment (40%) + online final examination score (40%) + course summary assessment (20%). Students should be guided from the course learning objective so as to make transformation from learning mathematics to using it, from mastering knowledge point to highlighting the quality of mathematics learning, from doing mathematics questions to considering with it in order to foster students’ professional quality of concerning learning, in-depth thinking and lifelong learning.Lin Yifu, a famous economist and the professor at Peking University once said: “Such a positive and open measure not only helps China to shoulder the responsibilities of world's higher education but also means an initiative action for sharing the Chinese wisdom and enhancing China's speaking right and influence!” Director Wu Yan pointed out in the report that the core for winning the fight against the epidemic was online teaching. In the spring term of 2020, there were 1.0845 million online teachers from the universities nationwide. The online teaching reached 3.537 billion person-times and online courses were 17.1968 million course-times. Online teaching had the all-dimensional coverage of all regions. With unprecedented scale, range and degree, the large-scale online education practice exerts profound influence on the learning revolution and paradigmatic reform significance of China's and even the world's higher education. The international organizations such as UNESCO and the experts of different countries highly affirmed China's online teaching achievements during the epidemic period. Robert Paru, the Education Division Head of the Chinese Representative Office of the UNESCO said: “we really appreciate China's sharing with the whole world on its online teaching of higher education and wish we could have further cooperation.” Nicolas Dirks, the former president of the University of California, Berkeley said that “China's colleges and universities lead the education research field and play a leading role in providing high-quality online education for the students all over the world”. This is actually a typical and vivid case about the Education. Each student in each class could feel the strengths, wisdoms and plans that China offered in terms of the fight against the epidemic, education and teaching in the era of Internet + education. All these unprecedented actions not only become a significant event along the history but also mean a surprise to the whole world. With the action above, we have enhanced our national self-confidence and national pride. Every teacher and every student involving online teaching are proud of being a Chinese.Mathematics is a kind of very amazing subject. The basic ideas that the mathematics courses follow for solving problems are to establish a mathematical model against the actual problem on the basis of analyzing their quantity relations. Some special expressive symbols, which are written in streamline form, smooth and charming, are used to quantize the specific relations. For many actual issues such as the area of trapezoid with curve side, continuous compounding, volume of column with curved edge, irregular column, etc., the course team reflected the rules of graphics generation in the online teaching live streaming room directly and specifically in the form of animation by using the mathematics software. Students cannot help claiming the charm of mathematics! It is worth mentioning that the esthetics in mathematics courses is not confined to the charm of form, for the charm can also be reflected in the logic. Internal logic of the teaching contents is stressed in a majority of mathematics courses. For instance, in the course Advanced Mathematics, when introducing the contents of Chapter 1 Functions and Limits, the course team guided students to expand the studies on the limit issues in the elementary mathematics in the advanced mathematics to discuss the infinity so as to guide them study from the limit to “infinity”, “infinitely close” and “trend”. In addition, when introducing the concept of limit, the general function limit was expanded from the simplest and most direct sequence limit, which is just the general rules for cognitive development (from special to general). Similarly, after the limit of the simple basic function is introduced, four arithmetic operations and composite function—the most commonly used mathematic algorithm was used to expand the simple limit to the limit of a complicated function. Practice proves that the integration of such kind of ideological and political elements by the course team teachers in online teaching could fully exert students’ passion, guide them to think deeply and realize in-depth learning so as to experience the internal charm of mathematics further.For instance, when developing teaching design for the concept and nature of limit in the course Advanced Mathematics, the course team quoted the words of Zhuang Zi, a famous ancient Chinese philosopher by introducing one sentence contained in Zhuangzi – The World: “for a stick that is one foot (a Chinese measuring unit) long, if we use half of it every day, then the stick can be used permanently”. Through the above, students could know about the understandings and comprehension of Chinese ancient ideologists on limit idea and the wisdom of the ancient Chinese people and enhance sense of national pride. For instance, when developing teaching design for the data collection and sorting in the course Management Statistics, the course team introduced the establishment of China's meteorological observing networks that consists of over 40 meteorological stations and more than 100 rainfall measurement stations by Zhu Kezhen, the originator and founder of historical climatology in China. Zhu observed and recorded the climate and weather conditions every day, collected historical climatology data extensively and worked together with Yuan Minwei to compile the Phenology, the rich historical phonological data and the research results of which can be hardly found in the phonological works of other countries. By learning Zhu Kezhen's contributions in modern meteorological sciences and natural science history, students could be guided to feel the dedication, persistence and cautious and earnest science spirit of the statistics workers so as to build the correct world outlook, lookout on life and value.For instance, in the courses Mathematical Statistics and Management Statistics, the course team made data horizontal analysis and speed analysis by using the latest data about the fight against the epidemic. As for the horizontal analysis, it obtained the daily accumulative amount of COVID-19 suspected cases, confirmed cases, cured cases, death cases and its gradual (daily) increment; as for the speed analysis, it obtained the link relative ratio of suspended cases, confirmed cases, cured cases, death cases and the death rate. By analyzing the data on the fight against the epidemic, each teacher and student involving online teaching could experience the epidemic in person, and the determination and respectable actions of the medical workers from all part of the country and scientific researchers in aiding Hubei and Wuhan in face of the severe epidemic conditions. By combining these political and ideological elements and the cutting-edge knowledge of the basic mathematical principle organically, students could be guided to ponder study, growth, individual development and national development in depth.As the professional required course of students majoring in science, industry and management, mathematics courses provide them with the basic professional quality. By learning these courses, students could understand and grasp the basic concepts, theories, ideas and methods of calculus, ordinary differential equation (ODE), probability theory, linear algebra, mathematical statistics and management statistics so as to obtain solid mathematics foundation and favorable mathematic accomplishments. The combination of mathematic theory and major could lay a solid foundation on the professional knowledge learning, cultivate students’ capacity of analyzing and solving problems by mathematics ideas and methods and offer students solid mathematics foundation for their study in postgraduate period and further learning of relevant courses. Practice proves that by exploring the ideological and political elements in the mathematics courses fully and integrating them into online teaching organically, the course team could enhance the class timeliness effectively and students’ rate of head raising and class participation so as to make the course connect the ideological and political elements and the basic professional courses seamlessly.Shanghai took the initiative in exploring the reform of ideological and political education courses in colleges and universities and created the special course General Plan of a Great Country, which provides a model that can be referenced for boosting the reform of ideological and political education [4]. In the upcoming post-epidemic era, the Education will still be a systematic project for educating people in colleges and universities [5] and a required path for intensifying the political theoretical level and moral education of students in modern times. The course teaching integrated with the Education enables students to grasp the professional knowledge and skills but also cultivates their patriotism, professional quality and scientific exploration.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {916–918},
numpages = {3},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/2559636.2559675,
author = {Cakmak, Maya and Takayama, Leila},
title = {Teaching people how to teach robots: the effect of instructional materials and dialog design},
year = {2014},
isbn = {9781450326582},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2559636.2559675},
doi = {10.1145/2559636.2559675},
abstract = {Allowing end-users to harness the full capability of general purpose robots, requires giving them powerful tools. As the functionality of these tools increase, learning how to use them becomes more challenging. In this paper we investigate the use of instructional materials to support the learnability of a Programming by Demonstration tool. We develop a system that allows users to program complex manipulation skills on a two-armed robot through a spoken dialog interface and by physically moving the robot's arms. We present a user study (N=30) in which participants are left alone with the robot and a user manual, without any prior instructions on how to program the robot. Instead, they are asked to figure it out on their own. We investigate the effect of providing users with an additional written tutorial or an instructional video. We find that videos are most effective in training the user; however, this effect might be superficial and ultimately trial-and-error plays an important role in learning to program the robot. We also find that tutorials can be problematic when the interaction has uncertainty due to speech recognition errors. Overall, the user study demonstrates the effectiveness and learnability of the our system, while providing useful feedback about the dialog design.},
booktitle = {Proceedings of the 2014 ACM/IEEE International Conference on Human-Robot Interaction},
pages = {431–438},
numpages = {8},
keywords = {programming by demonstration},
location = {Bielefeld, Germany},
series = {HRI '14}
}

@article{10.5555/2527148.2527175,
author = {Weiss, Richard and Locasto, Michael and Mache, Jens and Nestler, Vincent},
title = {Teaching cybersecurity through games: a cloud-based approach},
year = {2013},
issue_date = {October 2013},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {29},
number = {1},
issn = {1937-4771},
abstract = {Incorporating information security into the undergraduate curriculum seems to be a topic of growing interest to CCSC-NW attendees. In addition, it is receiving increased attention nationally in the proposed ACM/IEEE CS2013 Curricula Guidelines [1]. This area will be one of the new core requirements. The goal of this workshop is to provide faculty who have little experience in this area with some of our most recent tools and resources that would facilitate their incorporating this knowledge area into their curriculum. It builds on previous similar workshops in this area. In this tutorial, we will describe the use of cloud-based environments for developing and disseminating hands-on security exercises. We present one security game that we have developed on Amazon's AWS cloud environment and an exercise that was developed on The RAVE. Participants will learn about the framework we have developed for providing instructors with competitive, interactive exercises through the system EDURange[2]. EDURange is a new framework for creating exercises and games in a variety of environments including remotely hosted web services, i.e. cloud computing. They will learn about these exercises from two viewpoints. As players, they will learn about network security. As instructors, they will learn how to use these security exercises in the classroom, and they will learn about the scenario description language, which they can use to create games for their classes.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {113–115},
numpages = {3}
}

@article{10.1145/1805724.1805737,
author = {Clear, Tony},
title = {Diagnosing your teaching style: how interactive are you?},
year = {2010},
issue_date = {June 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {2},
issn = {2153-2184},
url = {https://doi.org/10.1145/1805724.1805737},
doi = {10.1145/1805724.1805737},
abstract = {In the higher education context within which computing educators now teach, an increasing range of forces are conspiring against innovative teaching practice. Pressures of academic workload, pressures from consumerist students and regular course evaluations, pressures from increasingly managerial policies and practices, from so-called 'quality assurance systems', pressures to continually expand research output, all lead towards stifling conformity and a natural conservatism in teaching practice. The increasing focus on consistency in a mass production model of teaching militates heavily against innovation. This paper presents an instrument used by the author to diagnose the student perceptions of the pedagogy of his course, by mapping it against Reeve's fourteen dimensions of an interactive learning system [12]. The outcomes demonstrated significant differences in style between this course and the overall programme within which it was situated. It enabled the author to gain insight into how the course differed and issues about it that had discomfited students. This enabled constructive dialogue with the students and an explicit discussion of the underlying collaborative mode of pedagogy. The tool is presented here for others to adopt in order to diagnose or make explicit to students the style of their own courses, and hopefully encourage innovative teaching practice.},
journal = {ACM Inroads},
month = {jun},
pages = {34–41},
numpages = {8},
keywords = {CS education research, IS education research, interactive learning systems, pedagogy}
}

@inproceedings{10.1145/2157136.2157304,
author = {Taylor, Blair and Bishop, Matt and Burley, Diana and Cooper, Steve and Dodge, Ron and Seacord, Robert},
title = {Teaching secure coding: report from summit on education in secure software},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157304},
doi = {10.1145/2157136.2157304},
abstract = {Software is critical to life in the 21st century. It drives financial, medical, and government computer systems as well as systems that provide critical infrastructures in areas such as transportation, energy, networking, and telecommunications. As the number and severity of attacks that exploit software vulnerabilities increase, writing reliable, robust, and secure programs will substantially improve the ability of systems and infrastructure to resist such attacks. Education plays a critical role in addressing cybersecurity challenges of the future, such as designing curricula that integrate principles and practices of secure programming into educational programs. To help guide this process, the National Science Foundation Directorates of Computer and Information Science and Engineering (CISE) and Education and Human Resources (EHR) jointly sponsored the Summit on Education in Secure Software (SESS), held in Washington, DC in October, 2010. The goal of this session is to share some of the key findings and challenges identified by the summit and to actively engage the community in the discussions. Each of the speakers participated in the summit and brings a unique viewpoint to the session.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {581–582},
numpages = {2},
keywords = {secure coding},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@article{10.5555/3417639.3417641,
author = {Wang, Yang and McCoey, Margaret and Blum, Thomas},
title = {Teaching database for freshmen: a two-thread model},
year = {2020},
issue_date = {April 2020},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {35},
number = {8},
issn = {1937-4771},
abstract = {We address the challenge of teaching a database course for freshmen CS/IT majors: namely their limited background, coupled with the material's mixture of language (e.g., SQL) and abstract theory (e.g., normalization) - hard even for upperclassmen. In this paper, we propose a new two-thread model: one thread of theory and another of practice which are relatively independent and self-contained (compared to a typical "Lecture + Lab" design). To provide students extensive exercises on SQL, the practice thread has labs that expose them to SQL statements starting Week 1. When applicable, labs purposely anticipate related components in the theory thread. Also we approach abstract concepts (e.g., normalization) using an example-based method that generalizes patterns extracted from examples. We have applied this two-thread model with our freshmen for the last few semesters, and their responses have been very positive. We share some of this feedback as well as the learned lessons with the hope to enlighten the teaching of database courses and other freshmen courses in other institutions.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {33–43},
numpages = {11}
}

@article{10.5555/2835377.2835381,
author = {Matthews, Suzanne J.},
title = {Teaching with parallella: a first look in an undergraduate parallel computing course},
year = {2016},
issue_date = {January 2016},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {31},
number = {3},
issn = {1937-4771},
abstract = {This paper describes our experience integrating the Parallella, an energy efficient single board computer (SBC) with 18 cores, into an undergraduate parallel computing course. The board's small form-factor, high number of cores and relative cheapness makes it a very attractive option for introducing students to parallel computing. We describe and reflect on our experiences using the Parallella board, and offer novel educational materials that will assist others to incorporate the Parallella into future computing courses.},
journal = {J. Comput. Sci. Coll.},
month = {jan},
pages = {18–27},
numpages = {10}
}

@inproceedings{10.1145/2567574.2567607,
author = {Harfield, Timothy D.},
title = {Teaching the unteachable: on the compatibility of learning analytics and humane education},
year = {2014},
isbn = {9781450326643},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2567574.2567607},
doi = {10.1145/2567574.2567607},
abstract = {This paper is an exploratory effort to find a place for learning analytics in humane education. After distinguishing humane education from training on the basis of the Aristotelian model of intellectual capabilities, and arguing that humane education is distinct by virtue of its interest in cultivating prudence, which is unteachable, an account of three key characteristics of humane education is provided. Appealing to thinkers of the Italian Renaissance, it is argued that ingenium, eloquence, and self-knowledge constitute the what, how, and why of humane education. Lastly, looking to several examples from recent learning analytics literature, it is demonstrated that learning analytics is not only helpful as set of aids for ensuring success in scientific and technical disciplines, but in the humanities as well. In order to function effectively as an aid to humane education, however, learning analytics must be embedded within a context that encourages continuous reflection, responsiveness, and personal responsibility for learning.},
booktitle = {Proceedings of the Fourth International Conference on Learning Analytics And Knowledge},
pages = {241–245},
numpages = {5},
keywords = {aristotle, humanism, humanities, learning analytics, pedagogy, renaissance},
location = {Indianapolis, Indiana, USA},
series = {LAK '14}
}

@inproceedings{10.1145/3372782.3406284,
author = {Bell, Tim},
title = {Teaching Teachers to Teach Computer Science - Unplugged or Plugged-in?},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406284},
doi = {10.1145/3372782.3406284},
abstract = {As new computing curricula are rolled out around the world, teachers are having to adjust to teaching new topics, finding new resources, and even working in a different style in the classroom. For some, this is a long-awaited change that they are more than ready for, but for many, particularly in primary school, it is unfamiliar territory and a foreign language, and it might even appear to threaten deeply-held values they have about what their learners need. Because the curriculum is new, it is unlikely to have been part of their own education or their preparation for being a teacher.So how do we reach and engage such teachers? What would motivate them to invest in this change? How do they see this mysterious new thing called "coding"? This talk will report on experience working with teachers in New Zealand, and also look at approaches used around the world. The role of CS Unplugged [1] will be considered, as well as the general issues that teachers face around identifying what and how they should teach this new curriculum area.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {1},
numpages = {1},
keywords = {cs education, cs unplugged, scratch},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/2369220.2369240,
author = {Ladeira, Ilda and Cutrell, Edward},
title = {Teaching with storytelling: an investigation of narrative videos for skills training},
year = {2010},
isbn = {9781450307871},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2369220.2369240},
doi = {10.1145/2369220.2369240},
abstract = {We present a study on using storytelling for teaching skills to low-income workers in the developing world. Taking a cue from work on using dramatized stories and video to promote technology use and agricultural and HIV/AIDS education, we investigated storytelling's ability for teaching low-literacy populations. We created a series of videos to teach domestic workers in urban India bed-making and vacuuming. We tested the effect on learning of a) embedding instructional content in narratives and b) adding motivational content on the benefits of learning these skills. We compared: 1) instruction-only videos, 2) instructional videos book-ended with voice-overs describing skills' benefits, 3) combined instructional and narrative videos showing no skill learning benefits; and 4) combined instructional and narrative videos which portray benefits for learning a skill. Narrative framing and motivational content each improved learning, but combining them resulted in dramatic improvement.},
booktitle = {Proceedings of the 4th ACM/IEEE International Conference on Information and Communication Technologies and Development},
articleno = {22},
numpages = {10},
location = {London, United Kingdom},
series = {ICTD '10}
}

@inproceedings{10.1145/3421682.3421703,
author = {Xu, Ning and Chou, Sheng-Chieh and Huang, Tsui-Feng and Chou, Chih-Hung},
title = {Research on Improvement Design and Teaching Satisfaction of Hybrid-teaching –Taking the course of "Human Resource Management" as an example},
year = {2020},
isbn = {9781450388771},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421682.3421703},
doi = {10.1145/3421682.3421703},
abstract = {This study aims to reform the "Human Resource Management" course with the support of a digital teaching platform. There are 439 students in nine classes, which use online and offline hybrid-teaching methods to explore the effectiveness of the reform teaching. From explaining the teaching mode, and then conducting a satisfaction survey on the teaching effectiveness; the survey scale is to prepare an evaluation scale of mixed learning satisfaction from expert interviews, student interviews and literature methods to evaluate the feasibility of the mixed teaching mode and students’ learning satisfaction. According to the survey data, there are three orientations with higher satisfaction scores. Those are course of teacher teaching, hybrid teaching mode and student's learning motivation. It can be used to examine the feasibility and reference value of the blended-learning designed in this course.},
booktitle = {2020 The 4th International Conference on E-Society, E-Education and E-Technology},
pages = {31–36},
numpages = {6},
keywords = {Satisfaction, Human Resource Management, Digital Teaching Platform, Blended Learning},
location = {Taipei, Taiwan},
series = {ICSET'20}
}

@inproceedings{10.5555/3522802.3523031,
author = {Bijak, Jakub and Hilton, Jason and Hinsch, Martin and Lipscombe, Kim and Nurse, Sarah and Prike, Toby and Smith, Peter W. F. and Reinhardt, Oliver and Uhrmacher, Adelinde M. and Higham, Philip A. and Grow, Andr\'{e}},
title = {Teaching a modeling process: reflections from an online course},
year = {2022},
publisher = {IEEE Press},
abstract = {The outbreak of the COVID-19 pandemic in 2020 posed unique challenges for academic and professional education, while at the same time offering opportunities related to the mass switching of the delivery of courses to the online mode. In this paper, we share the experience of organizing and delivering an online doctoral-level course on Agent-Based Modeling for Social Research. Our aim was to teach interdisciplinary content on various elements of the modeling process in a coherent and practical way. In the paper, we offer a critical assessment of different aspects of the course, related to content as well as organization and delivery. By looking at the course in the light of the current knowledge on good teaching and learning practices from the educational and psychological literature, and reflecting on the lessons learned, we offer a blueprint for designing and running complex, multi-thread simulation courses in an efficient way.},
booktitle = {Proceedings of the Winter Simulation Conference},
articleno = {268},
numpages = {12},
location = {Phoenix, Arizona},
series = {WSC '21}
}

@inproceedings{10.1145/2729094.2742617,
author = {Abid, Shamsa and Abdul Basit, Hamid and Arshad, Naveed},
title = {Reflections on Teaching Refactoring: A Tale of Two Projects},
year = {2015},
isbn = {9781450334402},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2729094.2742617},
doi = {10.1145/2729094.2742617},
abstract = {Teaching refactoring effectively while making students realize the importance and benefits of refactoring is a challenge. In this direction, an experiment was carried out while conducting the course project for the Refactoring and Design Patterns course. This paper discusses the results of the experiment that involved two different project schemes to carry out refactoring activities on the same code base. One scheme was post-enhancement refactoring and the other was pre-enhancement refactoring. The aim of the experiment was to decide which scheme was beneficial in terms of better understanding, appreciation, and implementation of refactoring.},
booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {225–230},
numpages = {6},
keywords = {teaching refactoring, student survey, software refactoring, refactoring course project},
location = {Vilnius, Lithuania},
series = {ITiCSE '15}
}

@inproceedings{10.1145/1562877.1562905,
author = {White, Su and Irons, Alastair},
title = {Relating research and teaching: learning from experiences and beliefs},
year = {2009},
isbn = {9781605583815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1562877.1562905},
doi = {10.1145/1562877.1562905},
abstract = {The relationship between research and teaching has possible benefits and inherent tensions. Exploring the potentially beneficial relationship is of interest and possible value to faculty, students, and stakeholders. Much of the existing literature has described approaches using a vocabulary derived from the soft/applied social science fields of study, a view-point which may in some ways be problematic. This paper examines the relationship between research and teaching in the undergraduate curriculum from a perspective of the computing disciplines. It compares and contrasts evidence of the beliefs and experiences of faculty about the relationship between research and teaching. It presents and analyses the result of surveys which gathered data to explore their understandings inter-relationship of research and teaching; in the curriculum; and as it is delivered, and experienced in the lab, seminar room and lecture hall. This research builds on existing work developed in a preliminary study which examined ways in which synergies between research and teaching could be achieved, particularly in the 'hard/applied' areas of the curriculum. It analyses data from the 'research-intensive' and the 'teaching-intensive' institutions. Having identified typical activities in the computing disciplines, it places them in the context of existing theoretical models.},
booktitle = {Proceedings of the 14th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {75–79},
numpages = {5},
keywords = {scholarship of teaching and learning, research-teaching nexus, research-led teaching, disciplinary differences},
location = {Paris, France},
series = {ITiCSE '09}
}

@article{10.1145/270858.270870,
author = {Fulda, Joseph S.},
title = {Student evaluations of teaching: brought to you by computer},
year = {1997},
issue_date = {Sept. 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {3},
issn = {0095-2737},
url = {https://doi.org/10.1145/270858.270870},
doi = {10.1145/270858.270870},
journal = {SIGCAS Comput. Soc.},
month = {sep},
pages = {42–43},
numpages = {2}
}

@article{10.1145/1519390.1519396,
author = {Chiu, David},
title = {On teaching computer science: thoughts and advice for TAs},
year = {2008},
issue_date = {December 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {2},
issn = {1528-4972},
url = {https://doi.org/10.1145/1519390.1519396},
doi = {10.1145/1519390.1519396},
journal = {XRDS},
month = {dec},
pages = {25–26},
numpages = {2}
}

@inproceedings{10.1145/971300.971452,
author = {Bergin, Joe and Caristi, James and Dubinsky, Yael and Hazzan, Orit and Williams, Laurie},
title = {Teaching software development methods: the case of extreme programming},
year = {2004},
isbn = {1581137982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/971300.971452},
doi = {10.1145/971300.971452},
booktitle = {Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education},
pages = {448–449},
numpages = {2},
keywords = {software engineering, software development methods, extreme programming},
location = {Norfolk, Virginia, USA},
series = {SIGCSE '04}
}

@inproceedings{10.1145/800197.806029,
author = {Rose, G. and Woodbury, M. A. and Fergusson, E. S. and Turner, L. R.},
title = {Recent study of teaching: machine aids in rehabilitation therapy},
year = {1965},
isbn = {9781450374958},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800197.806029},
doi = {10.1145/800197.806029},
abstract = {THE REHABILITATION of certain classes of handicapped persons by use of self-implementing automated processes will be discussed in this paper. Rehabilitation comprises evaluative testing and analysis, and therapy. Classically, these procedures have depended exclusively on human beings and non-interacting special purpose machines.Aphasia has been chosen as the primary clinical example. To be covered are contributions made in the field of rehabilitation by modern communication technology; specifically, electrical transmission channels and general purpose digital computers. This technology is applied in two general categories: (1) - information retrieval; and (2) - reactive communications situations.},
booktitle = {Proceedings of the 1965 20th National Conference},
pages = {7},
location = {Cleveland, Ohio, USA},
series = {ACM '65}
}

@inproceedings{10.1145/3478431.3499322,
author = {Qasem, Apan},
title = {YODA: A Pedagogical Tool for Teaching Systems Concepts},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499322},
doi = {10.1145/3478431.3499322},
abstract = {Computer science undergraduates often struggle in hardware-oriented courses like Computer Organization and Computer Architecture. Active learning instruments can improve student performance in these classes. Regrettably, few tools exist today to support the creation of active learning teaching material for such courses.This paper describes YODA, a pedagogical tool for creating active learning content to help teach systems concepts. At the core, YODA is a collection of functional simulators embedded into a custom Jupyter kernel. YODA produces notebooks that allow students to learn about a system through guided interaction and observation. We have been using YODA at our home institution for two years and have seen significant improvement in student learning outcomes.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {613–618},
numpages = {6},
keywords = {pedagogical tools, computer architecture, active learning},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3304221.3325571,
author = {Geck, Gaetano and Ljulin, Artur and Haldimann, Jonas and May, Johannes and Schmidt, Jonas and Schmellenkamp, Marko and Sonnabend, Daniel and Tschirbs, Felix and Vehlken, Fabian and Zeume, Thomas},
title = {Teaching Logic with Iltis: an Interactive, Web-Based System},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3325571},
doi = {10.1145/3304221.3325571},
abstract = {Iltis is an interactive, web-based system for teaching logic. It is designed to provide immediate and comprehensive feedback for exercises covering various aspects of the reasoning workflow. This poster presentation reports on new exercises and feedback mechanisms for modal and first-order logic.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {307},
numpages = {1},
keywords = {propositional logic, modal logic, logic, interactive learning environments, first-order logic},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

@inproceedings{10.1145/1047344.1047405,
author = {Logan, Patricia Y. and Clarkson, Allen},
title = {Teaching students to hack: curriculum issues in information security},
year = {2005},
isbn = {1581139977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1047344.1047405},
doi = {10.1145/1047344.1047405},
abstract = {Teaching "hacking" as a legitimate means of training students in how to protect a future employer's data assets has been introduced into courses with increasing frequency. The introduction of "red teaming" and attack-based exercises into information security courses presents a potential ethical problem. This paper explores the issues involved in designing an information security course with lab components that involve destructive actions.},
booktitle = {Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education},
pages = {157–161},
numpages = {5},
keywords = {information security, information assurance, hacking, ethics and computers, education, computer security, computer science education},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '05}
}

@article{10.5555/1791129.1791167,
author = {Cliburn, Daniel},
title = {Teaching virtual reality to undergraduates: tutorial presentation},
year = {2010},
issue_date = {June 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {6},
issn = {1937-4771},
abstract = {Virtual Reality (VR) is a contemporary area of research with many exciting applications in simulation and training. The National Academy of Engineering recently named "Enhance Virtual Reality" as one of fourteen "Grand Challenges for Engineering" (http://www.engineeringchallenges.org/) and many students find the subject to be exciting and engaging. However, VR receives little or no attention in most undergraduate Computer Science programs. This tutorial will have two objectives. The first will be to introduce attendees to the field of VR through several freely available online lesson modules, and attendees will be shown how the modules are actually being integrated into a variety of existing courses. The second tutorial objective will be to describe two immersive stereo display systems: a Head-Mounted Display (HMD) unit and a stereo display wall.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {210},
numpages = {1}
}

@article{10.5555/1516546.1516593,
author = {Cliburn, Daniel and Doherty, Michael},
title = {Teaching Virtual Reality to undergraduates: tutorial presentation},
year = {2009},
issue_date = {April 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {4},
issn = {1937-4771},
abstract = {Virtual Reality (VR) is a contemporary area of research with many exciting applications in simulation and training. The National Academy of Engineering recently named "Enhance Virtual Reality" as one of fourteen "Grand Challenges for Engineering", and many students find the subject to be exciting and engaging. However, VR receives little or no attention in most undergraduate Computer Science programs. This tutorial will have two objectives. The first will be to introduce attendees to the field of VR through several freely available online lesson modules, and attendees will be shown how the modules are actually being integrated into a variety of existing courses. The second tutorial objective will be to demonstrate and describe the setup of two immersive stereo display systems: a Head-Mounted Display (HMD) unit and a stereo display wall.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {289},
numpages = {1}
}

@article{10.5555/369279.369306,
author = {Paxton, John and Mumey, Brendan},
title = {Teaching advanced problem solving: implications for the CS curriculum},
year = {2000},
issue_date = {Jan. 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {16},
number = {2},
issn = {1937-4771},
abstract = {In this paper, we discuss our experiences with an advanced problem solving seminar and ACM programming contests. These are both activities that require teams of students to solve problems that are more challenging than those typically encountered in computer science courses.After presenting some effective and not-so-effective strategies in these environments, we conclude the paper by taking our observations and applying them to the computer science curriculum as a whole. By casting a spotlight on the curriculum from this more advanced setting, we are able to identify some weaknesses that must be addressed. Because our curriculum is a fairly typical one, we hope that his analysis might help other universities and colleges reflect upon their curricula as well.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {50–55},
numpages = {6}
}

@inproceedings{10.5555/1854360.1854432,
author = {Schlichter, Natalia and Watermann, Rainer and Nueckles, Matthias},
title = {Personal beliefs about learning and teaching: comparison of student teachers in the sciences and humanities at different stages of their studies},
year = {2010},
publisher = {International Society of the Learning Sciences},
abstract = {The present project deals with teachers' beliefs as implicit, steady assumptions about learning and teaching and especially with 'participation', as the least investigated. This exploratory study analyzes (1) the representation of beliefs regarding 'participation' in student teachers' views, the impact (2) of the stage of their studies, and (3) of their discipline studied on the beliefs. Student teachers were interviewed regarding their views on learning and teaching (N = 30). The content analysis shows different multifaceted beliefs. The results reveal an alteration in the beliefs during the studies: At the beginning there is a 'transmissive-emotional' focusing which changes progressively to a more cognitive focus including 'construction' and 'participation', and still 'transmission'. Furthermore, the internal structure of 'participation' in the views of the interviewees does not correspond with the theoretical concept. On the basis of these results the possibility of developing a questionnaire for closer investigation of 'participation' is being discussed.},
booktitle = {Proceedings of the 9th International Conference of the Learning Sciences - Volume 1},
pages = {564–571},
numpages = {8},
location = {Chicago, Illinois},
series = {ICLS '10}
}

@inproceedings{10.1145/2659532.2659637,
author = {Putnik, Zoran and Ivanovi\'{c}, Mirjana and Budimac, Zoran and Bothe, Klaus and Burkhard, Hans-Dieter},
title = {Teaching in balkan countries: multilingual and multicultural approach},
year = {2014},
isbn = {9781450327534},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2659532.2659637},
doi = {10.1145/2659532.2659637},
abstract = {A joint educational project connecting seventeen universities from ten countries, nine of them belonging to wider Balkan area, exists for more than a decade now. The project started with the goal of creating common teaching material for the course in "Software Engineering", but outgrew this original goal. Not just that several more common courses were created, but also the complete master studies direction in the field was produced (within another project continuing the work of some of the participating universities) and is conducted for several years now in two Balkan countries. Over the years, a lot of multicultural and multilingual activities were performed, including exchange of teaching resources and ideas, guest lecturing, creation of tools for translation and standardization of presentations. This paper will present some of the developments and advantages of such approach over the years.},
booktitle = {Proceedings of the 15th International Conference on Computer Systems and Technologies},
pages = {393–400},
numpages = {8},
keywords = {joint courses, international guest lecturing, educational project},
location = {Ruse, Bulgaria},
series = {CompSysTech '14}
}

@inproceedings{10.1145/1268784.1268914,
author = {Xinogalos, Stelios and Satratzemi, Maya and Dagdilelis, Vassilios},
title = {Teaching java with BlueJ: a two-year experience},
year = {2007},
isbn = {9781595936103},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1268784.1268914},
doi = {10.1145/1268784.1268914},
booktitle = {Proceedings of the 12th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {345},
numpages = {1},
keywords = {Java, object-oriented programming (OOP)},
location = {<conf-loc>, <city>Dundee</city>, <country>Scotland</country>, </conf-loc>},
series = {ITiCSE '07}
}

@article{10.1145/102868.102870,
author = {Gries, David},
title = {Teaching calculation and discrimination: a more effective curriculum},
year = {1991},
issue_date = {March 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {3},
issn = {0001-0782},
url = {https://doi.org/10.1145/102868.102870},
doi = {10.1145/102868.102870},
journal = {Commun. ACM},
month = {mar},
pages = {44–55},
numpages = {12}
}

@inproceedings{10.1145/1384271.1384285,
author = {Goldwasser, Michael H. and Letscher, David},
title = {Teaching an object-oriented CS1 -: with Python},
year = {2008},
isbn = {9781605580784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1384271.1384285},
doi = {10.1145/1384271.1384285},
abstract = {There is an ongoing debate regarding the role of object orientation in the introductory programming sequence. While the pendulum swings to and fro between the "objects first" and "back to basics" extremes, there is general agreement that object-oriented programming is central to modern software development and therefore integral to a computer science curriculum. Developing effective approaches to teach these principles raises challenges that have been exacerbated by the use of Java or C++ as the first instructional language.In this paper, we recommend Python as an excellent choice for teaching an object-oriented CS1. Although often viewed as a "scripting" language, Python is a fully object-oriented language with a consistent object model and a rich set of built-in classes. Based upon our experiences, we describe aspects of the language that help support a balanced introduction to object orientation in CS1. We also discuss the downstream effects on our students' transition to Java and C++ in subsequent courses.},
booktitle = {Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education},
pages = {42–46},
numpages = {5},
keywords = {python, object orientation, cs1},
location = {Madrid, Spain},
series = {ITiCSE '08}
}

@article{10.5555/3533747.3533758,
author = {Jackson, Stoney and Wurst, Karl R.},
title = {Teaching with VS code DevContainers: conference workshop},
year = {2022},
issue_date = {April 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {8},
issn = {1937-4771},
abstract = {A consistent development environment across students and faculty for a course, assignment, or a project is desirable to reduce unintended, time consuming, and frustrating failures that distract from intended learning goals. Faculty and institutions have tried various approaches to reduce these distractions (e.g., labs, laptop requirements, and remote access to servers). These problems are not isolated to academia. Industry also has also been struggling with these issues and has developed various practices and technologies to combat them. Most recently, container technology (e.g., Docker [2]) has emerged as a mechanism for packaging applications into relatively lightweight containers that isolate each application and its dependencies in a way that can be easily distributed to others. Visual Studio Code [4], with its Development Containers [1], has further expanded containers to packaging and distributing development environments customized for development of a specific application. Faculty have begun to leverage this technology to create and distribute to their students independent, lightweight, customized development environments for a particular course, example, or assignment [5, 6].},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {81–82},
numpages = {2}
}

@inproceedings{10.1145/1121341.1121514,
author = {Powers, Kris and Gross, Paul and Cooper, Steve and McNally, Myles and Goldman, Kenneth J. and Proulx, Viera and Carlisle, Martin},
title = {Tools for teaching introductory programming: what works?},
year = {2006},
isbn = {1595932593},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1121341.1121514},
doi = {10.1145/1121341.1121514},
booktitle = {Proceedings of the 37th SIGCSE Technical Symposium on Computer Science Education},
pages = {560–561},
numpages = {2},
keywords = {novice programming environments, introductory programming},
location = {Houston, Texas, USA},
series = {SIGCSE '06}
}

@article{10.1145/271042.271044,
author = {Lee, Greg C. and Wu, Chen-Chih},
title = {On teaching computer literacy to future secondary school teachers},
year = {1997},
issue_date = {June 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/271042.271044},
doi = {10.1145/271042.271044},
abstract = {This paper discusses our experience in teaching computer literacy classes to non-majors with a future career as secondary school teachers. The backgrounds of the students, our teaching philosophy, course organization and conduction as well as the feedbacks from our students are detailed. From the feedbacks it can be seen that the central goal of computer and application literacy is accomplished. Furthermore, students' perceptions of computers has turned from negative to positive.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {2–6},
numpages = {5}
}

@inproceedings{10.1145/3599640.3599661,
author = {Hao, Chen},
title = {Research on the Teaching Reform of Fine Arts Courses in Colleges and Universities Based on the "Online+Offline" Mixed Teaching Mode},
year = {2023},
isbn = {9781450399593},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3599640.3599661},
doi = {10.1145/3599640.3599661},
abstract = {The "online+offline" hybrid teaching mode is a new teaching mode that gives rise to the highly developed scientific and technological level of information and networking in the era. It breaks the time and space constraints in traditional teaching, makes learning forms more diverse, and makes students truly the main body of the classroom. Through the continuous tracking before, during and after class, teachers make students shift from the traditional teaching goal of skill learning in the art classroom to the subject development of improving students' comprehensive art literacy.},
booktitle = {Proceedings of the 9th International Conference on Education and Training Technologies},
articleno = {19},
numpages = {4},
keywords = {reform in education, online+offline, Mixed teaching mode, Art Course},
location = {<conf-loc>, <city>Macau</city>, <country>China</country>, </conf-loc>},
series = {ICETT '23}
}

@article{10.1145/3410631,
author = {Zhou, Ninger and Nguyen, Ha and Fischer, Christian and Richardson, Debra and Warschauer, Mark},
title = {High School Teachers’ Self-efficacy in Teaching Computer Science},
year = {2020},
issue_date = {September 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {3},
url = {https://doi.org/10.1145/3410631},
doi = {10.1145/3410631},
abstract = {Self-efficacy is an important construct for CS teachers’ professional development, because it can predict both teaching behaviors as well as student outcomes. Research has shown that teachers’ self-efficacy can be as influential as their actual level of knowledge and abilities. However, there has been very limited research on CS teachers’ self-efficacy. This study describes the development and implementation of an instrument that measures secondary school teachers’ self-efficacy in teaching computer science. Teachers attended a nine-week hybrid professional development program and completed the computer science teaching self-efficacy instrument. Confirmatory factor analysis validated the self-efficacy instrument, which can be potentially used in other CS education settings. The results also indicated that teachers’ self-efficacy in the content knowledge and pedagogical content knowledge dimensions of teaching computer science significantly increased from participating in the professional development program.},
journal = {ACM Trans. Comput. Educ.},
month = {sep},
articleno = {23},
numpages = {18},
keywords = {secondary education, distributed learning environments, computer science teacher education, computer science education, Self-efficacy}
}

@inproceedings{10.1145/3294016.3294017,
author = {Henderson, Tristan},
title = {Teaching Data Ethics: We're going to ethics the heck out of this},
year = {2019},
isbn = {9781450366311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3294016.3294017},
doi = {10.1145/3294016.3294017},
abstract = {This paper outlines a new Data Ethics &amp; Privacy module that was introduced to computer science students in 2018. The module aims to raise student awareness of current debates in computer science such as bias in artificial intelligence, algorithmic accountability, filter bubbles and data protection, and practical mechanisms for addressing these issues. To do this, the module includes interdisciplinary content from ethics, law and computer science, and also adopts some teaching methods from the law. I describe the format of the module, challenges with module design and approval, some initial comments on the first year's cohort, and plans for future improvements. I believe that the topic is currently important and this discussion might be of interest to other computer science departments considering the introduction of similar content.},
booktitle = {Proceedings of the 3rd Conference on Computing Education Practice},
articleno = {4},
numpages = {4},
keywords = {education, data ethics, algorithmic accountability},
location = {Durham, United Kingdom},
series = {CEP '19}
}

@inproceedings{10.1145/3306500.3306563,
author = {Priscylio, Ghery and Anwar, Sjaeful and Salmawati},
title = {Need of e- integrated science teaching material developed using 4S TMD model for science learning and teaching in junior high school},
year = {2019},
isbn = {9781450366021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3306500.3306563},
doi = {10.1145/3306500.3306563},
abstract = {In this article, we explain the needs of E-integrated science teaching materials in junior high school. As technology develops, integrated science learning also needs to be supported by electronic-based teaching materials. Electronic teaching materials included in this research are the materials such as e-books, e-magazine, e-news, e-journal, CD / DVD interactive multimedia flash models, interactive slides and e-learning. we use a qualitative descriptive research. The instruments of data collection used in this study were structured questions and interview. This study was conducted in junior high schools 29 of Bandung with 4 science teachers and 25 seven-grade students. The teachers and students' structure question responses were analyzed descriptively for each item. Most students wanted more interesting, colorful, pictorial, video loading teaching materials. However, some teachers were not very good at using computers so they have not been able to fulfill students' wishes regarding electronic-based teaching materials. The research findings indicate the need to develop electronic-based teaching materials to meet the shortcomings of interesting teaching materials in integrated science learning. The results of this study are the basis for us in developing integrated electronic-based science teaching materials that can be used in science learning and teaching in junior high schools.},
booktitle = {Proceedings of the 10th International Conference on E-Education, E-Business, E-Management and E-Learning},
pages = {98–102},
numpages = {5},
keywords = {science education, qualitative descriptive research, junior high school, e- integrated science teaching material, 4S TMD models},
location = {Tokyo, Japan},
series = {IC4E '19}
}

@inproceedings{10.1145/3294016.3294031,
author = {Boisvert, Charles},
title = {Teaching relational database fundamentals: a lack-of-progress report},
year = {2019},
isbn = {9781450366311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3294016.3294031},
doi = {10.1145/3294016.3294031},
abstract = {This paper describes and evaluates changes introduced in six successive years teaching a relational databases module. We explain how we plan to obtain some certainty on the value of interventions. Using an archive of data over the period, we find some interventions that should not be repeated. We also show that most changes introduced did not significantly improve students' learning, contrary to expectations. Instead, factors that were ignored had more influence on performance that factors we attempted to affect.},
booktitle = {Proceedings of the 3rd Conference on Computing Education Practice},
articleno = {8},
numpages = {4},
keywords = {quasi-experiment, Database Systems, Computer Science Education},
location = {Durham, United Kingdom},
series = {CEP '19}
}

@inproceedings{10.1145/3633083.3633192,
author = {Addo, Salomey Afua and Sentance, Sue},
title = {Teachers' Motivation for Teaching AI in K-12 settings},
year = {2023},
isbn = {9798400716461},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3633083.3633192},
doi = {10.1145/3633083.3633192},
abstract = {There is a growing consensus that both teachers and students have to understand AI and be able to appraise the trustworthiness of AI technologies used in classrooms. This could be achieved, to some extent, through the promotion of AI literacy in K-12. This poster describes a qualitative study investigating teachers’ motivation to teach AI in K-12 settings. Eight teachers were interviewed about their experiences and knowledge of AI. Using the lens of self-determination theory (SDT), we reveal variations in teachers’ motivation to teach AI in K-12.},
booktitle = {Proceedings of the 2023 Conference on Human Centered Artificial Intelligence: Education and Practice},
pages = {43},
numpages = {1},
keywords = {K-12 education, artificial intelligence, human centered AI, motivation, self-determination theory},
location = {<conf-loc>, <city>Dublin</city>, <country>Ireland</country>, </conf-loc>},
series = {HCAIep '23}
}

@inproceedings{10.1145/266057.266183,
author = {Carlsson, Rolf and Karlsson, G\"{o}ran and Olsen, Bengt},
title = {Networked PBL teaching the teacher on flexible learning (poster)},
year = {1997},
isbn = {1581130120},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/266057.266183},
doi = {10.1145/266057.266183},
booktitle = {The Supplemental Proceedings of the Conference on Integrating Technology into Computer Science Education: Working Group Reports and Supplemental Proceedings},
pages = {147},
location = {Uppsala, Sweden},
series = {ITiCSE-WGR '97}
}

@inproceedings{10.1145/378239.378477,
author = {Ozguner, Fusun and Marhefka, Duane and DeGroat, Joanne and Wile, Bruce and Stofer, Jennifer and Hanrahan, Lyle},
title = {Teaching future verification engineers: the forgotten side of logic design},
year = {2001},
isbn = {1581132972},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/378239.378477},
doi = {10.1145/378239.378477},
abstract = {This paper describes a senior/graduate level course in hardware logic verification being offered by The Ohio State University in cooperation with IBM. The need for the course is established through the growing importance of logic verification to users of custom logic designs. We discuss the short-term and long-term goals for the course, and describe the course content and format. The course relies heavily on lab projects to illustrate the main concepts. Three projects and a final project review are described.},
booktitle = {Proceedings of the 38th Annual Design Automation Conference},
pages = {253–255},
numpages = {3},
location = {Las Vegas, Nevada, USA},
series = {DAC '01}
}

@inproceedings{10.1145/191029.191187,
author = {McCormick, John W. and Culwin, Fintan and DeLillo, Nicholas J. and Feldman, Michael B. and Pattis, Richard and Savitch, Walter J.},
title = {Teaching Ada by the book: the pedagogy of Ada in CS1},
year = {1994},
isbn = {0897916468},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/191029.191187},
doi = {10.1145/191029.191187},
booktitle = {Proceedings of the Twenty-Fifth SIGCSE Symposium on Computer Science Education},
pages = {385–386},
numpages = {2},
location = {Phoenix, Arizona, USA},
series = {SIGCSE '94}
}

@inproceedings{10.1145/3017680.3022399,
author = {Hubbard, Aleata and Kao, Yvonne},
title = {Computer Science Teaching Knowledge: A Framework and Assessment (Abstract Only)},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3022399},
doi = {10.1145/3017680.3022399},
abstract = {Educators, researchers, politicians, tech companies, and others continue to advocate for the importance of K-12 students learning computer science in our increasingly tech-driven society. One way school districts in the United States address this growing demand is by allowing teachers certified in other disciplines to lead computer science courses. Summer and weekend professional development opportunities support these educators in developing the expertise needed for effective computer science teaching, but a great portion of their learning to teach computer science will occur through on-the-job experiences. Our four-year NSF EHR grant explores how a job-embedded professional development program that pairs high school teachers with tech industry professionals supports educators in acquiring computer science teaching knowledge. The research presented in this poster focuses on the third year of the study and includes (a) a theoretical component focused on creating a framework to explain on-the-job computer science teaching knowledge development based on case studies with six teachers, and (b) an empirical component focused on the creation and administration of a computer science teaching knowledge assessment. By the time of the SIGCSE symposium, we expect to have pre-test results from the first administration of our teaching knowledge assessment, completed by both high school teachers and their collaborating tech industry professionals. This poster will present our theoretical framework, resultant teaching knowledge assessment with sample items, and analysis of participants' assessment responses and their relationship to specific teaching experiences.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {709},
numpages = {1},
keywords = {professional development, pedagogical content knowledge, partnerships, high school teachers},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@inproceedings{10.1145/1007996.1008070,
author = {Zur, Ela and Vilner, Tamar},
title = {Teaching certificate in computer science: didactics workshop},
year = {2004},
isbn = {1581138369},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1007996.1008070},
doi = {10.1145/1007996.1008070},
abstract = {Among the prominent characteristics of the Open University of ... is its teaching method: self-study through distance learning. Students from all parts of the country pursue various degrees at the University and the majority utilize advanced technologies for their studies. We will describe the curriculum for a teaching certificate in Computer Science, particularly the course "Methodology of Computer Science Teaching" which utilizes multi-media technologies expressly developed for distance learning.},
booktitle = {Proceedings of the 9th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {240},
numpages = {1},
keywords = {teaching certificate, teachers, didactics workshop},
location = {Leeds, United Kingdom},
series = {ITiCSE '04}
}

@inproceedings{10.5555/2484920.2485086,
author = {Torrey, Lisa and Taylor, Matthew},
title = {Teaching on a budget: agents advising agents in reinforcement learning},
year = {2013},
isbn = {9781450319935},
publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
address = {Richland, SC},
abstract = {This paper introduces a teacher-student framework for reinforcement learning. In this framework, a teacher agent instructs a student agent by suggesting actions the student should take as it learns. However, the teacher may only give such advice a limited number of times. We present several novel algorithms that teachers can use to budget their advice effectively, and we evaluate them in two experimental domains: Mountain Car and Pac-Man. Our results show that the same amount of advice, given at different moments, can have different effects on student learning, and that teachers can significantly affect student learning even when students use different learning methods and state representations.},
booktitle = {Proceedings of the 2013 International Conference on Autonomous Agents and Multi-Agent Systems},
pages = {1053–1060},
numpages = {8},
keywords = {reinforcement learning, agent teaching, advice taking},
location = {St. Paul, MN, USA},
series = {AAMAS '13}
}

@inproceedings{10.1145/3626252.3630940,
author = {Mohammed, Mostafa and A. Shaffer, Clifford},
title = {Teaching Formal Languages through Programmed Instruction},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630940},
doi = {10.1145/3626252.3630940},
abstract = {The content in Formal Languages courses is mathematical in nature, and requires students to engage with proofs and algorithms to grasp core concepts. Conventional textbooks on Formal Languages predominantly employ textual explanations, with assignments often entailing manual problem solving. Some educators incorporate tools like JFLAP, which helps students construct models and apply algorithms to enhance interaction with the subject matter. However, students must put considerable effort into reading and solving problems manually to reach comprehension. Drawing inspiration from the Programmed Instruction (PI) teaching methodology, we have developed an innovative eTextbook for Formal Languages that facilitates better understanding of these ideas. The PI approach requires students to read a bit, ideally a sentence or paragraph, and then answer a question or complete an exercise related to that information. Depending on their response, students can progress to subsequent information frames or re-attempt the exercise. Our objective is to present the entirety of a Formal Languages curriculum through the PI approach. To evaluate the pedagogical effectiveness of our new eTextbook, we conducted a survey to ask students for their feedback on their experience with the Programmed Instruction etextbook. We also conducted performance evaluations on two offerings of the Formal Languages course. Students' grades are compared to assess learning gains between visualizations with exercises, and with PI frames. The evaluation shows that the Programmed Instruction ebook improved students' grades in almost all topics covered by the ebook.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {867–873},
numpages = {7},
keywords = {formal languages, opendsa, programmed instruction, visualizations},
location = {<conf-loc>, <city>Portland</city>, <state>OR</state>, <country>USA</country>, </conf-loc>},
series = {SIGCSE 2024}
}

@article{10.1145/3603718,
author = {Hong, Jason I.},
title = {Teaching the FATE Community about Privacy},
year = {2023},
issue_date = {August 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {66},
number = {8},
issn = {0001-0782},
url = {https://doi.org/10.1145/3603718},
doi = {10.1145/3603718},
abstract = {The Communications website, https://cacm.acm.org, features more than a dozen bloggers in the BLOG@CACM community. In each issue of Communications, we'll publish selected posts or excerpts.twitterFollow us on Twitter at http://twitter.com/blogCACMhttps://cacm.acm.org/blogs/blog-cacmJason Hong finds many similarities between FATE (Fairness, Accountability, Transparency, Ethics) and privacy.},
journal = {Commun. ACM},
month = {jul},
pages = {10–11},
numpages = {2}
}

@inproceedings{10.1145/3478432.3499169,
author = {Gregg, Chris and Strange, Laney},
title = {Teaching Track Faculty in Computer Science},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499169},
doi = {10.1145/3478432.3499169},
abstract = {Many computer science departments have chosen to hire faculty to teach in teaching-track positions that parallel the standard tenure-track position, providing the possibility of promotion, longer-term contracts, and higher pay for excellence in teaching and service. This birds-of-a-feather is designed to gather educators, both experienced and new to teaching track positions, who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information. This year, we plan on discussing challenges we face in continuing- / post-COVID-19 classrooms, and lessons-learned from over a year of pandemic teaching. We will also celebrate our teaching and career successes from the past two years of teaching.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1189},
numpages = {1},
keywords = {teaching faculty, teaching, pedagogy},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3417990.3418744,
author = {Gogolla, Martin and Selic, Bran},
title = {On teaching descriptive and prescriptive modeling},
year = {2020},
isbn = {9781450381352},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3417990.3418744},
doi = {10.1145/3417990.3418744},
abstract = {Models may be used for purposes relating (a) to understanding, predicting, and communicating model aspects, and (b) to implementing the model and capturing the design intent. Models that are primarily used for understanding, predicting and communicating are referred to as descriptive models, whereas models mainly used for implementation are called prescriptive models. This contribution focuses on teaching both the common and the distinguishing aspects of the two model categories. We start with an example for a general descriptive and prescriptive model, independent of particular software modeling languages, and continue to discuss an example demonstrating how UML and OCL can be applied for specifying both a descriptive and a prescriptive model. Finally, we discuss essentials to be learned from this teaching venture.},
booktitle = {Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings},
articleno = {23},
numpages = {9},
keywords = {prescriptive model, descriptive model, UML and OCL model},
location = {Virtual Event, Canada},
series = {MODELS '20}
}

@inproceedings{10.1145/3328778.3372521,
author = {Gregg, Chris and Lupoli, Shawn and Strange, Laney},
title = {Teaching Track Faculty in Computer Science},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372521},
doi = {10.1145/3328778.3372521},
abstract = {Many computer science departments have chosen to hire faculty to teach in teaching-track positions that parallel the standard tenure-track position, providing the possibility of promotion, longer-term contracts, and higher pay for excellence in teaching and service. This birds-of-a-feather is designed to gather educators, both experienced and new to teaching track positions, who are currently in such a position to share their experiences as members of the faculty of their departments and schools, and to provide opportunities for schools considering such positions to gather information. This year, we plan on discussing teaching load, particularly as it relates to expanding class sizes and limited budgets for teaching staff support (e.g., TAs, graders, etc.). We will also discuss office hours strategies for both faculty and TAs in light of the same large class-size concerns.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1408},
numpages = {1},
keywords = {teaching-track-faculty, teaching load, teaching, pedagogy, lecturers, class-size},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.5555/3242181.3242551,
author = {Murrugarra, Ruth I. and Wallace, William A.},
title = {Agent-based simulation for teaching ethics},
year = {2017},
isbn = {9781538634271},
publisher = {IEEE Press},
abstract = {The present work discusses the use of NetLogo, an agent-based simulation software, as a tool to teach ethics modeling as part of an ethics course. It allows students to define and describe the behavioral rules of agents under different ethical theories through agent-based simulation and learn and assess the consequences of such ethical behaviors. Several simulations developed by the students along with their principal findings are presented.},
booktitle = {Proceedings of the 2017 Winter Simulation Conference},
articleno = {350},
numpages = {8},
location = {Las Vegas, Nevada},
series = {WSC '17}
}

@inproceedings{10.1145/3085585.3085588,
author = {Gardner, William B.},
title = {Should We Be Teaching Parallel Programming?},
year = {2017},
isbn = {9781450350662},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3085585.3085588},
doi = {10.1145/3085585.3085588},
abstract = {This paper reflects on seven years of experience teaching parallel programming at the undergraduate level in Ontario. A rationale is given for incorporating the topic into the CS curriculum, and essential content is identified. Two contrasting approaches are described: integration into core courses vs. standalone elective. Advantages of using the author's Pilot library to teach message-passing programming are presented.},
booktitle = {Proceedings of the 22nd Western Canadian Conference on Computing Education},
articleno = {3},
numpages = {7},
keywords = {multicore, high performance computing, computer science education, Parallel programming},
location = {Abbotsford, BC, Canada},
series = {WCCCE '17}
}

@article{10.5555/3055338.3079049,
author = {Lee, Young and Marepalli, Dhanunjaya Bhargavan and Yang, Jeong},
title = {Teaching test-drive development using Dojo},
year = {2017},
issue_date = {April 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {4},
issn = {1937-4771},
abstract = {Teaching Test-Driven Development (TDD) to the students is challenging. TDD is best learned when it is actually performed rather than read about. Especially when the students are novice to TDD, starting by writing a test first seems to be extremely hard, and proceeding with the small steps that the TDD cycle requires often demands explicit guidance. Coding Dojo is a dynamic and collaborative activity where people can practice programming, especially techniques related to agile methods. This paper discusses the two experiments conducted to find out how Coding Dojo methodology improves the code coverage of students programming and how it improves motivation in students to learn TDD.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {106–112},
numpages = {7}
}

@article{10.5555/2184451.2184461,
author = {Abelson, Hal and Mustafaraj, Eni and Turbak, Franklyn and Morelli, Ralph and Uche, Chinma},
title = {Lessons learned from teaching App Inventor},
year = {2012},
issue_date = {June 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {6},
issn = {1937-4771},
abstract = {App Inventor is a visual programming environment developed at Google and now freely available from MIT's Center for Mobile Learning that enables students with no previous programming background to build apps for Android mobile devices. The panelists will describe their experiences with using App Inventor in a variety of computer science courses.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {39–41},
numpages = {3}
}

@inproceedings{10.1145/2247569.2247572,
author = {Anderson, Nicole and Gegg-Harrison, Tim},
title = {Pair2 learning = pair programming \texttimes{} pair teaching},
year = {2012},
isbn = {9781450314077},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2247569.2247572},
doi = {10.1145/2247569.2247572},
abstract = {Pair programming is a frequently cited method for retaining students and improving student learning in introductory Computer Science courses. When pair programming is employed early in the curriculum, students work together to learn to program more effectively and also enjoy the programming process more than when working alone. With pair teaching, the pairing concept is applied to the teachers instead of the students. Studies have shown that pair teaching has a number of benefits for the teachers, however, there has been little attention paid to the effect of pair teaching on student learning. The purpose of this paper is to report on our experience with pair teaching and its positive benefits to student learning. We have found that students appreciate getting two perspectives on course materials, feel they are getting additional beneficial one-on-one time with instructors, and also simply enjoy the diversity of having two instructors.},
booktitle = {Proceedings of the Seventeenth Western Canadian Conference on Computing Education},
pages = {2–6},
numpages = {5},
keywords = {retention, pair teaching, pair programming, introductory computer science, collaborative learning},
location = {Vancouver, British Columbia, Canada},
series = {WCCCE '12}
}

@inproceedings{10.1145/2157136.2157310,
author = {Rabkin, Ariel S. and Reiss, Charles and Katz, Randy and Patterson, David},
title = {Experiences teaching MapReduce in the cloud},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157310},
doi = {10.1145/2157136.2157310},
abstract = {We describe our experiences teaching MapReduce in a large undergraduate lecture course using public cloud services. Using the cloud, every student could carry out scalability benchmarking assignments on realistic hardware, which would have been impossible otherwise. Over two semesters, over 500 students took our course. We believe this is the first large-scale demonstration that it is feasible to use pay-as-you-go billing in the Cloud for a large undergraduate course. Modest instructor effort was sufficient to prevent students from overspending. Average per-pupil expenses in the Cloud were under $45, less than half our available grant funding. Students were excited by the assignment: 90% said they thought it should be retained in future course offerings.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {601–606},
numpages = {6},
keywords = {mapreduce, education, cloud computing},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/2047594.2047620,
author = {Wang, Ye Diana},
title = {Teaching web development at a distance},
year = {2011},
isbn = {9781450310178},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2047594.2047620},
doi = {10.1145/2047594.2047620},
abstract = {Distance education (DE) is proliferating with no signs of slowing down. This paper aims to fill the gap of lacking literature by providing instructional details of teaching a Web development course in the format of asynchronous DE and offering practical instructional strategies. The unique contribution of this paper lies in exemplifying the online delivery of a highly technical course that has been traditionally taught in face-to-face settings, as well as the application of problem-based learning (PBL) methods to DE.},
booktitle = {Proceedings of the 2011 Conference on Information Technology Education},
pages = {91–96},
numpages = {6},
keywords = {web development, problem-based learning, pedagogy, eLearning, distance education},
location = {West Point, New York, USA},
series = {SIGITE '11}
}

@inproceedings{10.5555/2500753.2500782,
author = {Mohammadi, Masi},
title = {Teaching existing homes to be connected},
year = {2011},
publisher = {Singapore Therapeutic, Assistive &amp; Rehabilitative Technologies (START) Centre},
address = {Midview City, SGP},
abstract = {The rapid aging and aging-in-place policies of the Dutch population has brought an increase in the demand for suitable dwellings. Domotics defined as: the advanced technological equipments and services in the domestic environment to sustain and to enhance the quality of aging in place as well as the empowerment of the senior citizen (in daily life) can contribute significantly to this issue.Literature reviews, qualitative and quantitative empirical studies carried out in a PhD-research [6] have formed the basis of this paper. The research seeks to:(i) Provide an overview of the multiplicity of the needs and attitudes of the older citizens regarding smart technology in their domestic environment(ii) Provide information in regards to the development of domotic technology in the living environment of the senior citizens,(iii) Assesses indicators of integrated and intelligent homes as perceived by the professional key stakeholders(iv) Develop strategies and recommendations to incorporate intelligent technology in the architectural structure of the existing dwellings.(v) Validate the developed strategies in an empirical case study (DCA-homes).This paper focuses on the last phase of the research and in particular on the product development process of a smart-wall to solve the infrastructural problem of the implementation of domotics in the existing homes to empower the senior citizens to age in their own place.Here the idea and emphasis is not on the implementation of the DCA Wall (secondary wall) but more on the implications and advantages it has in the implementation of domotic appliances which will be then used by the elderly resident to aid his/her living style.},
booktitle = {Proceedings of the 5th International Conference on Rehabilitation Engineering &amp; Assistive Technology},
articleno = {25},
numpages = {4},
keywords = {upgrading existing homes, senior citizens, residential needs, domotics, case study, aging in place},
location = {Bangkok, Thailand},
series = {i-CREATe '11}
}

@inproceedings{10.1145/1989622.1989625,
author = {McMaster, George and Zastre, Michael},
title = {More concepts for teaching introductory programming},
year = {2011},
isbn = {9781450307925},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1989622.1989625},
doi = {10.1145/1989622.1989625},
abstract = {In 2007, one of the authors visited several Computer Science departments in Western Canada in an attempt to understand some of the challenges that are facing in the teaching of introductory programming. This investigation culminated in a presentation at WCCCE08 in Victoria. A certain ever-present challenge is the moving pedagogical models from the "imperative-programming first" to the "objects first" approach. Some departments kept Pascal as their CS1 course with Java kept for CS2, and this was an attempt to address challenges students (and instructors) had learning newer paradigms. An example of such a challenge is inheritance, and the authors found many students find it a challenge to understand, effectively design and implement inheritance in their programs. This paper offers several contributions. We introduce a notation called a Composite Inheritance Diagram or CID that can enable a student to understand inheritance in a way that is closer to their own intuition. An enhanced box-diagramming methodology will be demonstrated which makes clear the difference between a procedure method and a functional method, of how a method transfers control and returns to a calling location, and of how memory overhead is present in recursive programs. Finally we revisit the role played by natural language in creating identifiers, comments and program documentation in a way that can suggest to students their importance in guiding software designers and developers.},
booktitle = {Proceedings of the 16th Western Canadian Conference on Computing Education},
pages = {7–11},
numpages = {5},
location = {Prince George, British Columbia, Canada},
series = {WCCCE '11}
}

@inproceedings{10.1145/3258446,
author = {Zhang, Jian},
title = {Session details: Peer teaching and tutoring},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3258446},
doi = {10.1145/3258446},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/1741906.1742212,
author = {Kanitkar, Hema and Mhapankar, Umesh and Barreto, Fabian T. R.},
title = {Challenges in teaching RF circuit design},
year = {2010},
isbn = {9781605588124},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1741906.1742212},
doi = {10.1145/1741906.1742212},
abstract = {Wireless access has become an integral and vital component of our modern life. We are witnessing a wireless revolution in terms of the number and type of wireless applications. Wireless technology has made tremendous advancements in the last decade, as is obvious when one looks at the cellular generation advancements from 1G to the 4G. At the heart of all these innovations and growth are the Radio Frequency (RF) standards and technologies that are converging to deliver a whole host of new functionality and capabilities. There is a huge demand for industry-ready RF engineering graduates. Mumbai University has introduced a course on RF Circuit Design for Electronics and Telecommunications senior undergraduate students. This paper describes the challenges in teaching the course in terms of the explication of RF theories and circuit design so as to help the students internalize engineering concepts and build sound domain knowledge.},
booktitle = {Proceedings of the International Conference and Workshop on Emerging Trends in Technology},
pages = {1017},
numpages = {1},
location = {Mumbai, Maharashtra, India},
series = {ICWET '10}
}

@article{10.5555/1409823.1409863,
author = {Polack-Wahl, Jennifer A.},
title = {Game development, social responsibility, and teaching},
year = {2008},
issue_date = {December 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {2},
issn = {1937-4771},
abstract = {Video games are part of a powerful cultural industry that influences many people; therefore, educators and society cannot ignore that video games are here to stay. Professors should educate future developers to create games that entertain their audience and are socially responsible. This paper describes some industry viewpoints on social responsibility by game programmers, some examples of games that are socially responsible, and finally, how to create a game programming course that promotes social responsibility.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {196–203},
numpages = {8}
}

@inproceedings{10.1145/1140124.1140247,
author = {Assun\c{c}\~{a}o, Lu\'{\i}s and Os\'{o}rio, Ant\'{o}nio Lu\'{\i}s},
title = {Teaching web services using .NET platform},
year = {2006},
isbn = {1595930558},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1140124.1140247},
doi = {10.1145/1140124.1140247},
abstract = {Teaching Web Services concepts, standards and technologies is a difficult and a long process if we have not chosen the right tools [1]. Nowadays there are several open source tools and platforms, but some of them are not suitable to teach.This poster describes our experience by using Microsoft .NET platform and Visual Studio .NET with Web Services Enhancements (WSE) to teach basic Web Services concepts and related technologies.},
booktitle = {Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {339},
numpages = {1},
keywords = {web services interoperability (WS-I), web services, simple object access protocol (SOAP), interface description language (WSDL)},
location = {Bologna, Italy},
series = {ITICSE '06}
}

@inproceedings{10.1145/1140124.1140201,
author = {Hood, Dennis J. and Hood, Cynthia S.},
title = {Teaching software project management using simulations},
year = {2006},
isbn = {1595930558},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1140124.1140201},
doi = {10.1145/1140124.1140201},
abstract = {It is increasingly recognized that project management is an important aspect of the computing curriculum. Since many students do not have project experience, it is important to provide this in conjunction with project management concepts. This paper describes our experiences with various project simulations. In particular, we developed a LEGO® bridge building project to teach students how to measure progress and manage change.},
booktitle = {Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {289–293},
numpages = {5},
keywords = {software project management, project simulation, metrics, earned value analysis, change management, LEGO®},
location = {Bologna, Italy},
series = {ITICSE '06}
}

@inproceedings{10.1145/1134285.1134396,
author = {Hazzan, Orit and Dubinsky, Yael},
title = {Teaching framework for software development methods},
year = {2006},
isbn = {1595933751},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1134285.1134396},
doi = {10.1145/1134285.1134396},
abstract = {In this paper we suggest a framework for teaching software development methods (SDMs). Specifically, based on our accumulative research and in-practice experience of teaching SDMs, a set of principles, that guides our teaching of SDMs in different settings and teaching experiences, has been formulated. The teaching framework consists of 14 principles that their actual implementation is varied and adjusted in different teaching environments. This paper outlines the principles and addresses their contribution to learners' understanding of the said software development method.},
booktitle = {Proceedings of the 28th International Conference on Software Engineering},
pages = {703–706},
numpages = {4},
keywords = {teaching, software engineering education, software engineering, software development methods, learning, constructivism, active learning},
location = {Shanghai, China},
series = {ICSE '06}
}

@inproceedings{10.1145/1067445.1067509,
author = {Goold, Annegret and Coldwell, Jo},
title = {Teaching ethics in a virtual classroom},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067509},
doi = {10.1145/1067445.1067509},
abstract = {This paper describes an ethics course that is a capstone course in the undergraduate computing degree at Deakin University. What distinguishes this course from others is that it has a fairly large enrolment of students and it is delivered completely online. The students enrolled in the course come from a variety of backgrounds and many are international students for whom English is not their first language. The paper describes the course, how it has evolved over a five-year period and discusses the rationale and particulars of course content and implementation in the 'virtual classroom'. Some of the challenges and issues for teaching a course of this type are discussed. Suggestions are offered for faculty who are considering the implementation of a similar course online.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {232–236},
numpages = {5},
keywords = {virtual classes, online courses, ethics, computing curriculum},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@article{10.5555/1040151.1040176,
author = {Rupf, John A.},
title = {Teaching the history of computing (painlessly)},
year = {2004},
issue_date = {December 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {2},
issn = {1937-4771},
abstract = {Knowledge about the history of computing can provide students with a broad perspective and valuable insights into the "real world" and how things came to be the way that they are. However, there is precious little time in today's crowded computer science curriculum to devote to this subject matter. This paper investigated a leaning technique in which a significant "history component" was added to a computer architecture course. The students studied the history component entirely on their own and completely outside the classroom. An analysis of student opinions indicates that the students greatly appreciated the opportunity to learn about the history of computing and that the technique was very successful -- and is likely to be equally applicable in other academic areas.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {212–218},
numpages = {7}
}

@inproceedings{10.1145/1059524.1059526,
author = {Whitman, Michael E. and Mattord, Herbert J.},
title = {Designing and teaching information security curriculum},
year = {2004},
isbn = {1595930485},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1059524.1059526},
doi = {10.1145/1059524.1059526},
abstract = {With increasing interest by students and faculty in Information Security Curriculum, and increasing demand for information security professionals from industry, many institutions are beginning the task of creating a meaningful information security program. Whether the institution desires a single course, or an entire set of coursework, it is important that the faculty and administrators designing the curriculum follow an establish methodology and research the unique demands of this new and exciting field. This paper provides an overview of such a methodology.},
booktitle = {Proceedings of the 1st Annual Conference on Information Security Curriculum Development},
pages = {1–7},
numpages = {7},
keywords = {information security curriculum, information security, information assurance curriculum, information assurance, curriculum instruction, curriculum development},
location = {Kennesaw, Georgia},
series = {InfoSecCD '04}
}

@inproceedings{10.1145/1050330.1050419,
author = {Jablonowski, Janusz},
title = {Some remarks on teaching of programming},
year = {2004},
isbn = {9549641384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1050330.1050419},
doi = {10.1145/1050330.1050419},
abstract = {In this paper we give some remarks on the problem of teaching programming for the first year students at the undergraduate level. The remarks are based on the experience gained by the author through several years of teaching programming at the Warsaw University. The main issue discussed in this paper concerns the choice of the programming language for the first course in programming. Earlier the language of choice in many places around the world was Pascal or C. Then some universities decided to switch to C++. Nowadays many introductory courses are taught in Java or C#. We try in this paper to advocate the choice of Pascal.},
booktitle = {Proceedings of the 5th International Conference on Computer Systems and Technologies},
pages = {1–6},
numpages = {6},
keywords = {teaching of programming, smalltalk, programming languages, Pascal, Java, C++, C#, C},
location = {Rousse, Bulgaria},
series = {CompSysTech '04}
}

@inproceedings{10.1145/611892.611974,
author = {Baldwin, Doug},
title = {A compiler for teaching about compilers},
year = {2003},
isbn = {158113648X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/611892.611974},
doi = {10.1145/611892.611974},
abstract = {Projects in which students write a small compiler are common in compiler design courses, but even a small compiler can be daunting to students with no prior compiler-writing experience. When I recently taught compiler design, I developed a very small language with a highly modular compiler, focusing the project on implementing the core parts of a compiler without requiring students to build all the infrastructure from scratch. This paper describes the language and its compiler, and their successes (and occasional limitations) for teaching compiler design.},
booktitle = {Proceedings of the 34th SIGCSE Technical Symposium on Computer Science Education},
pages = {220–223},
numpages = {4},
keywords = {object oriented programming, educational projects, design patterns, compiler design},
location = {Reno, Navada, USA},
series = {SIGCSE '03}
}

@inproceedings{10.1145/375735.376416,
author = {Williams, Andrew B. and Ren, Zijian},
title = {Agents teaching agents to share meaning},
year = {2001},
isbn = {158113326X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/375735.376416},
doi = {10.1145/375735.376416},
abstract = {The promise of intelligent agents acting on behalf of users' personalized knowledge sharing needs may be hampered by the insistence that these agents begin with a predefined, common ontology instead of personalized, diverse ontologies. Only until recently have researchers diverged from the last decades common “ontology paradigm” to a paradigm involving agents that can share knowledge using diverse ontologies. This paper describes how we address this agent knowledge sharing problem of how agents deal with diverse ontologies by introducing a methodology and algorithms for multi- agent knowledge sharing and learning. We demonstrate how this approach will enable multi- agent systems to assist groups of people in locating, translating, and sharing knowledge using our Distributed Ontology  Gathering Group Integration Environment (DOGGIE) and describe our proof- of- concept experiments. DOGGIE synthesizes agent communication, machine learning, and reasoning for information sharing in the Web domain.},
booktitle = {Proceedings of the Fifth International Conference on Autonomous Agents},
pages = {465–472},
numpages = {8},
keywords = {knowledge acquisition and management, information agents, adaptation and learning},
location = {Montreal, Quebec, Canada},
series = {AGENTS '01}
}

@inproceedings{10.1145/349316.349395,
author = {Guimaraes, Mario A. M.},
title = {Experience teaching an introduction to DBMS},
year = {1999},
isbn = {9781450373258},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/349316.349395},
doi = {10.1145/349316.349395},
abstract = {This paper describes the methodology used to teach an introductory Database Management System course. Although all content description refers exclusively to this class, the methodology can be used to teach other computer science courses. There are several unique aspects of the course. Students do a preliminary presentation and a final presentation of their projects. During the preliminary presentation, they perform the role of the client (inversion of roles); while during the final presentation, the class performs the role of the client and students evaluate their colleagues.},
booktitle = {Working Group Reports from ITiCSE on Innovation and Technology in Computer Science Education},
pages = {48–49},
numpages = {2},
location = {<conf-loc>, <city>Cracow</city>, <country>Poland</country>, </conf-loc>},
series = {ITiCSE-WGR '99}
}

@inproceedings{10.1145/289393.289409,
author = {Pearson, Murray and Jesshope, Chris},
title = {Multi-campus teaching using computer networks},
year = {1998},
isbn = {158113018X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/289393.289409},
doi = {10.1145/289393.289409},
booktitle = {Proceedings of the 3rd Australasian Conference on Computer Science Education},
pages = {106–111},
numpages = {6},
location = {The University of Queensland, Australia},
series = {ACSE '98}
}

@inproceedings{10.1145/1275182.1275198,
author = {Lemus, Lenin and Pont, Ana},
title = {Teaching methodology at the EUI-FI},
year = {1998},
isbn = {9781450347365},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1275182.1275198},
doi = {10.1145/1275182.1275198},
booktitle = {Proceedings of the 1998 Workshop on Computer Architecture Education},
pages = {16–es},
series = {WCAE '98}
}

@inproceedings{10.1145/107004.107071,
author = {Higginbotham, C. William and Morelli, Ralph},
title = {A system for teaching concurrent programming},
year = {1991},
isbn = {0897913779},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/107004.107071},
doi = {10.1145/107004.107071},
booktitle = {Proceedings of the Twenty-Second SIGCSE Technical Symposium on Computer Science Education},
pages = {309–316},
numpages = {8},
location = {San Antonio, Texas, USA},
series = {SIGCSE '91}
}

@inproceedings{10.1145/107004.107016,
author = {Fritz, Jane M.},
title = {HyperCard applications for teaching information systems},
year = {1991},
isbn = {0897913779},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/107004.107016},
doi = {10.1145/107004.107016},
booktitle = {Proceedings of the Twenty-Second SIGCSE Technical Symposium on Computer Science Education},
pages = {55–61},
numpages = {7},
location = {San Antonio, Texas, USA},
series = {SIGCSE '91}
}

@article{10.1145/15003.15016,
author = {Moffat, David V},
title = {Teaching a modern data structures course},
year = {1986},
issue_date = {Dec. 1986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/15003.15016},
doi = {10.1145/15003.15016},
journal = {SIGCSE Bull.},
month = {dec},
pages = {57–64},
numpages = {8}
}

@inproceedings{10.1145/800067.802122,
author = {Thorton, John},
title = {Alternatives to teaching introductory short courses},
year = {1982},
isbn = {0897910885},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800067.802122},
doi = {10.1145/800067.802122},
abstract = {As the number of new computer users grows, it becomes increasingly difficult to give introductory short courses to everyone. In the past, we have dealt with this by offering more and more sections each semester. When all the sections fill up, we schedule an additional section (and end up, it seems, teaching all the time). Even then, people come to other short courses without the “Introduction to Timesharing” prerequisite; or they say, “I couldn't fit any of your 5 sections into my schedule.”To alleviate the pressures of teaching many sections (and to allow our students even more scheduling freedom), we at SUACC have tried several alternatives, such as tutorial programs and more printed material. This paper describes some of the alternatives and combinations of alternatives we have experimented with. Some were successful, some not. While we are still experimenting, we have found a combination which seems to please the students, while saving staff time.},
booktitle = {Proceedings of the 10th Annual ACM SIGUCCS Conference on User Services},
pages = {220–226},
numpages = {7},
location = {Chicago, Illinois, USA},
series = {SIGUCCS '82}
}

@article{10.1145/382186.382580,
author = {Embley, David W.},
title = {Teaching disciplined Fortran programming via unfort},
year = {1978},
issue_date = {June 1978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {10},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/382186.382580},
doi = {10.1145/382186.382580},
abstract = {This short note describes UNFORT (University of Nebraska FORTRAN), 
briefly mentions howit is used in teaching disciplined FORTRAN programming, and announces that a portable UNFORT perprocessor is available.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {34–38},
numpages = {5}
}

@article{10.1145/382220.382470,
author = {Mavaddat, F.},
title = {An experiment in teaching programming languages},
year = {1976},
issue_date = {June 1976},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/382220.382470},
doi = {10.1145/382220.382470},
abstract = {To alleviate some difficulties involved in teaching programming in an  introductory course, a simple programmable machine of mechanical nature with a small set of very tangible instructions is proposed. All the necessary concepts such as sequencing, looping, sub-routines and declarative statements are introduced in the framework of this machine. A number of examples are discussed which illustrate the use of this programmable machine. It is argued that a simplified version ofmost programming language is easily teachable by relating the simplified language to the concepts developed for this machine. A simplified version of Fortran is treated as an illustration.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {45–59},
numpages = {15}
}

@article{10.5555/3637036.3637055,
author = {Dey, Pradip Peter and Amin, Mohammad and Sinha, Bhaskar Raj and Badkoobehi, Hassan},
title = {A Teaching Strategy for Undecidable Problems},
year = {2023},
issue_date = {October 2023},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {39},
number = {4},
issn = {1937-4771},
abstract = {Important computational studies of undecidable problems started with Allen Turing's 1936 proof that the halting problem is undecidable. This means that there is no algorithm that can correctly answer the halting problem for all possible computer programs. Subsequently many interesting problems are added to the list of undecidable problems. Understanding the concept of un-decidability is important for learning the scope and limitations of computing. One of the requirements for teaching undecidable computing problems is to go through the major steps of the proof in order to convince the learners that the proven theorem is true forever demonstrating that the problem is not decidable. The rigorous proofs of undecidable problems are composed of logical steps. We suggest that discussion of intuitive abstractions with explanations of some examples before presenting logical abstractions works better for teaching/learning purposes. An overview of contrastive differences between classes of languages or sets such as Turing recognizable, decidable and undecidable sets may promote learning in most environments. Since some of the steps of the proof are lengthy, an intuitive overview of the logical proof may help students. For the emerging online synchronous teaching-learning environments with standard Learning Management Systems (LMS) and video conference tools, establishing cross references between related parts of the proof may become problematic for some of the important computational problems. Intuitive abstractions about membership of some undecidable sets are explained with some interactive examples at the following site: http://www.asethome.org/mathfoundations/asynchronous/. Most learners initially depend on intuitive abstractions about examples because it is not evident that no algorithmic solution can exist for an undecidable problem. Our research critically examines consequences of some of the traditional teaching strategies for undecidable problems in various environments. An effective strategy is to explain with examples that a Turing Machine (TM) as a decider cannot be built for an undecidable problem. When a TM is started on an input, three alternative results are possible. The machine may halt and accept the input, or it may halt and reject the input, or it may loop forever by failing to halt [1, 3, 4].},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {107–108},
numpages = {2}
}

@inproceedings{10.1145/3605390.3610815,
author = {Bellino, Alessio},
title = {Demo: Teaching computational thinking with Protobject},
year = {2023},
isbn = {9798400708060},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605390.3610815},
doi = {10.1145/3605390.3610815},
abstract = {In today’s rapidly changing world, computational thinking is becoming increasingly essential. However, many people, including middle and high school students, face obstacles when learning to code, such as a lack of motivation and engagement. To address this challenge, we present Protobject, an accessible tool that teaches programming in a unique and interactive way. Protobject allows people to explore programming concepts through hands-on physical computing, providing a more engaging and motivating learning experience. In this demonstration, we invite conference attendees to delve into the features of Protobject and witness its potential for enhancing programming education. Participants will have the chance to interact with the tool’s user-friendly interface and explore a range of 22 interactive learning activities that offer different levels of difficulty.},
booktitle = {Proceedings of the 15th Biannual Conference of the Italian SIGCHI Chapter},
articleno = {53},
numpages = {3},
keywords = {learning platform, learning activities, computational thinking},
location = {<conf-loc>, <city>Torino</city>, <country>Italy</country>, </conf-loc>},
series = {CHItaly '23}
}

@inproceedings{10.1145/3478432.3499160,
author = {Bernd, Julia and Garcia, Dan and Holley, Buffie and Johnson, Maritza},
title = {Teaching Cybersecurity: Introducing the Security Mindset},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499160},
doi = {10.1145/3478432.3499160},
abstract = {Cybersecurity is a growing job field -- and even for students who don't go on to pursue cybersecurity careers, it is crucial to have some level of security awareness. But until very recently, the intrigue and opportunity of cybersecurity was usually not introduced until advanced undergraduate CS courses. However, the real world implications and applied nature of the topic lends itself well to catching the interest of a diverse group of students in CS at a younger age.The Teaching Security lessons (all materials available at teachingsecurity.org) introduce the foundational ideas of cybersecurity through threat modeling and exploring the human aspects of identity and authentication. They were prepared by subject-matter experts with research backgrounds in cybersecurity. Our lessons are appropriate for any high school computer science class or program, and no previous cybersecurity background or teaching experience is required for attendees.In the interactive workshop, participants will learn how to begin developing the "security mindset" by teaching students a simplified version of threat modeling. We will also model lessons on authentication and social engineering. The workshop will also provide opportunities for attendees who have taught cybersecurity to share their own strategies.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1195},
numpages = {1},
keywords = {threat modeling, lesson plans, human factors, high school computer science, cybersecurity},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3482632.3483081,
author = {Wang, Wei},
title = {Constructing Teaching System Based on JavaMail},
year = {2021},
isbn = {9781450390255},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3482632.3483081},
doi = {10.1145/3482632.3483081},
abstract = {With the rise of online teaching and mobile teaching, various information technologies are used in the online teaching process. As a mature communication technology, e-mail is also used in all aspects of teaching. The e-mail-based teaching application is introduced in this article. First, the framework of the teaching application is described, and then the function and realization of each part of the framework are described in detail.},
booktitle = {2021 4th International Conference on Information Systems and Computer Aided Education},
pages = {1050–1053},
numpages = {4},
location = {Dalian, China},
series = {ICISCAE 2021}
}

@inproceedings{10.1145/3465336.3475124,
author = {Atzenbeck, Claus and Cheong, Jaesook},
title = {International Teaching and Research in Hypertext},
year = {2021},
isbn = {9781450385510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465336.3475124},
doi = {10.1145/3465336.3475124},
abstract = {This paper presents a way for the hypertext community to gain strength and contribute to other fields of research by joining forces. It discusses the challenges that need to be addressed with respect to geographically scattered students and scholars, interdisciplinary courses, and students with various foreknowledge. We propose the INTR/HT project, a platform that aims for bringing hypertext scholars and students together worldwide. The interdisciplinary approach fosters creativity in the context of hypertext and is valuable for educating and supporting the next generation of hypertext scholars and researchers.},
booktitle = {Proceedings of the 32nd ACM Conference on Hypertext and Social Media},
pages = {271–276},
numpages = {6},
keywords = {university teaching, research, projects, hypertext systems, hypertext community, hypertext, historic hypertext project, distance teaching, didactic, INTR/HT},
location = {Virtual Event, USA},
series = {HT '21}
}

@article{10.1145/3447871.3447536,
author = {Saffold, Felicia},
title = {Engaging Young Learners through Online Teaching},
year = {2021},
issue_date = {01-01-2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2021},
number = {1},
url = {https://doi.org/10.1145/3447871.3447536},
doi = {10.1145/3447871.3447536},
abstract = {This article explored the transformation of an early childhood center from face-to-face instruction to online learning and examined how principles of effective online instruction design were related to community building, interactivity, and online presence. The case study is from an early head start institution in Milwaukee, Wisconsin. After creating an online program over the summer of 2020, teachers share their perspectives of teaching online with young learners. Results suggest benefits of technology integration in early learning classrooms.},
journal = {ELearn},
month = {jan},
articleno = {2}
}

@article{10.5555/3417626.3417627,
author = {Gabbert, Paula},
title = {Teaching accessibility in a CS0 class},
year = {2020},
issue_date = {April 2020},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {35},
number = {7},
issn = {1937-4771},
abstract = {This paper describes a CS0 course taught at Furman University for both majors and non-majors in the Spring of 2018 and Spring of 2019. The course introduces students to the discipline of Computer Science using accessible technology as an application area. This area has a rich domain of interesting examples on which to base discussions of core computing topics for new majors who need a basic understanding of accessibility issues. It is also an interesting interdisciplinary area that appeals to many different majors. It is important for both majors who will be creating new technologies as well as non-majors who will be creating digital content using technologies to understand the issues surrounding disability and accessible technology. The paper will describe key computing concepts and how they were presented in the context of accessibility. Student comments in end-of-course reflections highlight how students plan to apply what they have learned in future pursuits.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {11–20},
numpages = {10}
}

@inproceedings{10.5555/3374138.3374169,
author = {Paris, Thomas and Wiart, Jean-Baptiste and Netter, Denis and Chevrier, Vincent},
title = {Teaching co-simulation basics through practice},
year = {2019},
publisher = {Society for Computer Simulation International},
address = {San Diego, CA, USA},
abstract = {Cyber-physical system representation is one of the current challenges in Modeling and Simulation. In fact, multi-domain modeling requires new approaches to rigorously deal with it. Co-simulation, one of the approaches, lets modelers use several M&amp;S tools in collaboration. The challenge is to find a way to enable co-simulation use for non-IT experts while being aware of assumptions and limitations involved. This paper deals with co-simulation basic principles teaching through practice. we propose an iterative and modular co-simulation process supported by a DSL-based environment for the MECSYCO co-simulation platform. Through a thermal use case, we are able to introduce co-simulation in a 4 hours tutorial destined to our students.},
booktitle = {Proceedings of the 2019 Summer Simulation Conference},
articleno = {31},
numpages = {12},
keywords = {teaching, co-simulation, M&amp;S process, CPS},
location = {Berlin, Germany},
series = {SummerSim '19}
}

@inproceedings{10.1145/3304221.3319760,
author = {Walker, James and Wang, Man and Carr, Steven and Mayo, Jean and Shene, Ching-Kuang},
title = {Teaching Integer Security Using Simple Visualizations},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3319760},
doi = {10.1145/3304221.3319760},
abstract = {Integer errors can introduce significant vulnerabilities into C programs. We have developed a program analysis and visualization tool to help students understand integer representation and type conversions with the goal to help students avoid introducing these errors into the code they develop. The visualization is through the Integer Representation (IR) window within a larger system for analysis and visualization of security issues in C programs. The system is called the Visualization and Analysis for C Code Security (VACCS) system. In this paper, we describe our experience with teaching fundamental aspects of integer security in a junior-level systems programming course, the IR window, and an evaluation of the tool. Our results indicate that students found the tool to be useful and that it enhanced the course in which it was used.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {513–519},
numpages = {7},
keywords = {visualization, integer security, cybersecurity education},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

@inproceedings{10.1145/3175536.3175575,
author = {Rivas, D. and Alvarez, M. V. and Guerrero, F. and Grijalva, D. and Loor, S. and Espinoza, J. and Vayas, G. and Huerta, M.},
title = {Virtual Reality Applied to Physics Teaching},
year = {2017},
isbn = {9781450354356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3175536.3175575},
doi = {10.1145/3175536.3175575},
abstract = {A prototype of physics laboratory using virtual reality, developed with Unity Platform, which provides support in practical physics, specifically in classical mechanics, whose specific purpose is to improve student learning at the University of Armed Forces ESPE using technological progress, innovating techniques and new learning tools. Data tables and graphs showing the relationship between data curves is presented, the performance will be reflected practices using real material and virtual materials, obtaining comparative conclusions in each movement under study.},
booktitle = {Proceedings of the 9th International Conference on Education Technology and Computers},
pages = {27–30},
numpages = {4},
keywords = {virtual reality, uniformly varied rectilinear motion, uniform rectilinear motion, Physics lab},
location = {Barcelona, Spain},
series = {ICETC '17}
}

@article{10.5555/3144605.3144626,
author = {Adams, Joel C. and Shoop, Elizabeth},
title = {Teaching parallel &amp; distributed computing with MPI},
year = {2017},
issue_date = {October 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {1},
issn = {1937-4771},
abstract = {The ACM/IEEE CS 2013 Curriculum Recommendations bring parallel and distributed computing (PDC) into the CS curricular mainstream. The Message Passing Interface (MPI) is a platform independent, industry-standard library for PDC. The MPI standard includes support for C, C++, and Fortran; third parties have created implementations for Python and Java. This hands-on tutorial introduces MPI basics using parallel patterns, including single program multiple data (SPMD) execution, send-receive message passing, the master-worker pattern, parallel loop patterns, and the broadcast, reduction, scatter, gather, and barrier patterns. Participants need no prior experience with PDC or MPI; they will explore 16 short programs designed to introduce students to MPI, plus longer programs that use MPI to solve significant problems. This tutorial includes: (i) self-paced hands-on experimentation with the working MPI programs, and (ii) a discussion of how these may be used to achieve the goals of CS 2013. Tutorial materials will be distributed via csinparallel.org.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {93–94},
numpages = {2}
}

@article{10.5555/3055338.3055343,
author = {Cook, David A. and Eubanks, Anne Marie},
title = {Teaching safe coding via comparative languages},
year = {2017},
issue_date = {April 2017},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {32},
number = {4},
issn = {1937-4771},
abstract = {We recently taught a Special Projects course aimed at introducing students into writing safe code - code that would be robust and reliable in embedded or real-time applications. This paper is a synopsis of the experiences learned developing and teaching this course.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {27–32},
numpages = {6},
keywords = {secure coding, safe coding, real-time and parallel processing, exception handling, embedded coding, ada}
}

@inproceedings{10.1145/3258042,
author = {Lemaignan, Severin},
title = {Session details: Session 9: Teaching Robots},
year = {2017},
isbn = {9781450343367},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3258042},
doi = {10.1145/3258042},
booktitle = {Proceedings of the 2017 ACM/IEEE International Conference on Human-Robot Interaction},
location = {Vienna, Austria},
series = {HRI '17}
}

@inproceedings{10.1145/2978192.2978227,
author = {Yuan, Xiaohong and He, Wu and Yang, Li and Simpkins, Lindsay},
title = {Teaching Security Management for Mobile Devices},
year = {2016},
isbn = {9781450344524},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2978192.2978227},
doi = {10.1145/2978192.2978227},
abstract = {As mobile malware and virus are rapidly increasing in frequency and sophistication, there is an increasing concern for mobile device security and a strong need to address mobile device security in the higher education IT curriculum. College students need to be educated to understand how to securely manage their mobile devices before they enter the workforce. This paper introduces a course module developed to teach the topic of security management for mobile devices. This course module was used in an introductory information assurance course. The assessment shows that the course module received positive feedback in terms of learning outcomes and experiences.},
booktitle = {Proceedings of the 17th Annual Conference on Information Technology Education},
pages = {14–19},
numpages = {6},
keywords = {security risks, risk mitigation, mobile devices, bring your own device},
location = {Boston, Massachusetts, USA},
series = {SIGITE '16}
}

@inproceedings{10.1145/2839509.2844701,
author = {Sprague, Nathan and Grove, Ralph},
title = {Teaching Robotics Using ROS (Abstract Only)},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844701},
doi = {10.1145/2839509.2844701},
abstract = {The deployment of autonomous and semi-autonomous robots is likely to increase dramatically over the next decade. Recent autonomous vehicle prototypes illustrate both the rapid progress of the underlying technology and the commercial possibilities of robotics. The next few years are likely to see increased interest in robotics among both students and employers.The Robot Operating System (ROS) is an open-source software framework for developing robotics applications. It has become a standard platform with a wide range of supported robots and a vibrant software ecosystem.This workshop will provide a hands-on introduction to ROS. Participants will have the opportunity to write ROS-based Python programs to control a Turtlebot educational robot. We will discuss the benefits and challenges of using ROS in an undergraduate robotics course. The workshop is intended for CS educators with an interest in teaching robotics. Laptops will be provided. No experience with ROS or Python is required.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {719},
numpages = {1},
keywords = {ros, robotics},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@article{10.5555/2831432.2831435,
author = {Nezu, Nobuyuki},
title = {Teaching parallel programming in 50 minutes},
year = {2015},
issue_date = {December 2015},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {31},
number = {2},
issn = {1937-4771},
abstract = {This paper presents course materials for introducing the basic elements of share-memory parallel programming. The materials can be covered in an intermediate-level programming course using a single class session. A programming exercise that uses simple sort and merge procedures is provided. The exercise can be done on a personal computer with a multi-core processor. No special computational environment is required.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {18–24},
numpages = {7}
}

@inproceedings{10.1145/2808580.2808603,
author = {Caetano, N\'{\i}dia and Rocha, Jo\~{a}o and Quadrado, Jos\'{e} Carlos and Cardoso, Jos\'{e} Mar\'{\i}lio and Felgueiras, Manuel Carlos},
title = {Teaching sustainability in a multicultural environment},
year = {2015},
isbn = {9781450334426},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2808580.2808603},
doi = {10.1145/2808580.2808603},
abstract = {Nowadays sustainability is becoming extremely important and although the concept is perfectly established, there are different approaches to teach the fundamental aspects to be considered. Aiming at a higher level of internationalization and having in mind that students could gain from an intensive and multicultural experience ISEP organized its first Engineering for Sustainable Development (E4SD) Summer Course, in July 2014. With a set of modules taught by experienced teachers in different topics of sustainability, the course had a problem based learning (PBL) approach and was organized in a very informal model. A total of 8 Korean and 8 Portuguese students from different areas of scientific knowledge attended this course and could interact and develop ties with each other and the teachers involved in the course, while learning and applying the fundamental skills on sustainability. In what concerns the approach used by students from different countries to solve the sustainability problem that was launched for discussion (The Rehabilitation of Historic Cities - The Case of Porto UNESCO World Heritage Site: A Sustainable Development Challenge) it was noticed a clear difference between the two cultures. Whereas the young Korean students did not seem to care with the heritage behind a building or an historic city, the Portuguese students, used to live in a historic city, proposed a much more conservative approach. However, both the students could interact and understand the other side of the problem, reaching a consensual proposal. Finally the Korean students came to the conclusion that it was of interest to preserve Porto history. The fact that Korea is a very different country and that Korean culture is significantly different from the European one, could have triggered cultural issues. Nevertheless, the young generations are prone to change and adaptation to new situations, what allows for the resolution of any possible conflict. The PBL approach allowed for a more dynamic and informal learning environment. This revealed attractive for the young Korean students who were gaining different skills in this Summer Course as a prize for their good results in their formal learning courses. On the other hand, for the Portuguese teachers the E4SD Summer Course represented an opportunity to interact with a larger group of students with the same different culture, which is different from interacting with only one or two students coming from Europe under Erasmus mobility, in a very short and intensive contact period.},
booktitle = {Proceedings of the 3rd International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {145–150},
numpages = {6},
keywords = {sustainability, problem based learning, multiculturality},
location = {Porto, Portugal},
series = {TEEM '15}
}

@inproceedings{10.1145/2832920.2832930,
author = {Ali, Farha},
title = {Teaching The Internet of Things Concepts},
year = {2015},
isbn = {9781450338974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2832920.2832930},
doi = {10.1145/2832920.2832930},
abstract = {Named one of the disruptive technologies of the current world, Internet of Things (IoT) is being adopted in many areas of every day life. With an expected growth of exponential measures, IoT brings the promise of generating huge revenues. Companies are taking notice and investing in IoT related products. With this growth rate, we can see an increasing demand for professionals trained in developing and maintaining IoT related projects. The escalated demand for the professionals in computing fields with the knowledge of IoT motivated us to teach IoT concepts as special topics courses to the Computer Information Systems (CIS) majors. This paper summarizes our efforts, experiences, and reflections while teaching two offerings of IoT course.},
booktitle = {Proceedings of the WESE'15: Workshop on Embedded and Cyber-Physical Systems Education},
articleno = {10},
numpages = {6},
keywords = {Teaching, Sensor Networks, Embedded Systems, Embedded Networks},
location = {Amsterdam, Netherlands},
series = {WESE'15}
}

@inproceedings{10.1145/2538862.2538894,
author = {Dall, Christoffer and Nieh, Jason},
title = {Teaching operating systems using code review},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538894},
doi = {10.1145/2538862.2538894},
abstract = {Learning about operating systems often involves modifying a large and complex code base. Grading student projects can be difficult and time consuming, yet students often do not learn from their programming errors and struggle to understand core operating system concepts. We present GradeBoard, a code review system designed to simplify grading for instructors and enable students to understand and learn from their errors. GradeBoard provides an easy-to-use Web interface that allows instructors to annotate student code submissions with grading comments and scores, and students to discuss the comments and scores with instructors. GradeBoard presents student code changes with syntax highlighting and lets users collapse or expand code sections to provide a desired level of context, making it easier to read and understand student programming project submissions. Comments and scores are easily identifiable by visual cues, improving interaction between instructors and students. We have deployed and used GradeBoard in a large operating systems course involving Linux kernel programming projects. GradeBoard provided robust, easy-to-use functionality for reviewing Linux kernel code changes, improved the instructional staff grading experience, and over 90% of students surveyed indicated that GradeBoard improved their understanding of the kernel programming projects better than other alternatives.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {549–554},
numpages = {6},
keywords = {operating systems, instructional tools, code review},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3250167,
author = {Prabhakar, Annu},
title = {Session details: Approaches to teaching programming},
year = {2012},
isbn = {9781450314640},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250167},
doi = {10.1145/3250167},
booktitle = {Proceedings of the 13th Annual Conference on Information Technology Education},
location = {Calgary, Alberta, Canada},
series = {SIGITE '12}
}

@article{10.5555/2379703.2379708,
author = {Zeng, Hong Biao},
title = {Teaching the RSA algorithm using spreadsheets},
year = {2012},
issue_date = {October 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {1},
issn = {1937-4771},
abstract = {The RSA algorithm is a very important algorithm in Computer Science. Due to cumbersome calculations, it is difficult to demonstrate a non-trivial RSA example in the classroom. In this paper, the RSA algorithm is taught using spreadsheets. A spreadsheet template has been designed to carry out the calculations of a non-trivial RSA example easily and clearly.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {18–24},
numpages = {7}
}

@inproceedings{10.1145/2325296.2325420,
author = {Tillmann, Nikolai and Bishop, Judith},
title = {Teaching programming on a mobile device},
year = {2012},
isbn = {9781450312462},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2325296.2325420},
doi = {10.1145/2325296.2325420},
abstract = {From paper to computers, the way we have been writing down thoughts and performing symbolic computations has been constantly evolving. Teaching methods closely follow this trend, leveraging existing technology to make teaching more effective and preparing students for their later careers with available technologies. At present, we are in the middle of another technology shift: instead of using PCs and laptops, mobile devices are becoming more prevalent for most everyday computing tasks. We propose that computer programming, and thus the teaching of programming, can and should be done directly on the mobile devices themselves, without the need for a separate PC to write code. Programming on mobile devices engages students in new ways, allowing them to access and manipulate programmatically their most personal digital data such as pictures, videos, and music in an easy and intuitive way.The poster highlights opportunities and challenges of teaching and learning in the context of TouchDevelop, and writing programs on mobile devices in general. The poster will depict data from surveys conducted before and after class with students learning to program for the very first time. The poster will also introduce teaching and learning resources available to teachers.TouchDevelop is freely available as an app in the Windows Phone Marketplace and is supported by a book, slides, tutorials and many sample programs. See www.touchdevelop.com.},
booktitle = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
pages = {404},
numpages = {1},
keywords = {type inference., touchscreen, mobile devices, evolution, cloud},
location = {Haifa, Israel},
series = {ITiCSE '12}
}

@inproceedings{10.1145/2157136.2157147,
author = {Fori\v{s}ek, Michal and Steinov\'{a}, Monika},
title = {Metaphors and analogies for teaching algorithms},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157147},
doi = {10.1145/2157136.2157147},
abstract = {In this paper we explore the topic of using metaphors and analogies in teaching algorithms. We argue their importance in the teaching process. We present a selection of metaphors we successfully used when teaching algorithms to secondary school students. We also discuss the suitability of several commonly used metaphors, and in several cases we show significant weaknesses of these metaphors.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {15–20},
numpages = {6},
keywords = {teaching algorithms, physical analogy, metaphor, mental model, abstraction},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/2077370.2077375,
author = {Muppala, Jogesh K.},
title = {Teaching embedded software concepts using Android},
year = {2011},
isbn = {9781450310468},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2077370.2077375},
doi = {10.1145/2077370.2077375},
abstract = {Does smartphone application development provide an opportunity to explore various aspects of embedded software? This question is the primary motivator behind the ideas explored in this paper. We cannot deny the ubiquitous nature of smartphones. Leveraging on this already available "platform" to convey embedded software concepts to Computer Science (CS) students seems an exciting opportunity. Traditionally CS have often shied away from the field of embedded systems owing to their perception of this area as "hardware" oriented, not without reason. We explore the Android platform as a means of advancing embedded software concepts to CS students.},
booktitle = {Proceedings of the 6th Workshop on Embedded Systems Education},
pages = {32–37},
numpages = {6},
keywords = {embedded systems education, embedded software, curriculum, computer science education},
location = {Taipei, Taiwan},
series = {WESE '11}
}

@inproceedings{10.1145/1953163.1953207,
author = {Mohan, Sriram and Chenoweth, Stephen},
title = {Teaching requirements engineering to undergraduate students},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953207},
doi = {10.1145/1953163.1953207},
abstract = {Requirements engineering, an integral part of the life of a software engineer, often receives little or no attention in the education of a computer science student. We report on our experiences in constructing an innovative curriculum that utilizes a three tier model of learning that provides students with hands-on experience on the various facets of requirements elicitation and management. This curriculum can be integrated into an existing course on software engineering, software requirements or the senior capstone experience. We believe our experience will be of use to other computer science and software engineering programs that are aiming at introducing requirements in the undergraduate curriculum.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {141–146},
numpages = {6},
keywords = {software engineering, requirements, education, curriculum},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@article{10.5555/1858583.1858591,
author = {Harrison, Neil B.},
title = {Teaching software testing from two viewpoints},
year = {2010},
issue_date = {December 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {26},
number = {2},
issn = {1937-4771},
abstract = {Testing software is actually two different activities, depending on whether one is the developer of the software or the tester. As software engineering students may end up in roles as either a developer or a tester, they must learn skills for both. In order to teach both skills, our software testing course has a two-part major project. In the first part, students must develop an application and test it thoroughly, creating a developer test plan and test cases. In the second part, they receive a different program from another student which they must test. They must write system test plan, execute the test cases, and write defect reports.We have been using this project format in our software testing class for five years. We have found that it has been successful at helping students learn testing from two different perspectives. They learn how to apply different testing techniques, and how to select appropriate testing approaches. A few learn the bitter lesson of the danger of allowing the development schedule to squeeze out testing time.We have found several keys to success. First, there must be multiple projects so the students can test a project they didn't develop. They must be equivalent in terms of development and testing effort. They should be not overly difficult, but should require a large number of test cases, preferably using more than one testing approach. Finally, students are not evaluated on the number of bugs they find in each others' programs, but on the quality of their testing.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {55–62},
numpages = {8}
}

@article{10.1145/1656255.1656258,
author = {Yuan, Xiaohong and Vega, Percy and Qadah, Yaseen and Archer, Ricky and Yu, Huiming and Xu, Jinsheng},
title = {Visualization Tools for Teaching Computer Security},
year = {2010},
issue_date = {January 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {4},
url = {https://doi.org/10.1145/1656255.1656258},
doi = {10.1145/1656255.1656258},
abstract = {Using animated visualization tools has been an important teaching approach in computer science education. We have developed three visualization and animation tools that demonstrate various information security concepts and actively engage learners. The information security concepts illustrated include: packet sniffer and related computer network concepts, the Kerberos authentication architecture, and wireless network attacks. These tools are implemented using Macromedia Flash MX Professional Edition. The animations can run from a Web page as Flash Applets or as standalone applications. These visualization tools are intended to be used in undergraduate level computer network and security courses. They can be used as classroom instructor demos, student exercises, or Web-based student learning resources. These tools have been used in various computer network and information security courses at North Carolina A&amp;T State University, and have received positive feedback from the students.},
journal = {ACM Trans. Comput. Educ.},
month = {jan},
articleno = {20},
numpages = {28},
keywords = {wireless network attacks, visualization and animation, packet sniffer, Kerberos authentication architecture, Computer security}
}

@article{10.1145/1594943.1594947,
author = {Zafiroglu, Alexandra and Bell, Genevieve},
title = {Teaching Intel to love the television},
year = {2009},
issue_date = {September 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {3},
url = {https://doi.org/10.1145/1594943.1594947},
doi = {10.1145/1594943.1594947},
abstract = {Over the last decade, as Intel Corporation has successively sought to expand its business into consumer electronics adjacencies, it envisioned a spectrum of screens in homes that could serve as interchangeable front-ends to a relatively standard computational back-end. From this perspective, televisions, set top boxes, and other CE devices are fraternal twins to Intel's traditional competency, silicon solutions for the PC. In this video, the authors discuss how Intel's User Experience Group has steered the company to accept the television for what it truly is, a fundamentally different device, experience, and ecosystem than the PC. Drawing on ethnographic research data from 21 countries, collected over three years, they detail how teaching Intel to love the television has meant driving consumer-centric perspectives of the role, place, and meaning of television in global homes into Intel's Digital Home Group's strategy and platform roadmaps. This has meant abandoning the idea that “a screen is just a screen,” and that interactive, connected, and smart televisions will be PCs disguised to blend with living room aesthetics.},
journal = {Comput. Entertain.},
month = {sep},
articleno = {35},
numpages = {2},
keywords = {television, platform planning process, innovation process, connected consumer electronics, Ethnographic research}
}

@inproceedings{10.1145/1622123.1622128,
author = {Queinnec, Christian},
title = {Teaching CS to undergraduates at UPMC},
year = {2007},
isbn = {9781595936189},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1622123.1622128},
doi = {10.1145/1622123.1622128},
abstract = {This presentation is about some experiments done at UPMC since 2000 in the CS undergraduate department. An initiation course, based on Scheme, was introduced offering some facilities for home work and stand alone offline studies. I will describe "Web continuations" that were invented for that occasion. Many of these innovations were ported to other languages or environments to grade students' programs en masse.},
booktitle = {Proceedings of the 2007 International Lisp Conference},
articleno = {4},
numpages = {1},
location = {Cambridge, United Kingdom},
series = {ILC '07}
}

@inproceedings{10.1145/1121341.1121451,
author = {Smith, Suzanne and Stoecklin, Sara and Serino, Catharina},
title = {An innovative approach to teaching refactoring},
year = {2006},
isbn = {1595932593},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1121341.1121451},
doi = {10.1145/1121341.1121451},
abstract = {Refactoring is the process of transforming the internal structure of existing code while keeping the integrity of the code's functional requirements. Refactoring is proven to increase program maintainability, flexibility, and understandability and is recognized as a best practice in the software development community. However, with the exception of courses or lectures on extreme programming, refactoring is overlooked in the computer science curriculum. This paper helps demystify refactoring by introducing an incremental approach for teaching refactoring on the college level. Through this hands-on approach, refactoring can become an integral component in the computer science curriculum and an innovative means of reinforcing software engineering principles and good development practices. The approach and three introductory lessons are presented in this paper.},
booktitle = {Proceedings of the 37th SIGCSE Technical Symposium on Computer Science Education},
pages = {349–353},
numpages = {5},
keywords = {software engineering, refactoring, object-oriented design, extreme programming, computer science curriculum},
location = {Houston, Texas, USA},
series = {SIGCSE '06}
}

@inproceedings{10.1145/1095714.1095770,
author = {Li, Xiaosong and Prasad, Christine},
title = {Effectively teaching coding standards in programming},
year = {2005},
isbn = {1595932526},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1095714.1095770},
doi = {10.1145/1095714.1095770},
abstract = {In this paper, we report on a study that was carried out to investigate students' opinions on learning and accepting coding standards in programming courses. We used a questionnaire survey to gather data. We also used the information observed from our teaching practices. An analysis of the data indicated that most students' believe coding standards are important in programming courses but tend not to comply with them, thus implying possible flaws in the teaching strategies used. We also present current strategies we use for teaching coding standards, and evaluate them for effectiveness. In doing so, we propose strategies that are likely to be effective in teaching coding standards as they would be used in industry, and present suggestions for further studies that can be carried out to implement these strategies.},
booktitle = {Proceedings of the 6th Conference on Information Technology Education},
pages = {239–244},
numpages = {6},
keywords = {teaching programming, coding standards},
location = {Newark, NJ, USA},
series = {SIGITE '05}
}

@inproceedings{10.5555/1708087.1708095,
author = {Zerfass, Angelika},
title = {Teaching translation tools over the web},
year = {2004},
publisher = {Association for Computational Linguistics},
address = {USA},
abstract = {This is a description of an ongoing training effort to teach the use of translation tools like translation memories or terminology databases in live online seminars over the internet.},
booktitle = {Proceedings of the Second International Workshop on Language Resources for Translation Work, Research and Training},
pages = {61–67},
numpages = {7},
location = {Geneva, Switzerland},
series = {LRTWRT '04}
}

@inproceedings{10.1145/971300.971315,
author = {Rosson, Mary Beth and Carroll, John M. and Rodi, Con M.},
title = {Case studies for teaching usability engineering},
year = {2004},
isbn = {1581137982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/971300.971315},
doi = {10.1145/971300.971315},
abstract = {A challenge in teaching usability engineering is providing appropriate hands-on project experience. Students need projects that are realistic enough to address meaningful issues, but manageable within one semester. We describe our use of online case studies to motivate and model course projects in usability engineering. The cases illustrate scenario-based usability methods, and are accessed via a custom browser. We summarize the content and organization of the case studies, several case-based learning activities, and students' reactions to the activities. We conclude with a discussion of future directions for case studies in HCI education.},
booktitle = {Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education},
pages = {36–40},
numpages = {5},
keywords = {usability engineering, scenario-based development, human-computer interaction, case-based learning, case studies},
location = {Norfolk, Virginia, USA},
series = {SIGCSE '04}
}

@article{10.5555/364133.364181,
author = {Adams, Elizabeth S. and Barr, Valerie and Fendrich, John and Leska, Chuck and Thomas, Barbara Bernal and Towhidnejad, Masood},
title = {Teaching software testing throughout the curriculum},
year = {2000},
issue_date = {May 2000},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {15},
number = {5},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {178–180},
numpages = {3}
}

@article{10.1145/271125.271149,
author = {Addison, Paul},
title = {Teaching computer science without a computer},
year = {1997},
issue_date = {Dec. 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/271125.271149},
doi = {10.1145/271125.271149},
abstract = {"The Computer in Action" is a role-playing activity developed by the Computer Science Outreach program at Purdue University, in which students process instructions and data in the same way that a real computer does. Students play the roles of Keyboarder, Bus Driver, CPU (The Brains), Math Wizard, Memory Manager, Print Manager, Screen Writer and User, carrying cards with instructions, values and messages to and from the Input, Processing and Output stations. The activity is designed for students in Kindergarten through Grade 3.},
journal = {SIGCSE Bull.},
month = {dec},
pages = {30–33},
numpages = {4}
}

@inproceedings{10.1145/268084.268152,
author = {Shifroni, Eyal and Ginat, David},
title = {Simulation game for teaching communications protocols},
year = {1997},
isbn = {0897918894},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/268084.268152},
doi = {10.1145/268084.268152},
abstract = {During the development of a new program for teaching the subject of computer communication at high school, we examined different ways of teaching the algorithmic aspect of communication protocols. Upon trying the "standard" frontal lecture-type presentation, only a minority of the students comprehended the protocols.In looking for an alternative way of teaching, we developed a simulation game in which the students act as the protocol components. After playing the game, they discuss the characteristics of the protocol as experienced through playing.We found the simulation game method to be far more effective than the lecture-type presentation. The simulation game method had significantly improved the level of understanding and the motivation of the students.In this paper we describe the simulation game and its didactic method and discuss the results of applying it in high school classes in Israel during the past year.},
booktitle = {Proceedings of the Twenty-Eighth SIGCSE Technical Symposium on Computer Science Education},
pages = {184–188},
numpages = {5},
location = {San Jose, California, USA},
series = {SIGCSE '97}
}

@article{10.1145/226650.226651,
author = {Greenberg, Saul},
title = {Teaching human computer interaction to programmers},
year = {1996},
issue_date = {April 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {28},
number = {2},
issn = {0736-6906},
url = {https://doi.org/10.1145/226650.226651},
doi = {10.1145/226650.226651},
abstract = {Many computer science graduates will likely find themselves developing interfaces in a work culture that has only naive notions of usability engineering. This article describes a course I developed that prepares students for this eventuality by providing them with practical and applicable HCI skills. All course material is available on the world wide web, and pointers are provided.},
journal = {SIGCHI Bull.},
month = {apr},
pages = {5–6},
numpages = {2}
}

@inproceedings{10.1145/237466.237650,
author = {Adams, Elizabeth S.},
title = {Teaching with technology at my fingertips},
year = {1996},
isbn = {0897918444},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/237466.237650},
doi = {10.1145/237466.237650},
booktitle = {Proceedings of the 1st Conference on Integrating Technology into Computer Science Education},
pages = {229},
location = {Barcelona, Spain},
series = {ITiCSE '96}
}

@inproceedings{10.1145/216591.216613,
author = {Feldman, Mike and Beidler, Jack},
title = {Teaching object programming with Ada 95},
year = {1995},
isbn = {0897917057},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/216591.216613},
doi = {10.1145/216591.216613},
booktitle = {Tutorial Proceedings on TRI-Ada '91: Ada's Role in Global Markets: Solutions for a Changing Complex World},
pages = {655–685},
numpages = {31},
location = {Anaheim, California, USA},
series = {TRI-Ada '95}
}

@article{10.1145/201977.201984,
author = {Epstein, Susan L. and Teller, Virginia},
title = {Teaching introductory AI from first principles},
year = {1995},
issue_date = {April 1995},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {2},
issn = {0163-5719},
url = {https://doi.org/10.1145/201977.201984},
doi = {10.1145/201977.201984},
abstract = {Hunter College teaches introductory AI as a one semester, advanced undergraduate elective that focuses on issues in three areas: state-space search and control, knowledge representation, and Lisp. The search component defines AI methodology and conveys how the computing world views the field; knowledge representation illustrates how AI sees the real world; and Lisp shows how to make AI happen. The history and format of the course as it has evolved over a period of fifteen years is covered, along with a description of the course content today and a rationale for teaching AI from this perspective.},
journal = {SIGART Bull.},
month = {apr},
pages = {13–15},
numpages = {3}
}

@article{10.1145/74091.74101,
author = {Briggs, J. S.},
title = {Teaching programming to conversion course students},
year = {1989},
issue_date = {Dec. 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/74091.74101},
doi = {10.1145/74091.74101},
abstract = {This paper describes the author's experiences of teaching introductory programming and elements of software engineering to a group of students on a one year conversion course. It addresses how topics such as program design, programming in the large and program readability are taught. None of the students on the course have computing or engineering backgrounds.},
journal = {SIGCSE Bull.},
month = {dec},
pages = {43–51},
numpages = {9}
}

@inproceedings{10.1145/65293.71203,
author = {Waguespack, Leslie J.},
title = {Visual metaphors for teaching programming concepts},
year = {1989},
isbn = {0897912985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/65293.71203},
doi = {10.1145/65293.71203},
abstract = {This paper presents a system of visual metaphors used in a introductory programming course using Pascal. The visual metaphors represent programming concepts (data types, variables, arrays, records, files, modules, module interfaces and parameter passing, and dynamic storage) that are often difficult for beginning students to learn. The metaphors are used to accelerate the students' learning process and improve the overall comprehension of programs as structured objects. The system of metaphors is used in the first course for majors, Foundations of Programming, in the Computer Information Systems curriculum at Bentley College.},
booktitle = {Proceedings of the Twentieth SIGCSE Technical Symposium on Computer Science Education},
pages = {141–145},
numpages = {5},
location = {Louisville, Kentucky, USA},
series = {SIGCSE '89}
}

@inproceedings{10.1145/31820.31751,
author = {Jones, James S.},
title = {Participatory teaching methods in computer science},
year = {1987},
isbn = {0897912179},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/31820.31751},
doi = {10.1145/31820.31751},
abstract = {This paper discusses the role of participatory teaching methods in the computer science classroom. The list of these methods includes brainstorming, directed dialogues, small discussion groups, role playing, games, debates, panel discussions, and Socratic dialogues. The author has used such methods in Computers and Society classes and to a limited degree in Compiler Design, Computer Architecture and Operating Systems classes and believes that such techniques have a place in the computer science classroom. It is the aim of this paper to provide an overview of participatory teaching methods and their use in computer science education.},
booktitle = {Proceedings of the Eighteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {155–160},
numpages = {6},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '87}
}

@inproceedings{10.1145/800065.801325,
author = {Walter, John P.},
title = {“Teaching systems design through systems documentation”},
year = {1982},
isbn = {089791080X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800065.801325},
doi = {10.1145/800065.801325},
abstract = {This paper describes a teaching methodology, illustrating:• Use of case studies having general appeal to full-time students and professional persons,• Generally-accepted system documents,• A prototype sequence for presentation of each document type,• Measures of success of the methodology, and• Pitfalls.},
booktitle = {Proceedings of the 1st Annual International Conference on Systems Documentation},
pages = {151–152},
numpages = {2},
location = {Carson, California, USA},
series = {SIGDOC '82}
}

@article{10.1145/987012.987015,
author = {Pagan, F. G.},
title = {On the teaching of disciplined programming},
year = {1973},
issue_date = {October 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/987012.987015},
doi = {10.1145/987012.987015},
journal = {SIGPLAN Not.},
month = {oct},
pages = {44–48},
numpages = {5}
}

@article{10.5555/3575846.3575850,
author = {Hamdan, Basil},
title = {Teaching case study: introducing quantitative risk assessments in a cybersecurity risk management course},
year = {2022},
issue_date = {October 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {2},
issn = {1937-4771},
abstract = {Despite the recent development of rigorous quantitative approaches for cybersecurity risk assessment, much of the focus in the pedagogical materials remains on teaching qualitative and semi-quantitative assessment approaches. To help fill this gap, this paper provides a scenario-based teaching case that introduces students in a Cybersecurity Risk Management course to FAIR; an advanced quantitative framework for risk assessment. The case study utilizes a fictitious company, for which a risk assessment is underway, and requires the students to use the FAIR framework to determine the risk exposure that the company faces from a threat scenario against one of its mission-critical information resources.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {24–32},
numpages = {9}
}

@inproceedings{10.1145/3627508.3638289,
author = {Mishra, Swati and Ryerkerk, Matt and Lockerman, Yitzchak and Eis, David and Rzeszotarski, Jeffrey M},
title = {Teachable Facets: A Framework of Interactive Machine Teaching for Information Filtering},
year = {2024},
isbn = {9798400704345},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3627508.3638289},
doi = {10.1145/3627508.3638289},
abstract = {Interactive tools help users filter relevant information from massive online sources, like news feeds and online discussion forums, by enabling them to externalize their preferences. However, users’ information goals and preferences are often complex and are comprised of data attributes and a user’s subjective judgements over these attributes. For instance, when filtering news articles based on their newsworthiness, the system must capture both data attributes like recency and shareability of the article, along with the user’s personal and flexible assessment of news sentiment. While most interactive tools enable users to externalize goals that are expressible as true/false statements, they do not support incorporating subjective, loosely structured judgements of data attributes which fulfill complex goals. In this paper, we introduce Teachable Facets (TF), widgets that users can create on the fly to filter relevant information to improve the sense-making of analysts. These teachable widgets employ a Machine Teaching (MT) framework to enable users to formulate personalized filtering criteria for complex, multi-dimensional, loosely indexed, and unstructured data; teach a filtering criterion using representative samples; apply these filters to new data streams; and assess the relevance of outcomes. Through a user study, we evaluate the performance of these filters based on their ability to discover relevant items and the expressibility they offer to the users in teaching criteria. In our discussion, we identify ways this approach might improve future systems and delineate implications should such systems be deployed broadly.},
booktitle = {Proceedings of the 2024 Conference on Human Information Interaction and Retrieval},
pages = {178–188},
numpages = {11},
keywords = {Faceted Search, Information Filtering, Interactive Machine Learning, Machine Teaching, User Interface Design},
location = {<conf-loc>, <city>Sheffield</city>, <country>United Kingdom</country>, </conf-loc>},
series = {CHIIR '24}
}

@inproceedings{10.1145/3202185.3208201,
author = {Wang, Alf Inge},
title = {Teaching children through innovation: experiences from EduApp4Syria and kahoot!},
year = {2018},
isbn = {9781450351522},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3202185.3208201},
doi = {10.1145/3202185.3208201},
abstract = {This keynote talk focuses on teaching children through innovation and interaction with technology, and the presentation will focus on experiences from two highly successful technological innovations: EduApp4Syria and Kahoot!. EduApp4Syria, was an international innovation competition launched by the Norwegian government with the goal of creating the best game-based learning apps to help Syrian children to learn their mother tongue. The initial competition resulted in 78 bids from companies based in 31 countries. The end results of the competition were two innovative game-based learning apps that have a proven positive effect on learning and psychosocial learning. The second part of the talk will focus on experiences and research on children's interaction with Kahoot!. Kahoot! is a game-based learning platform invented at NTNU which has reached in 2017 70 million monthly active users, and is currently the fastest growing learning brand in the world. You can read more about EduApp4Syria at: http://norad.no/eduapp4syria and more about Kahoot!at: http://kahoot.com.},
booktitle = {Proceedings of the 17th ACM Conference on Interaction Design and Children},
pages = {5–6},
numpages = {2},
location = {Trondheim, Norway},
series = {IDC '18}
}

@inproceedings{10.1145/800197.806030,
author = {Smith, K. U.},
title = {Recent study of teaching: cybernetic foundations of learning science},
year = {1965},
isbn = {9781450374958},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800197.806030},
doi = {10.1145/800197.806030},
abstract = {APPRECIATION of the significance of computer systems for feedback analyses depends on one's understanding of the cybernetic model. Until recently, feedback control in the living system has been assumed generally to conform to the negative-feedback servo-system model for control of minimal error. We conceptualize the cybernetic model as encompassing both positive- and negative-feedback regulation and many different modes of maximal-error, variable-error, constant-error, differentiated-error, and integrated-error control. Further, we see the living body not as a single-channel system, but as a multichannel response mechanism which can generate sensory input independently of external stimulation and also can match, modulate, compare, order, integrate, differentiate, block, and vary sources of external stimulation. Our theory is that the nature of performance and the course of learning are determined directly by the variable feedback effects of these different modes and dimensions of cybernetic control9, 13.},
booktitle = {Proceedings of the 1965 20th National Conference},
pages = {8–26},
numpages = {19},
location = {Cleveland, Ohio, USA},
series = {ACM '65}
}

@article{10.1145/3394963,
author = {Prvan, Marina and O\v{z}EGOVI\'{c}, Julije},
title = {Methods in Teaching Computer Networks: A Literature Review},
year = {2020},
issue_date = {September 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {3},
url = {https://doi.org/10.1145/3394963},
doi = {10.1145/3394963},
abstract = {This article provides a survey of methods and paradigms for teaching Computer Networks (CN). Since the theoretical concepts are rather abstract in this subject, and students often find them too technical and difficult to understand, many authors attempt to answer the question on how to improve students’ motivation and interest for the complex teaching material of CN. In this work, we follow a rigorous paper collection methodology and extract a large number of previous studies that relate to the stated research questions. Also, we find that there is no review article in the current literature that would provide a clear systematization or a guided study on this topic. Hence, this work provides a literature overview by binding all the previously used methods for teaching CN in one place, and brings contribution by classifying the existing approaches into four basic classes: methods based on using visualization objects such as network simulators, multimedia applications, packet-tracing tools or visual analogies; methods based on using the virtualization techniques; methods precipitating active learning paradigm and methods based on the practical hands-on laboratory exercises. Moreover, the research in this article goes beyond the proposed classification. The classes of methods and tools are compared and contrasted based on the findings from the literature. Methods are evaluated by a detailed cross-comparison based on their advantages, disadvantages and challenges in the perspective of both teachers and students. The review is additionally strengthened by comparing the educational effectiveness of the classified methods. We examine, classify, and contrast the usual approaches used in teaching CN, provide useful insights on how appropriate they are in achieving specific educational goals and determine the future research directions.},
journal = {ACM Trans. Comput. Educ.},
month = {jun},
articleno = {19},
numpages = {35},
keywords = {teaching methods, network simulators, literature survey, Computer networks}
}

@article{10.5555/3636971.3636973,
author = {Cliburn, Daniel C.},
title = {Teaching and Learning with Virtual Reality},
year = {2023},
issue_date = {October 2023},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {39},
number = {2},
issn = {1937-4771},
abstract = {Virtual reality (VR) is an exciting field with numerous application areas, one of which is education. It has never been easier for instructors to teach with and for students to learn about VR technologies. This paper provides an overview of many ways that VR technologies are being integrated into computing education. Software tools are described that support teaching and learning about VR, and the author's experiences teaching VR and using VR technologies are presented. The paper concludes with a discussion of some of the barriers to wide scale adoption of VR technologies in computing education.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {19–27},
numpages = {9}
}

@inproceedings{10.1145/3486011.3486423,
author = {N\'{u}\~{n}ez-Pacheco, Rosa and Guill\'{e}n-Ch\'{a}vez, Evelyn-Paola and Barreda-Parra, Aym\'{e} and S\'{a}nchez-G\'{o}mez, Mª Cruz},
title = {Literature teaching methods: A systematic mapping},
year = {2021},
isbn = {9781450390668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3486011.3486423},
doi = {10.1145/3486011.3486423},
abstract = {This research is a study from a qualitative perspective. Its purpose is to carry out a systematic mapping of methods and methodological approaches related to the teaching of literature. The search was carried out in Scopus and Web of Science databases in the period 2016-2021. The results of this study show that the most published countries on this topic are Turkey and Malaysia. In addition, the methodological approach used is qualitative predominantly. Besides, there is a strong link between the teaching of literature with the use of technology and the teaching of English as a foreign language. Consequently, the methods used are appropriate to these purposes. Finally, it highlights the aesthetic, civic, and moral values that emerge from the teaching of literature.},
booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
pages = {78–82},
numpages = {5},
location = {Barcelona, Spain},
series = {TEEM'21}
}

@inproceedings{10.1145/3465631.3465986,
author = {Li, Ping},
title = {Teaching English Vocabulary under Cognitive Theory},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465986},
doi = {10.1145/3465631.3465986},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {313},
numpages = {4},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/3465631.3465950,
author = {Li, Jin'e},
title = {Application of TBLT in English Teaching},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465950},
doi = {10.1145/3465631.3465950},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {278},
numpages = {4},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/3313831.3376428,
author = {Hong, Jonggi and Lee, Kyungjun and Xu, June and Kacorri, Hernisa},
title = {Crowdsourcing the Perception of Machine Teaching},
year = {2020},
isbn = {9781450367080},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3313831.3376428},
doi = {10.1145/3313831.3376428},
abstract = {Teachable interfaces can empower end-users to attune machine learning systems to their idiosyncratic characteristics and environment by explicitly providing pertinent training examples. While facilitating control, their effectiveness can be hindered by the lack of expertise or misconceptions. We investigate how users may conceptualize, experience, and reflect on their engagement in machine teaching by deploying a mobile teachable testbed in Amazon Mechanical Turk. Using a performance-based payment scheme, Mechanical Turkers (N=100) are called to train, test, and re-train a robust recognition model in real-time with a few snapshots taken in their environment. We find that participants incorporate diversity in their examples drawing from parallels to how humans recognize objects independent of size, viewpoint, location, and illumination. Many of their misconceptions relate to consistency and model capabilities for reasoning. With limited variation and edge cases in testing, the majority of them do not change strategies on a second training attempt.},
booktitle = {Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems},
pages = {1–14},
numpages = {14},
keywords = {crowdsourcing, interactive machine learning, object recognition, personalization, teachable interfaces},
location = {<conf-loc>, <city>Honolulu</city>, <state>HI</state>, <country>USA</country>, </conf-loc>},
series = {CHI '20}
}

@inproceedings{10.5555/2906831.2907007,
author = {Figueroa Heredia, Jorge David and Rubrico, Jose Ildefonso U. and Ota, Jun},
title = {Teaching Multiple Robots by a Human},
year = {2016},
isbn = {9781467383707},
publisher = {IEEE Press},
booktitle = {The Eleventh ACM/IEEE International Conference on Human Robot Interaction},
pages = {613–614},
numpages = {2},
keywords = {teaching multiple robots, robots cooperation},
location = {Christchurch, New Zealand},
series = {HRI '16}
}

@inproceedings{10.1145/2676723.2677245,
author = {Lee, Kent D.},
title = {A Framework for Teaching Programming Languages},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2677245},
doi = {10.1145/2676723.2677245},
abstract = {This paper provides a description of a framework for programming language implementation that is accessible to students in a one semester course focused on programming languages. Rather than concentrating solely on language features, this paper describes a framework where imperative, functional, and logic programming languages are all used to develop a compiler for a non-trivial subset of a functional programming language. Provided by the framework are a virtual machine, a disassember of Python programs, a partial implementation of a Standard ML compiler with suggested tests, and a partial implementation of a type inference system implemented using Prolog, again with suggested tests. Classroom experience gained while using this framework is also shared. A suggested fourteen week sequence is provided. Real reactions from students and reflections on coverage of the ACM 2013 Curricula guildelines conclude the paper.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {162–167},
numpages = {6},
keywords = {virtual machines, type inference, type checking, programming languages, compilers},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2591062.2591169,
author = {Paasivaara, Maria and Heikkil\"{a}, Ville and Lassenius, Casper and Toivola, Towo},
title = {Teaching students scrum using LEGO blocks},
year = {2014},
isbn = {9781450327688},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2591062.2591169},
doi = {10.1145/2591062.2591169},
abstract = {In this paper, we present a LEGO-based Scrum simulation game that we used twice with Master’s level students at Aalto University. The game was initially developed as an internal training tool in F-Secure Corporation, a Finnish security software company, to support their agile adoption. In the game, student teams learn the Scrum roles, events and concepts in practice by simulating several development Sprints, while incrementally planning and building a product of LEGO blocks. Student satisfaction was measured by a survey at the end of the course, and student learning evalu- ated by learning diaries. Our results show that the students were highly satisfied with the game, and that students with various degrees of experience with Scrum all learned a lot. In particular, students reported gaining insights about require- ments management and customer collaboration, effective teamwork, and the Scrum roles.},
booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering},
pages = {382–391},
numpages = {10},
keywords = {software engineering education, simulation game, Scrum},
location = {Hyderabad, India},
series = {ICSE Companion 2014}
}

@article{10.5555/2600623.2600641,
author = {Williams, Kenneth A. and Yuan, Xiaohong and Yu, Huiming and Bryant, Kelvin},
title = {Teaching secure coding for beginning programmers},
year = {2014},
issue_date = {May 2014},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {29},
number = {5},
issn = {1937-4771},
abstract = {The recent addition of the Information Assurance and Security (IAS) Knowledge Area (KA) to the ACM/IEEE draft Computer Science Curricula 2013 indicates the importance of preparing computer science graduates to design and implement secure software. We have identified material in the Information Assurance and Security/Defensive Programming KA that can easily be taught to beginning programmers. In this paper, we recommended secure coding topics based on our experience in teaching secure coding in CS0/CS1 courses. We discussed how these topics can be mapped to IAS Knowledge Areas, as well as the unique challenges of teaching secure coding to beginning programmers. We also point out some behaviors of beginning programmers leading to insecure programs that may need the instructor's attention. The information reported in this paper will help other computer science educators to incorporate secure coding into their CS0/CS1 courses. Our future work includes designing more assessment tools to evaluate beginning programmer's learning of secure coding.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {91–99},
numpages = {9}
}

@inproceedings{10.1145/2538862.2538880,
author = {Salah, Khaled},
title = {Harnessing the cloud for teaching cybersecurity},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538880},
doi = {10.1145/2538862.2538880},
abstract = {Cloud computing has become an attractive paradigm for many organizations in government, industry as well as academia. In academia, the cloud can offer instructors and students (whether local or at a distance) on-demand, dedicated, isolated, unlimited, and easily configurable machines. Such an approach has clear advantages over access to machines in a classic lab setting. In this paper, we show how cloud services and infrastructure could be harnessed to facilitate practical experience and training for cybersecurity. We used the popular Amazon Web Services (AWS) cloud; however, the use cases and approaches laid out in this paper are also applicable to other cloud providers.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {529–534},
numpages = {6},
keywords = {security, network security, long distance education, cybersecurity, computer security, cloud computing, cloud},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@article{10.5555/2460156.2460179,
author = {Werner, Michael},
title = {Teaching graphics programming on mobile devices},
year = {2013},
issue_date = {June 2013},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {6},
issn = {1937-4771},
abstract = {This is an experience report on teaching graphics programming using Android mobile devices. The goals were to cover standard introductory graphics programming topics and to pique interest by deploying graphics apps on mobile phones and tablets.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {125–131},
numpages = {7}
}

@inproceedings{10.1145/2422436.2422438,
author = {Juba, Brendan and Williams, Ryan},
title = {Massive online teaching to bounded learners},
year = {2013},
isbn = {9781450318594},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2422436.2422438},
doi = {10.1145/2422436.2422438},
abstract = {We consider a model of teaching in which the learners are consistent and have bounded state, but are otherwise arbitrary. The teacher is non-interactive and "massively open": the teacher broadcasts a sequence of examples of an arbitrary target concept, intended for every possible on-line learning algorithm to learn from. We focus on the problem of designing interesting teachers: efficient sequences of examples that lead all capable and consistent learners to learn concepts, regardless of the underlying algorithm used by the learner. We use two measures of teaching efficiency: the number of mistakes made by the worst-case learner, and the maximum length of the example sequence needed for the worst-case learner. Our results are summarized as follows: Given a uniform random sequence of examples of an n-bit concept function, learners (capable of consistently learning the concept) with s(n) bits of state are guaranteed to make only O(n ⋅ s(n)) mistakes and exactly learn the concept, with high probability. This theorem has interesting corollaries; for instance, every concept c has a sequence of examples can teach c to all capable consistent on-line learners implementable with s(n)-size circuits, such that every learner makes only ~O(s(n)^2) mistakes. That is, all resource-bounded algorithms capable of consistently learning a concept can be simultaneously taught that concept with few mistakes, on a single example sequence. We also show how to efficiently generate such a sequence of examples on-line: using Nisan's pseudorandom generator, each example in the sequence can be generated with polynomial-time overhead per example, with an O(n ⋅ s(n))-bit initial seed. To justify our use of randomness, we prove that any non-trivial derandomization of our sequences would imply new circuit lower bounds. For instance, if there is a deterministic 2n O(1) time algorithm that generates a sequence of examples, such that all consistent and capable polynomial-size circuit learners learn the all-zeroes concept with less than 2n mistakes, then EXP ⊄ P. We present examples illustrating that the key differences in our model -- our focus on mistakes rather than the total number of examples, and our use of a state bound -- must be considered together to obtain our results. We show that for every consistent s(n)-state bounded learner A, and every n-bit concept that A is capable of learning, there is a custom "tutoring" sequence of only O(n ⋅ s(n)) examples that teaches A the concept. That is, in principle, there are no slow learners, only bad teachers: if a state-bounded learner is capable of learning a concept at all, then it can always be taught that concept quickly via some short sequence of examples.},
booktitle = {Proceedings of the 4th Conference on Innovations in Theoretical Computer Science},
pages = {1–10},
numpages = {10},
keywords = {teaching, semantic communication, on-line learning, derandomization},
location = {Berkeley, California, USA},
series = {ITCS '13}
}

@inproceedings{10.1145/2426636.2426640,
author = {B\"{o}rstler, J\"{u}rgen and Kuzniarz, Ludwik and Alphonce, Carl and Sanders, William B. and Smialek, Michal},
title = {Teaching software modeling in computing curricula},
year = {2012},
isbn = {9781450318723},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2426636.2426640},
doi = {10.1145/2426636.2426640},
abstract = {Modeling is a key skill in software development. The ability to develop, manipulate and understand models for software is therefore an important learning objective in many CS/SE courses. In this working group, we investigated how and when (software) modeling is taught to help us better understand the key issues in teaching (software) modeling. Several shortcomings were found in common curricula, both in their understanding of the term modeling" and in how they address its teaching. This WG report summarizes the findings and formulates recommendations on the inclusion of software modeling courses in future CS/SE curricula.},
booktitle = {Proceedings of the Final Reports on Innovation and Technology in Computer Science Education 2012 Working Groups},
pages = {39–50},
numpages = {12},
location = {Haifa, Israel},
series = {ITiCSE-WGR '12}
}

@inproceedings{10.1145/3250462,
author = {Takayama, Leila},
title = {Session details: Teaching with new interfaces},
year = {2012},
isbn = {9781450310154},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3250462},
doi = {10.1145/3250462},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
location = {Austin, Texas, USA},
series = {CHI '12}
}

@inproceedings{10.1145/2184512.2184628,
author = {Gray, Jeff and Abelson, Hal and Wolber, David and Friend, Michelle},
title = {Teaching CS principles with app inventor},
year = {2012},
isbn = {9781450312035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2184512.2184628},
doi = {10.1145/2184512.2184628},
abstract = {Mobile phone programming can provide an authentic and engaging hook into computer science. With App Inventor, developed by Google and recently moved to MIT, programming Android apps is as easy as clicking blocks together. App Inventor has been used successfully in after school programs, roadshows, summer camps, teacher workshops, and computer science classrooms from middle school through college. In this tutorial, participants will get an overview of App Inventor including project ideas and sample curriculum. In addition, the new CS Principles project will be introduced to participants, including a discussion of the Big Ideas and Learning Objectives that have been defined by the College Board and NSF. Specifically, the use of App Inventor as a platform for teaching CS Principles will be discussed with examples from an official Principles pilot effort within Alabama. A virtual panel with App Inventor experts will allow participants to interact and ask questions about the exciting opportunities available with App Inventor.},
booktitle = {Proceedings of the 50th Annual Southeast Regional Conference},
pages = {405–406},
numpages = {2},
keywords = {mobile computing, computer science education},
location = {Tuscaloosa, Alabama},
series = {ACM-SE '12}
}

@inproceedings{10.1145/3248120,
author = {Wainwright, Lester},
title = {Session details: Teaching outside the text},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3248120},
doi = {10.1145/3248120},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@article{10.1145/2018396.2018409,
author = {SIGCSE Teaching-Oriented Faculty Working Group},
title = {Teaching-oriented faculty at research universities},
year = {2011},
issue_date = {November 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {54},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/2018396.2018409},
doi = {10.1145/2018396.2018409},
abstract = {Developing a well-rounded university through specialization.},
journal = {Commun. ACM},
month = {nov},
pages = {35–37},
numpages = {3}
}

@inproceedings{10.1145/1953163.1953315,
author = {Mir\'{o} Juli\`{a}, Joe},
title = {An engineering approach to teaching writing.},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953315},
doi = {10.1145/1953163.1953315},
abstract = {Being able to write correctly is a valuable asset for future CS professionals and an important learning tool, but teaching to write is difficult both for professors and students. Part of this difficulty is that writing is taught using unverifiable concepts such as style, and is significantly based on intuition. In this paper we present an engineering approach to writing, in which engineering principles are used to teach and assess writing. The results are as good, and much better in some cases, and teaching and learning become easier.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {535–540},
numpages = {6},
keywords = {writing, verification, principles, engineering},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/1566374.1566417,
author = {Zhang, Haoqi and Parkes, David C. and Chen, Yiling},
title = {Policy teaching through reward function learning},
year = {2009},
isbn = {9781605584584},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1566374.1566417},
doi = {10.1145/1566374.1566417},
abstract = {Policy teaching considers a Markov Decision Process setting in which an interested party aims to influence an agent's decisions by providing limited incentives. In this paper, we consider the specific objective of inducing a pre-specified desired policy. We examine both the case in which the agent's reward function is known and unknown to the interested party, presenting a linear program for the former case and formulating an active, indirect elicitation method for the latter. We provide conditions for logarithmic convergence, and present a polynomial time algorithm that ensures logarithmic convergence with arbitrarily high probability. We also offer practical elicitation heuristics that can be formulated as linear programs, and demonstrate their effectiveness on a policy teaching problem in a simulated ad-network setting. We extend our methods to handle partial observations and partial target policies, and provide a game-theoretic interpretation of our methods for handling strategic agents.},
booktitle = {Proceedings of the 10th ACM Conference on Electronic Commerce},
pages = {295–304},
numpages = {10},
keywords = {preference learning, preference elicitation, policy teaching, environment design, active indirect elicitation},
location = {Stanford, California, USA},
series = {EC '09}
}

@inproceedings{10.1145/1463160.1463232,
author = {Lundgren, Sus},
title = {Treating and teaching aesthetics as personality},
year = {2008},
isbn = {9781595937049},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1463160.1463232},
doi = {10.1145/1463160.1463232},
abstract = {The environment changes direction fastThinking like a pen fliesThrough the wall the headache is thrownMy fear is created by you othersI should have tasted freedomI call outThis is not the anguished work of some angst-ridden young poet; instead it is the result of a conversation between a group of digital personalities, manifested as dolls trapped in an elevator, but also in graphics, in words and wording, in gestures and in relations and reactions. The system is called Physical Poets, and the creation of it was a workshop aiming at teaching interaction design students how to reason about, and make, aesthetic decisions.In this project, we taught one possible view on aesthetics, namely the view that when designing complex systems, it can sometimes help to assign a "personality" to the system in order to make all aspects of it merge together to an unified set of expressions and behaviors.By designing actual personalities -- the poets -- this concept was highlighted to the students, as were the issues with expressing these personalities and making sound aesthetical decisions fitting both their personalities and the system as a whole.},
booktitle = {Proceedings of the 5th Nordic Conference on Human-Computer Interaction: Building Bridges},
pages = {511–514},
numpages = {4},
keywords = {physical poets, pedagogy, interaction design, didactics, aesthetics},
location = {Lund, Sweden},
series = {NordiCHI '08}
}

@inproceedings{10.1145/1370847.1370856,
author = {Umarji, Medha and Pohl, Mark and Seaman, Carolyn and Koru, A. G\"{u}ne_ and Liu, Hongfang},
title = {Teaching software engineering to end-users},
year = {2008},
isbn = {9781605580340},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1370847.1370856},
doi = {10.1145/1370847.1370856},
abstract = {Bioinformatics software is an example of immensely complex and critical scientific software, and this domain provides an excellent illustration of the role of end user computing in the sciences. To explore these interesting characteristics from a software engineering standpoint, we had conducted an exploratory survey of bioinformatics developers. The survey had a range of questions about people, processes and products. As software engineering researchers, we realized that the survey results had important implications for the education of bioinformatics software professionals. Through this paper we intend to open an avenue of discussion about software engineering knowledge that should be taught to end user programmers, based on our findings in the bioinformatics domain. In addition to the survey results we went through the curricula of more than fifty bioinformatics programs as well as the contents of over fifteen textbooks. We observed that there was no mention of the role and importance of software engineering practices essential for creating dependable software systems. We present a set of recommendations for improving bioinformatics education in terms of software engineering principles and ways that they apply in the context of end-user development.},
booktitle = {Proceedings of the 4th International Workshop on End-User Software Engineering},
pages = {40–42},
numpages = {3},
keywords = {software engineering, end-user programming, education, bioinformatics},
location = {Leipzig, Germany},
series = {WEUSE '08}
}

@inproceedings{10.1145/1268784.1268936,
author = {Ben-Ari, Mordechai},
title = {Teaching concurrency and nondeterminism with spin},
year = {2007},
isbn = {9781595936103},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1268784.1268936},
doi = {10.1145/1268784.1268936},
abstract = {The tutorial will familiarize the participants with the use of the Spin model checker in teaching concepts such as concurrency, verification and nondeterminism. They will also learn to use pedagogical software tools that I built based upon Spin: the jSpin environment for developing and verifying concurrent programs; SpinSpider, a tool for generating graphical representations of state diagrams of concurrent programs; VN, a tool for "experiencing" the nondeterminism of finite automata.},
booktitle = {Proceedings of the 12th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {363–364},
numpages = {2},
keywords = {concurrency, spin, verification, visualization},
location = {<conf-loc>, <city>Dundee</city>, <country>Scotland</country>, </conf-loc>},
series = {ITiCSE '07}
}

@inproceedings{10.1145/1179295.1179349,
author = {Hanisch, Frank and Stra\ss{}er, Wolfgang},
title = {Making of an interactive teaching gem},
year = {2006},
isbn = {1595933646},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1179295.1179349},
doi = {10.1145/1179295.1179349},
abstract = {Current educational repositories lack in interactive material. We describe the full pipeline for creating an interactive teaching gem in computer graphics and related domains. Based on experiences from our own classroom use, we explain why and how we specify learning objectives, set up unit tasks, design interactivity levels, and provide source code for homework. The pipeline is illustrated with the making of a real interactive teaching gem. From this we derive implications for computer graphics educators and current community building efforts, and formulate two matching repository services.},
booktitle = {ACM SIGGRAPH 2006 Educators Program},
pages = {53–es},
keywords = {interactivity, educational repositories, community building},
location = {Boston, Massachusetts},
series = {SIGGRAPH '06}
}

@inproceedings{10.1145/1066129.1066130,
author = {Meyer, Matthias and Wendehals, Lothar},
title = {Teaching object-oriented concepts with Eclipse},
year = {2004},
isbn = {9781450377980},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1066129.1066130},
doi = {10.1145/1066129.1066130},
abstract = {Object-oriented software development is a subject area difficult to teach, especially to beginners. They face a lot of abstraction and (from a beginners point of view) isolated topics, such as the syntax and semantics of a programming language, the functionality of a software development environment and basic object-oriented concepts. Although many professionals in education believe in the "object first" approach as the best method of introducing object-oriented concepts, there is no common agreement on how to start such courses. Current study programs often begin by teaching a programming language, instead of focusing on the basics of object-oriented concepts.In the last years a learning environment was developed based on a visual programming language to abstract away from details. It assists teaching step-by-step object-oriented concepts and the syntax and semantics of a programming language in secondary schools and first year university courses. Our goal is to port this learning environment to the widely used IDE Eclipse.},
booktitle = {Proceedings of the 2004 OOPSLA Workshop on Eclipse Technology EXchange},
pages = {1–5},
numpages = {5},
location = {Vancouver, British Columbia, Canada},
series = {eclipse '04}
}

@article{10.5555/1040231.1040242,
author = {Werner, Laurie},
title = {Teaching principled and practical information security},
year = {2004},
issue_date = {October 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {1},
issn = {1937-4771},
abstract = {Information Security touches virtually all of the core technologies of computer science. Many Computer Science, Computer Engineering, Information Systems and Information Technology programs are at a crossroads in determining how to include Information Security in the curriculum. Models for expanding an Information Security specialization are evolving at the upper division undergraduate and graduate levels. The National Security Agency supports scholarships and designates Centers for Academic Excellence at the graduate level. But schools that offer only undergraduate and associate level computing programs are under pressure to incorporate Information Security principles and practices into their curricula as well. Small schools and small programs face limitations such as faculty resources, laboratory equipment, appropriate textbooks and institutional support. This paper presents my experiences in planning, teaching and implementing an Information Security course at the second year undergraduate level in a small associate degree program with those limitations.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {81–89},
numpages = {9}
}

@article{10.5555/948785.948822,
author = {Wilkens, Linda},
title = {The joy of teaching with C#},
year = {2003},
issue_date = {December 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {19},
number = {2},
issn = {1937-4771},
abstract = {C# is the language developed by Microsoft to be the lingua franca of the .NET framework, which provides a rich set of libraries and a runtime environment supporting both mixed-language and cross-platform development. C# is an intermediate level class-based object oriented language, closer to the framework than C++ and more cleanly structured than Visual Basic. This paper gives hints on getting started with C#, and discusses 10 reasons that make it a joy to teach with C#.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {254–264},
numpages = {11}
}

@article{10.5555/948785.948803,
author = {Yang, Sherry and Breedlove, Todd and Carestia, Ralph},
title = {Teaching introductory classes using LEGO robotics},
year = {2003},
issue_date = {December 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {19},
number = {2},
issn = {1937-4771},
abstract = {This tutorial will give an introduction to the LEGO Mindstorm Robotic system. The participants will build a small robot and program it to perform simple functions in the hands-on portion of the tutorial. Presenters will then share their experience teaching an Introduction to Computer Systems class using LEGO robotics. After completing this tutorial, participants should have the basic concepts and resources to explore the possibility of using LEGO robotics in teaching introductory classes.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {113–114},
numpages = {2}
}

@article{10.5555/767598.767637,
author = {Gary, James and Crawford, Robert},
title = {Teaching parametric cubic curves with applets},
year = {2003},
issue_date = {April 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {4},
issn = {1937-4771},
abstract = {We are investigating the use of Java applets as an instructional aid in a Computer Graphics course. The properties and behaviors of parametric cubic curves are difficult to explain using static media and the mathematics involved often results in student anxiety and disinterest. In an attempt to help the students gain a meaningful understanding of these important concepts, we are developing a series of applets illustrating key concepts. We hope to find the applets effective in a variety of ways; as a demonstration tool during lecture, as an interactive hand-on experimentation tool for the individual student, as well as a key component in a web-based learning environment.Currently we are illustrating various aspects of Bezier Curves, but plan to extend the set of applets to include other parametric curves and perhaps surfaces. Interactive applets allow students to observe curve behavior as control points are moved and to observe the bounding convex hull property. Such applets are easy to write and commonly found on the web. We are attempting a more intensive learning experience by illustrating the relationship between blending functions (the Bernstein Polynomials) and the curve shape. The de Castlejau approach to finding a point on the curve and general curve subdivision are also illustrated. We furthermore attempt to explain different types of continuity at the juncture of two curves by allowing the student to experiment with curves under various continuity constraints.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {229–237},
numpages = {9}
}

@inproceedings{10.1145/611892.611963,
author = {Robbins, Steven},
title = {Using remote logging for teaching concurrency},
year = {2003},
isbn = {158113648X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/611892.611963},
doi = {10.1145/611892.611963},
abstract = {Students often have difficulty visualizing, understanding and debugging concurrent programs. Programming assignments involving concurrency are also difficult to grade. The output alone is not sufficient because the print statements from cooperating threads or processes can interfere with each other and garble the results. The remote logging tool described here allows multiple processes or threads to atomically log messages to a local or remote host. Different views of the messages are available in real time through a graphical user interface (GUI). The tool consists of two parts, a library for adding logging commands to a user program and a GUI for presenting different views of the logged messages. A separate logging library is needed for each programming language (e.g., C, C++, Java), but a single GUI works with all of these. A C logging library and a general GUI are available on the web.},
booktitle = {Proceedings of the 34th SIGCSE Technical Symposium on Computer Science Education},
pages = {177–181},
numpages = {5},
keywords = {logging, debugging tools, concurrent programs, atomic, GUI},
location = {Reno, Navada, USA},
series = {SIGCSE '03}
}

@article{10.1145/505776.505785,
author = {Bernstein, Lawrence and Klappholz, David},
title = {Teaching old software dogs, old tricks},
year = {2001},
issue_date = {March 2001},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {2},
issn = {0163-5948},
url = {https://doi.org/10.1145/505776.505785},
doi = {10.1145/505776.505785},
journal = {SIGSOFT Softw. Eng. Notes},
month = {mar},
pages = {33–34},
numpages = {2}
}

@inproceedings{10.1145/359369.359407,
author = {Tao, Yonglei},
title = {Teaching software tools via design patterns},
year = {2000},
isbn = {1581132719},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/359369.359407},
doi = {10.1145/359369.359407},
abstract = {Commercial software tools are increasingly used for teaching computer science courses. Because they are powerful and complex, they are often difficult to learn and to use. It is critical to balance benefits and problems that a software tool may bring about. Visual C++ is used as a tool for developing GUI applications in our “GUI Design” course. We identified examples of several well-known design patterns with Visual C++ and based our lecture on these patterns when teaching the tool. Our experience shows that design patterns help deal with the complex and flatten the learning curve without diverting too much attentions from the course's primary objectives.},
booktitle = {Proceedings of the Australasian Conference on Computing Education},
pages = {248–252},
numpages = {5},
location = {Melbourne, Australia},
series = {ACSE '00}
}

@article{10.1145/306286.306317,
author = {Sajaniemi, Jorma and Kuittinen, Marja},
title = {Systems for multi-level teaching materials},
year = {1998},
issue_date = {Dec. 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/306286.306317},
doi = {10.1145/306286.306317},
abstract = {Lecturers need three kinds of supporting materials: lecture notes given to learners, presentation material to be shown in the lectures, and lecturer's own guidance material to direct her during the lecture. Hardly any of the current presentation systems supports easy preparation and maintenance of these three interwoven material sources. In this paper, we describe two systems that can be used for authoring and presentation of multiple-level teaching materials.},
journal = {SIGCSE Bull.},
month = {dec},
pages = {59–61},
numpages = {3}
}

@inproceedings{10.5555/1161135.1161189,
author = {Fenstermacher, Kurt D. and Burke, Robin D. and Hammond, Kristian},
title = {Case-based teaching of cardiac auscultation},
year = {1996},
isbn = {1880094231},
publisher = {International Society of the Learning Sciences},
abstract = {We are developing a computer system to teach medical students and residents the art of listening to the heart for diagnostic clues, known as cardiac auscultation. The Cardiac Auscultation Diagnosis Instruction (CADI) system is designed to teach students both the clinical reasoning needed for effective diagnosis, and the perceptual skills needed for listening to the peculiar sounds of the human heart. Currently, learning auscultation is difficult because it requires students to visualize complex, dynamic structures as they are described by an instructor, and to focus on clinically important sounds in a sonic morass. The CADI environment will provide a realistic setting in which students "learn by doing". Furthermore, the environment will provide support for beginning students while still providing a demanding test for more advanced users. We believe that the computer's multimedia capabilities, together with intelligent tutoring principles grounded in cognitive theory, can help medical students master the challenging skill of auscultation. CADI's design draws on earlier work in case-based reasoning and goal-based scenarios, and their combination in the case-based teaching architecture.},
booktitle = {Proceedings of the 1996 International Conference on Learning Sciences},
pages = {380–385},
numpages = {6},
location = {Evanston, Illinois},
series = {ICLS '96}
}

@article{10.1145/234813.234820,
author = {Greenberg, Saul},
title = {Teaching human computer interaction to programmers},
year = {1996},
issue_date = {July/Aug. 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {4},
issn = {1072-5520},
url = {https://doi.org/10.1145/234813.234820},
doi = {10.1145/234813.234820},
journal = {Interactions},
month = {jul},
pages = {62–76},
numpages = {15}
}

@inproceedings{10.1145/199688.199892,
author = {Gries, David and Schneider, Fred B. and Krone, Joan and Warford, Stan and Weston, J. Peter},
title = {Teaching as a logic tool (abstract)},
year = {1995},
isbn = {089791693X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/199688.199892},
doi = {10.1145/199688.199892},
booktitle = {Proceedings of the Twenty-Sixth SIGCSE Technical Symposium on Computer Science Education},
pages = {384–385},
numpages = {2},
location = {Nashville, Tennessee, USA},
series = {SIGCSE '95}
}

@inproceedings{10.1145/323287.323303,
author = {Meyer, R. Mark and Keller, Roy F.},
title = {SLR tools for teaching compiler construction},
year = {1985},
isbn = {0897911520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/323287.323303},
doi = {10.1145/323287.323303},
booktitle = {Proceedings of the Sixteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {120–129},
numpages = {10},
keywords = {postfix translation, compiler, SLR grammar, LR parser},
location = {New Orleans, Louisiana, USA},
series = {SIGCSE '85}
}

@inproceedings{10.1145/1822258.1822296,
author = {Cubric, Marija},
title = {Agile learning &amp; teaching with wikis: building a pattern},
year = {2008},
isbn = {9781605581286},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1822258.1822296},
doi = {10.1145/1822258.1822296},
abstract = {In this paper, we describe a blended learning process that is based on the agile development principles [1] and techniques [2] and supported by wikis. The process presented here is applicable to any learning and teaching scenario where the module objectives require development of non-cognitive skills such as: teamwork, giving and receiving feedback, collaborative writing, incremental and iterative development etc We believe that understanding agile principles and being able to apply agile techniques to any development activity are highly relevant skills that are important for the employability of our students.},
booktitle = {Proceedings of the 4th International Symposium on Wikis},
articleno = {28},
numpages = {2},
keywords = {wikis, blended learning, agile development},
location = {Porto, Portugal},
series = {WikiSym '08}
}

@inproceedings{10.1145/3478432.3499164,
author = {Decker, Adrienne and Morrison, Briana and Bart, Austin Cory},
title = {Using Subgoal Labeling in Teaching CS1},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499164},
doi = {10.1145/3478432.3499164},
abstract = {Subgoal labeling is an instructional design framework for breaking down problems into pieces that are small enough for novices to grasp, and often difficult for instructors (i.e., experts) to articulate. Subgoal labels have been shown to improve student performance during problem solving in many disciplines, including computing. Improved student performance occurs because subgoal labels improve student transfer and retention of knowledge. With support from NSF (DUE-1712025, 1712231, 1927906, 2110156, 2111578), subgoal labels have been identified and integrated into a CS1 course (variables, expressions, conditionals, loops, arrays, classes) and an e-book has been created on the Runestone platform to enable students to complete practice problems using the subgoals. This workshop will introduce participants to the materials and demonstrate how the subgoal labels and worked examples are integrated throughout the course. Materials include nearly 50 worked examples and 300 practice problems that increase in complexity and difficulty within each topic. The materials are designed to be integrated into CS1 courses as homework or classroom examples and activities. Assessment of topics using subgoal labels will also be discussed. Participants will leave with access to the e-book containing worked examples and practice problems for common topics in an imperative Java-based CS1 and will also engage in an activity where they create an example for their own course using subgoal labels.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1197},
numpages = {1},
keywords = {worked examples, subgoals, introductory programming, cs1},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3456565.3460051,
author = {Walker, James and Carr, Steven and Radwan, Ahmed and Hu, Yu-Hsiang and Cheng, Yu Chin and Mayo, Jean and Shene, Ching-Kuang},
title = {A Visualization for Teaching Integer Coercion},
year = {2021},
isbn = {9781450383974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456565.3460051},
doi = {10.1145/3456565.3460051},
abstract = {Integer errors continue to create vulnerabilities. In fact, Integer Overflow or Wraparound is listed at position 11 in the 2020 CWE Top 25 Most Dangerous Software Weaknesses. This poster describes the Expression Evaluation (EE) visualization tool that helps students understand the type conversions that take place implicitly within a C program. This tool depicts step-wise the coercions that take place within the evaluation of a user specified expression with mixed integer type operands. The system enables students to create unlimited examples to test their understanding. The tool was evaluated in the classroom and shown to be easy to use and effective.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {640},
numpages = {1},
keywords = {visualization, integer security, cybersecurity education},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3456887.3457457,
author = {Fu, Qiang},
title = {Virtual Reality Technology in Information Teaching},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3457457},
doi = {10.1145/3456887.3457457},
abstract = {Virtual reality technology is the product of the rapid development of science and technology, and the development of science and technology has also led to the development of education. Nowadays, virtual reality technology is widely used in teaching, which promotes the development of teaching informatization in China. Based on this, this paper studies the application of virtual reality technology in information teaching. In the research, this paper first introduces the virtual reality technology and its commonly used algorithms, and analyzes and summarizes the application of virtual reality technology in information teaching. In order to highlight the application effect of virtual reality technology in information-based teaching, this paper selects two dance classes in our school, using traditional methods and virtual reality technology information teaching respectively, and evaluates the teaching effect. The results show that the average score of dance teaching class in the test is 72.4, and the average score of class using virtual reality technology is 85.8, and each score is higher than that of the other class. Thus, the application of virtual reality technology in information teaching can effectively enhance the teaching effect.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {1037–1041},
numpages = {5},
keywords = {Virtual Reality Technology, Teaching Effect, Information Teaching, Application Analysis},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@inproceedings{10.1145/3385590,
author = {Ketenci, Tuba},
title = {Session details: Paper Session: K12 Teaching},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385590},
doi = {10.1145/3385590},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.5555/3381540.3381545,
author = {Cheng, Haiyan and VanDeGrift, Tammy},
title = {Course models for teaching data science},
year = {2019},
issue_date = {October 2019},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {35},
number = {1},
issn = {1937-4771},
abstract = {This paper describes two models for data science courses offered by computer science programs at two different universities. At both institutions the data science course serves as an elective course for computer science majors. The paper presents course outlines, topics, labs, and projects associated with the courses, so that others can adopt and adapt these models. The course topics and the projects are similar at both institutions. One institution has more frequent lab-based assessments and the other has fewer more open-ended assignments. Both courses have been offered once and the instructors are satisfied with the student learning outcomes.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {44–56},
numpages = {13}
}

@inproceedings{10.1145/3286960.3286970,
author = {Li, Chen and Chan, Emily and Denny, Paul and Luxton-Reilly, Andrew and Tempero, Ewan},
title = {Towards a Framework for Teaching Debugging},
year = {2019},
isbn = {9781450366229},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3286960.3286970},
doi = {10.1145/3286960.3286970},
abstract = {Debugging is an important component of software development, yet most novice programmers are not explicitly taught to apply systematic strategies or processes for debugging. In this paper we adapt a framework developed for teaching troubleshooting to the debugging domain, and explore how the literature on teaching debugging maps to this framework. We identify debugging processes that are fundamental for novices to learn, aspects of debugging that novices typically struggle to develop, and shortcomings of tools designed to support teaching of debugging.},
booktitle = {Proceedings of the Twenty-First Australasian Computing Education Conference},
pages = {79–86},
numpages = {8},
keywords = {troubleshooting, novice, introductory programming, debugging},
location = {Sydney, NSW, Australia},
series = {ACE '19}
}

@inproceedings{10.1145/3017680.3017696,
author = {Gray, Jeff and Rosato, Jennifer and Beth, Bradley and Sridhar, Nigamanth},
title = {Teaching the Global Impact of Computing},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017696},
doi = {10.1145/3017680.3017696},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {661–662},
numpages = {2},
keywords = {interdisciplinary teaching methods, global impact of computing, AP computer science principles},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@inproceedings{10.1145/2839509.2844644,
author = {Seyam, Mohammed and McCrickard, D. Scott},
title = {Teaching Mobile Development with Pair Programming},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844644},
doi = {10.1145/2839509.2844644},
abstract = {Pair Programming has demonstrated benefits for education, but unique concerns of mobile software design raise questions about the effectiveness of Pair Programming in this evolving field. This paper probes unique challenges for Pair Programming when used in mobile software design classes, focusing on five mobile design topics: dealing with interface and data management, using camera, handling multi-device connectivity, using sensors and collecting GPS data, and using microphones and speakers. The paper highlights successes and challenges for Pair Programming and mobile applications, concluding with recommendations on building assignments, managing student interaction, and implementing Pair Programming for instructors considering using it in their mobile development classes.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {96–101},
numpages = {6},
keywords = {pair programming, mobile development., computer science education},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.5555/2693848.2694307,
author = {Jain, Sanjay},
title = {Teaching of simulation at business schools},
year = {2014},
publisher = {IEEE Press},
abstract = {Many business decisions can be ably supported by applications of simulation models of various types, including system dynamics, discrete event, agent based, and Monte Carlo. Many decisions involving large capital investments are made only after the proposed systems have been simulated and the expected return on investment verified using simulation. The applicability of simulation to business decisions would suggest that leading business schools would include teaching of simulation software in their curriculum. While business schools use business simulations extensively in their classes, there appears to be limited interest in teaching how to build such simulations. This paper reports on a survey of teaching of simulation software at leading business school. The prevalence of teaching some simulation types over others and the reasons provided are discussed. Simulation community may want to consider the trends at business schools and the need to influence them.},
booktitle = {Proceedings of the 2014 Winter Simulation Conference},
pages = {3684–3695},
numpages = {12},
location = {Savannah, Georgia},
series = {WSC '14}
}

@inproceedings{10.1145/2538862.2544248,
author = {Wurst, Karl and Postner, Lori and Jackson, Stoney},
title = {Teaching open source (software) (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2544248},
doi = {10.1145/2538862.2544248},
abstract = {Integrating Free and Open Source Software (FOSS) into our curricula can provide students with a rich, motivating learning experience that helps them develop technical as well as soft skills. However, integrating FOSS into curricula does have its challenges. This birds-of-a-feather (BoF) seeks to bring together faculty to discuss challenges, share resources, share solutions, and make connections. So, whether you are considering integrating FOSS into a class for the first time, or you are looking for ways to improve what you are already doing, this BoF is for you. Members of the Teaching Open Source (http://teachingopensource.org) and the foss2serve (http://foss2serve.org/) communities will help guide the discussion and be on hand for questions.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {734},
numpages = {1},
keywords = {teaching open source software},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2325296.2325392,
author = {Patitsas, Elizabeth},
title = {Teaching labs on pseudorandom number generation},
year = {2012},
isbn = {9781450312462},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2325296.2325392},
doi = {10.1145/2325296.2325392},
abstract = {This presentation describes our approach to teaching pseudorandom number generation (PRNG) in CS labs. We use PRNG at two universities as an example of an application of sequential circuitry in our digital logic courses. Our goal is for our students to have meaningful assignments, and to relate digital logic not only to the larger CS curriculum, but to the students' lives. This also us a motivation to discuss "what is randomness?", security issues relating to seeding and encryption, and why and how we use randomness in computing.},
booktitle = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
pages = {376},
numpages = {1},
keywords = {labs, digital logic, computer science education},
location = {Haifa, Israel},
series = {ITiCSE '12}
}

@inproceedings{10.1145/2157136.2157208,
author = {Krone, Joan and Baldwin, Doug and Carver, Jeffrey C. and Hollingsworth, Joseph E. and Kumar, Amruth and Sitaraman, Murali},
title = {Teaching mathematical reasoning across the curriculum},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157208},
doi = {10.1145/2157136.2157208},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {241–242},
numpages = {2},
keywords = {mathematical reasoning},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/1999747.1999867,
author = {Pullen, John Mark and Clark, Nicholas K.},
title = {Moodle-integrated open source synchronous teaching},
year = {2011},
isbn = {9781450306973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1999747.1999867},
doi = {10.1145/1999747.1999867},
abstract = {It is well understood that the two prevalent approaches to distance education, synchronous and asynchronous, can be combined to good effect. However, existing open source software generally is separated into these two categories. This paper introduces an open source capability that combines the popular Moodle asynchronous learning management system with a new synchronous online teaching/conferencing system called MIST/C. This combination is supporting online delivery of the Master's programs in our Computer Science Department effectively. This paper describes the design and implementation of MIST/C and our experience using it to support Computer Science MS programs.},
booktitle = {Proceedings of the 16th Annual Joint Conference on Innovation and Technology in Computer Science Education},
pages = {353},
numpages = {1},
keywords = {synchronous, internet distance education},
location = {Darmstadt, Germany},
series = {ITiCSE '11}
}

@inproceedings{10.1145/3258461,
author = {Brown, Richard A.},
title = {Session details: Computer architecture teaching tools},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3258461},
doi = {10.1145/3258461},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/1822090.1822096,
author = {Thompson, Errol},
title = {From phenomenography study to planning teaching},
year = {2010},
isbn = {9781605588209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1822090.1822096},
doi = {10.1145/1822090.1822096},
abstract = {A phenomenographic study uncovers variations in the way that the subjects are aware of a phenomenon. In the categories of description that represent the variations in awareness there are features that, through their variation, define the characteristics of the categories. Teaching seeks to foster a change in the way that the learner is aware of a phenomenon through opening up a space of learning. This paper outlines the way that the outcome spaces from a phenomenographic study can be used to plan a teaching programme that utilises variations in the features. It discusses a strategy for teaching programming based on a phenomenographic study of practitioner conceptions of an object-oriented program. The strategy covers features related to the nature of an object-oriented program.},
booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
pages = {13–17},
numpages = {5},
keywords = {teaching strategy, phenomenography, object-oriented programming},
location = {Bilkent, Ankara, Turkey},
series = {ITiCSE '10}
}

@article{10.1145/1721933.1721954,
author = {Neeman, Henry and Severini, Horst and Wu, Dee and Kantardjieff, Katherine},
title = {Teaching high performance computing via videoconferencing},
year = {2010},
issue_date = {March 2010},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/1721933.1721954},
doi = {10.1145/1721933.1721954},
abstract = {As computing technologies evolve, teaching advanced computing is becoming increasingly crucial. The target audience, including not only computer scientists but also many domain scientists and engineers, requires an approach that focuses less on technologies and more on fundamental concepts. The most effective approach for this audience emphasizes not technical details but rather analogies, storytelling and play. The strong need for this kind of education, and the wide variety of institution types needing it, have lead to rising demand for remote delivery via videoconferencing, and the high failure rate of many videoconferencing technologies requires multiple simultaneous videoconferencing approaches.},
journal = {ACM Inroads},
month = {mar},
pages = {67–71},
numpages = {5},
keywords = {scientific programming, parallel computing, inexperienced programmers}
}

@inproceedings{10.5555/1862712.1862723,
author = {de Raadt, Michael and Watson, Richard and Toleman, Mark},
title = {Teaching and assessing programming strategies explicitly},
year = {2009},
isbn = {9781920682767},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
abstract = {This paper describes how programming strategies were explicitly instructed and assessed in an introductory programming course and describes the impact of this curricular change. A description is given of how strategies were explicitly integrated into teaching materials and assessed in assignments and examinations. Comparisons are made between the outcomes of novices under the new curriculum and results of novices' learning under the previous implicit-only strategy curriculum, measured in an earlier study. This comparison shows improvement in novices' strategy application under the new curriculum.},
booktitle = {Proceedings of the Eleventh Australasian Conference on Computing Education - Volume 95},
pages = {45–54},
numpages = {10},
keywords = {strategies, introductory programming, curriculum},
location = {Wellington, New Zealand},
series = {ACE '09}
}

@inproceedings{10.1145/1411260.1411270,
author = {Achten, Peter},
title = {Teaching functional programming with soccer-fun},
year = {2008},
isbn = {9781605580685},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1411260.1411270},
doi = {10.1145/1411260.1411270},
abstract = {In this paper we report on our experience with the functional framework Soccer-Fun, which is a domain specific language for simulating football. It has been developed for an introductory course in functional programming at the Radboud University Nijmegen, The Netherlands. We have used Soccer-Fun in teaching during the past four years. We have also experience in using Soccer-Fun for pupils in secondary education. Soccer-Fun is stimulating because it is about a well known problem domain. It engages students to problem solving with functional programming because it allows them to compete at several disciplines: the best performing football team can become champion of a tournament; the best written code can be awarded with a prize; students can be judged on the algorithms used. This enables every student to participate and perform at her favorite skill. Soccer-Fun is implemented in Clean and uses its GUI toolkit Object I/O for rendering. It can be implemented in any functional programming language that supports some kind of windowing toolkit.},
booktitle = {Proceedings of the 2008 International Workshop on Functional and Declarative Programming in Education},
pages = {61–72},
numpages = {12},
keywords = {soccer, simulation, education, clean},
location = {Victoria, BC, Canada},
series = {FDPE '08}
}

@article{10.5555/1289280.1289327,
author = {Edgington, Jeffrey},
title = {Teaching and viewing recursion as delegation},
year = {2007},
issue_date = {October 2007},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {1},
issn = {1937-4771},
abstract = {We present an effective way to teach recursion which we believe nearly anyone can understand. Most people are familiar with the concept of someone delegating a task to another person. Our method is based on this idea and presents recursion as a particular form of task delegation. This simple form of delegation is similar to the Little People metaphor. We then extend this form to a more general description of task delegation. We believe that this extension improves understanding of how to program recursive procedures (especially by end-users and novice programmers). Finally we discuss the initial design of a recursion visualization based on task delegation for the Greenfoot programming environment.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {241–246},
numpages = {6}
}

@inproceedings{10.1145/1268784.1268877,
author = {Draganova, Chrisina and Vassilev, Vassil},
title = {Teaching AJAX in web-centric courses},
year = {2007},
isbn = {9781595936103},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1268784.1268877},
doi = {10.1145/1268784.1268877},
abstract = {Asynchronous JavaScript and XML (AJAX) is a web development technique for building responsive web applications behaving in a similar fashion to traditional desktop applications. This poster illustrates ideas for teaching the AJAX technique in web-centric courses based on the experience of implementing these ideas at London Metropolitan University and provides links to resources appropriate for use in laboratorial work.},
booktitle = {Proceedings of the 12th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {311},
numpages = {1},
keywords = {AJAX, asynchronous communications, service-oriented architectures, web applications},
location = {<conf-loc>, <city>Dundee</city>, <country>Scotland</country>, </conf-loc>},
series = {ITiCSE '07}
}

@article{10.5555/1231091.1231098,
author = {Thiebaut, Dominique},
title = {On startups and teaching computer architecture},
year = {2007},
issue_date = {June 2007},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {22},
number = {6},
issn = {1937-4771},
abstract = {The ACM 2001 curriculum [1] states that "[s]tudents need to understand computer architecture in order to structure a program so that it runs more efficiently on a real machine. In selecting a system to use, they should be able to understand the tradeoff among various components, such as CPU clock speed vs. memory size." Generally, the computer architecture (CA) class in computer science departments is taught in two flavors: one where the lectures are centered on textbooks such as Staellings[2] or Hennessy and Patterson[3], the other one---usually taught by faculty with more engineering backgrounds---where a digital electronics perspective is presented in lectures and laboratories, and in which case textbooks such as Mano[4] are used. In recent years, we have seen new textbooks appear offering Hardware Description Language (VHSL) as a conduit for understanding and then programming logic design and microprocessor electronics [5]. In this approach a language, typically Verilog, is used as a support for understanding and designing simple logic circuits that are easily encapsulated in modules, and in turn integrated into a microprocessor design. Rigo et al. [6] describe their experience teaching architecture using a similar approach based on the Architecture Description Language (ADL). Similarly, Gray [7] proposes a whole computer architecture course based on FPGAs.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {28–36},
numpages = {9}
}

@inproceedings{10.1145/1149453.1149461,
author = {Rafaeli, Sheizaf},
title = {Wiki uses in teaching and learning},
year = {2006},
isbn = {1595934138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1149453.1149461},
doi = {10.1145/1149453.1149461},
abstract = {Faculty from five universities will discuss their groups' respective teaching and learning wikis. The group assembled here represents several divergent approaches and projects to harnessing the collaborative and open-source nature of Wikis to the tasks of teaching, educating inquiry and training.We will discuss and compare Wiki projects that cover diverse methods and content fields. Projects include secondary, undergraduate, and graduate level courses. Systems we describe address groups varying in size from roughly a dozen to hundreds of students. We approach the ontology and pedagogy of Wiki-based educational materials drawing on cognitive and social constructivism, a theory of inquiry-based learning, and an interest in information markets and online sharing dynamics. Projects included in this panel have received financial support from a variety of granting agencies, including the Israeli Internet Association, U.S. National Science Foundation, the GVU Center at Georgia Institute of Technology, SHOHAM at The Open University of Israel, and InfoSoc at the University of Haifa.We created and now study widely different implementations of Wiki usage in education that reflect a variety of instructional approaches. In all of the projects we have completed at least one cycle of use, and can therefore report on outcomes that include user feedback, reactions and satisfaction; impact on learning; impact on grade; non-obtrusive measures of usage patterns; and external measures of quality of the content generated and preserved. Our findings address the issues of design considerations, multilingual and multicultural content, group dynamics, evaluation and quality control. We wish to use this panel to share lessons learned and discuss a variety of usage modes, in search of "best practice" models as well as share lessons learned that apply to future modifications and additions to the code.},
booktitle = {Proceedings of the 2006 International Symposium on Wikis},
pages = {15–16},
numpages = {2},
location = {Odense, Denmark},
series = {WikiSym '06}
}

@inproceedings{10.1145/1047344.1047469,
author = {Bailey, Tammy and Forbes, Jeffrey},
title = {Just-in-time teaching for CS0},
year = {2005},
isbn = {1581139977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1047344.1047469},
doi = {10.1145/1047344.1047469},
abstract = {Just-in-Time Teaching (JiTT) is a teaching and learning strategy based on the interaction between web-based study assignments and an active learner classroom. The essence of JiTT is the feedback loop formed by the students' preparation outside the classroom that shapes their in-class experience. The goal of JiTT is to use feedback to guide teaching and to empower and motivate learners. This paper describes a successful implementation of the JiTT strategy for an introductory computer science course.},
booktitle = {Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education},
pages = {366–370},
numpages = {5},
keywords = {pedagogy, non-majors, active learning, JiTT, CS0},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '05}
}

@inproceedings{10.1145/1186107.1186112,
author = {Duesing, James and Hodgins, Jessica K.},
title = {Team teaching animation art and technology},
year = {2004},
isbn = {1581138962},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1186107.1186112},
doi = {10.1145/1186107.1186112},
abstract = {In this paper we report on an interdisciplinary course, "Animation Art and Technology," which we have taught for the past two years at Carnegie Mellon University. Faculty and teaching assistants from computer science and art teach the class as a team and the students are an interdisciplinary mix. This class is a project-based course in which teams of students produce 4-5 animations. Most of the animations have a substantive technical component and the students are challenged to consider innovation with content to be equal with the technical. In this paper, we describe the structure of the class and assess the elements that have worked well and those that require improvement.},
booktitle = {ACM SIGGRAPH 2004 Educators Program},
pages = {4},
location = {Los Angeles, California},
series = {SIGGRAPH '04}
}

@inproceedings{10.1145/1007996.1008094,
author = {Hamada, Mohamed and Shiina, Kazuhiko},
title = {A classroom experiment for teaching automata},
year = {2004},
isbn = {1581138369},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1007996.1008094},
doi = {10.1145/1007996.1008094},
abstract = {In this work we focus on an experiment held at an automata class room to test the effectiveness of using simulators. We developed our own simulator. We also tested two other existing simulators to find whether simulators are useful as a teaching tool in automata classes.},
booktitle = {Proceedings of the 9th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {261},
numpages = {1},
location = {Leeds, United Kingdom},
series = {ITiCSE '04}
}

@article{10.1145/960492.960533,
author = {Bell, Douglas and Mir-Ghasemi, Mehdi},
title = {Teaching data structures using list boxes},
year = {2003},
issue_date = {December 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {35},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/960492.960533},
doi = {10.1145/960492.960533},
abstract = {This paper suggests an approach to the initial teaching of data structures that uses GUI list boxes.},
journal = {SIGCSE Bull.},
month = {dec},
pages = {79–81},
numpages = {3}
}

@inproceedings{10.1145/965106.965126,
author = {Williams, Mitch and Brutzman, Don},
title = {Sharing ideas for teaching Web 3D},
year = {2003},
isbn = {9781450374590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/965106.965126},
doi = {10.1145/965106.965126},
booktitle = {ACM SIGGRAPH 2003 Educators Program},
pages = {1},
numpages = {1},
location = {San Diego, California},
series = {SIGGRAPH '03}
}

@article{10.5555/775339.775343,
author = {McCracken, Dan},
title = {A stealth approach to teaching HCI},
year = {2001},
issue_date = {December 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {2},
issn = {1937-4771},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {4},
numpages = {1}
}

@article{10.5555/374685.374715,
author = {Jones, Edward L. and Chatmon, Christy L.},
title = {A perspective on teaching software testing},
year = {2001},
issue_date = {March 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {16},
number = {3},
issn = {1937-4771},
abstract = {This paper addresses the issue of how to approach the teaching of software testing. Relative to its importance in the software industry, software testing receives very little attention in the undergraduate curriculum. It is not practical to offer a separate course in software testing, so relevant test experiences need to be given throughout core courses. This paper presents a software testing framework identifying five essential principles that motivate the types of testing experiences a student should gain from the curriculum. The framework is illustrated using a simple test problem.},
journal = {J. Comput. Sci. Coll.},
month = {mar},
pages = {92–100},
numpages = {9}
}

@inproceedings{10.1145/330908.331816,
author = {McDonald, Chris and Kazemi, Kamran},
title = {Teaching parallel algorithm with process topologies},
year = {2000},
isbn = {1581132131},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/330908.331816},
doi = {10.1145/330908.331816},
abstract = {Parallel algorithms are often introduced to students by describing the geometric topologies formed by communicating processes and often the geographic relationships between them. However, the two most common message passing environments used in teaching, PVM and MPI, each provide only rudimentary support for the specification and execution of process topologies. There is a strong need for better syntactic and semantic support for process topologies in these environments, so that students may concentrate on the algorithms being studied, and not have to wrestle with the environments' infrastructure. This paper first motivates, and then describes the use of additional support within PVM and MPI which addresses this need.},
booktitle = {Proceedings of the Thirty-First SIGCSE Technical Symposium on Computer Science Education},
pages = {70–74},
numpages = {5},
location = {Austin, Texas, USA},
series = {SIGCSE '00}
}

@article{10.1145/572199.572206,
author = {Bowyer, Professor Kevin W.},
title = {Resources for teaching ethics and computing},
year = {1999},
issue_date = {December 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {29},
number = {4},
issn = {0095-2737},
url = {https://doi.org/10.1145/572199.572206},
doi = {10.1145/572199.572206},
journal = {SIGCAS Comput. Soc.},
month = {dec},
pages = {30–31},
numpages = {2}
}

@inproceedings{10.1145/299649.299667,
author = {Walker, Ellen L. and Browne, Logan},
title = {Teaching Web development with limited resources},
year = {1999},
isbn = {1581130856},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299649.299667},
doi = {10.1145/299649.299667},
abstract = {Computer Science programs are faced with demand from both students and employers for courses in hot topics such as Internet Administration, but resources such as course time and laboratory facilities are often scarce. Another trend facing our programs is the need to increase availability to non-traditional students. This paper describes a course in Internet Administration for both traditional and non-traditional students and how it addressed the issues of limited time, diverse student population, and limited laboratory facilities.},
booktitle = {The Proceedings of the Thirtieth SIGCSE Technical Symposium on Computer Science Education},
pages = {12–16},
numpages = {5},
location = {New Orleans, Louisiana, USA},
series = {SIGCSE '99}
}

@inproceedings{10.1145/134510.134547,
author = {Hughes, Larry},
title = {Teaching operating systems using Turbo C},
year = {1992},
isbn = {0897914686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/134510.134547},
doi = {10.1145/134510.134547},
abstract = {Operating systems are an example of a subject that, given the right tools, can be taught in a practical manner, allowing students to understand, and hence appreciate, the internal workings of commercial operating systems such as VMS, Unix, or VM. Not surprisingly, the tools needed in an operating systems course are, at a minimum, a hardware testbed and a programming language into which algorithms can be translated. This paper describes how many of the salient points concerning operating systems can be covered in a practical manner using the PC and Turbo C.},
booktitle = {Proceedings of the Twenty-Third SIGCSE Technical Symposium on Computer Science Education},
pages = {181–186},
numpages = {6},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '92}
}

@inproceedings{10.1145/107004.107024,
author = {Fisher, Allan L. and Gross, Thomas},
title = {Teaching the programming of parallel computers},
year = {1991},
isbn = {0897913779},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/107004.107024},
doi = {10.1145/107004.107024},
booktitle = {Proceedings of the Twenty-Second SIGCSE Technical Symposium on Computer Science Education},
pages = {102–107},
numpages = {6},
location = {San Antonio, Texas, USA},
series = {SIGCSE '91}
}

@article{10.1145/24728.24742,
author = {Cot\'{e}, Vianney},
title = {Teaching oral communication in computer science},
year = {1987},
issue_date = {June 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/24728.24742},
doi = {10.1145/24728.24742},
abstract = {Software analysts currently spend a large portion of their time communicating with others. Effective communication skills is of extreme importance if one wishes to be an efficient and productive software analyst. This article describes some of the exercises related to oral communications that are imposed on our students. Advantages and difficulties are discussed.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {58–60},
numpages = {3}
}

@inproceedings{10.1145/324634.325377,
author = {Burd, Barry},
title = {Teaching Ada to beginning programmers (abstract)},
year = {1986},
isbn = {0897911776},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/324634.325377},
doi = {10.1145/324634.325377},
booktitle = {Proceedings of the 1986 ACM Fourteenth Annual Conference on Computer Science},
pages = {515},
location = {Cincinnati, Ohio, USA},
series = {CSC '86}
}

@inproceedings{10.3115/980491.980511,
author = {Pulman, S. G.},
title = {Limited domain systems for language teaching},
year = {1984},
publisher = {Association for Computational Linguistics},
address = {USA},
url = {https://doi.org/10.3115/980491.980511},
doi = {10.3115/980491.980511},
abstract = {This abstract describes a natural language system which deals usefully with ungrammatical input and describes some actual and potential applications of it in computer aided second language learning. However, this is not the only area in which the principles of the system might be used, and the aim in building it was simply to demonstrate the workability of the general mechanism, and provide a framework for assessing developments of it.},
booktitle = {Proceedings of the 10th International Conference on Computational Linguistics  and 22nd Annual Meeting on Association for Computational Linguistics},
pages = {84–87},
numpages = {4},
location = {Stanford, California},
series = {ACL '84/COLING '84}
}

@article{10.1145/989253.989264,
author = {Kerridge, J. M. and Willis, N.},
title = {A simulator for teaching computer architecture},
year = {1980},
issue_date = {July 1980},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/989253.989264},
doi = {10.1145/989253.989264},
abstract = {This paper describes the specification, implementation and use of a computer system simulator. The simulator project was begun as a result of teaching a second year undergraduate course in computer systems.It became apparent that students only fully appreciate the differences in computer architecture when they are able to have "hands on" experience. This simulator, which operates at the register transfer level, allows students to gain experience of many different architectures without recourse to many different computers. This experience, in the first instance, is gained by the students being able to run programs on the simulated computers and then investigating the state of the computer after each machine or micro instruction. The design of these teaching computers is chosen so that they demonstrate a particular architectural detail. Subsequently students can design their own computer systems and compare them with simulations of commercially available computers.},
journal = {SIGCSE Bull.},
month = {jul},
pages = {65–71},
numpages = {7}
}

@inproceedings{10.1145/1839379.1839452,
author = {Ivanovi\'{c}, Mirjana and Budimac, Zoran and Mi\v{s}ev, Anastas and Bothe, Klaus and Jurca, Ioan},
title = {Teaching Java through different courses: multi-country experiences},
year = {2010},
isbn = {9781450302432},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1839379.1839452},
doi = {10.1145/1839379.1839452},
abstract = {Under the auspices of DAAD (German Foundation) educationa project, a subproject devoted to teaching of Java programming language started in 2004. The intention of the subproject was to enable usage, of commonly prepared teaching material for different Java topics, at wide range of university courses in participating countries. During last two years advanced Java topics were selected and appropriate teaching material was produced. As well, teachers from different universities and countries started to use common material in wide range of courses. In this paper we share some of results and experiences collected during the existence of the subproject.},
booktitle = {Proceedings of the 11th International Conference on Computer Systems and Technologies and Workshop for PhD Students in Computing on International Conference on Computer Systems and Technologies},
pages = {413–418},
numpages = {6},
keywords = {preparation of teaching material, course development, Java programming language},
location = {Sofia, Bulgaria},
series = {CompSysTech '10}
}

@inproceedings{10.5555/359640.359947,
author = {Bj\o{}rn-Anderson, Niels and Neegard, Peter and Orngreen, Rikke},
title = {The LEGO interactive teaching case: direct consumer access},
year = {2000},
publisher = {Association for Information Systems},
address = {USA},
booktitle = {Proceedings of the Twenty First International Conference on Information Systems},
pages = {823},
keywords = {multimedia, interactive IS, electronic markets, e-commerce/e-business, case study, IS education},
location = {Brisbane, Queensland, Australia},
series = {ICIS '00}
}

@article{10.1145/3583062.3570907,
author = {Samuel, Anita},
title = {Blended Teaching in Health Professions Education},
year = {2023},
issue_date = {February 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2023},
number = {2 Special Issue},
url = {https://doi.org/10.1145/3583062.3570907},
doi = {10.1145/3583062.3570907},
abstract = {Healthcare professionals (doctors, nurses, dentists, etc.) use cutting-edge technologies in patient care. They interact with technologies daily. However, the use of technology for education has not been widely adopted by healthcare professions educators. This special issue explores how educators in different healthcare professions have adapted their teaching to the online environment. The articles in this special issue showcase the use of educational technologies in a broad health professions landscape: dental education, nursing education, medical school, and medical residency programs.},
journal = {ELearn},
month = {feb},
articleno = {1}
}

@inproceedings{10.1145/3465631.3465902,
author = {Duan, Zhu and Cui, Yan},
title = {Hybrid Teaching Mode Based on SPOC},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465902},
doi = {10.1145/3465631.3465902},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {230},
numpages = {4},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/3439147.3439182,
author = {Huang, Tien Yu and Huang, Chih},
title = {Teaching and Learning through the Net},
year = {2021},
isbn = {9781450388795},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3439147.3439182},
doi = {10.1145/3439147.3439182},
abstract = {In this paper, we describe the effects through teaching and learning through net. The pure distance learning experience showed the real environment effects with theoretical and practical teaching and learning. The results showed there are more good effects despite of constraints of distance, and even brought surprisingly way of new teaching and learning. We gathered real data from virtual classroom and online teaching platform with two classes of sophomore students studying database application through Mar to June of 2020 for four months. Through several quiz and assignments, and the presence records of each classes, we conducted Apriori algorithm tests in Weka between learning records and their final scores, we found that there is strong relationship between them. Students’ learning performance existed strong relation between teaching skills, proper designed quizzes, proper volume of assignments and high-quality teaching materials.},
booktitle = {Proceedings of the 2020 4th International Conference on Education and E-Learning},
pages = {92–95},
numpages = {4},
keywords = {Weka, Distance learning, Apriori algorithm},
location = {Yamanashi, Japan},
series = {ICEEL '20}
}

@inproceedings{10.1145/3342428.3342666,
author = {Gaggi, Ombretta and Petenazzi, Giulia},
title = {A digital platform for teaching mathematics},
year = {2019},
isbn = {9781450362610},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3342428.3342666},
doi = {10.1145/3342428.3342666},
abstract = {In this paper, we present a complete platform for an innovative way to teach mathematics. The platform is composed of a serious game to help children to understand fractions, and a web portal that allows teachers to configure exercises involving fractions, but also to design completely new exercises using a very simple block-based programming language. In this way our tool can be used by primary school teachers as an help to teach mathematics, but also secondary or high schools teachers to teach students computational thinking and basic skills of programming languages.},
booktitle = {Proceedings of the 5th EAI International Conference on Smart Objects and Technologies for Social Good},
pages = {37–42},
numpages = {6},
keywords = {Teaching Mathematics, Serious Games, Mobile Applications, Block-based language},
location = {Valencia, Spain},
series = {GoodTechs '19}
}

@article{10.1145/3145454,
author = {Krusche, Stephan and Dzvonyar, Dora and Xu, Han and Bruegge, Bernd},
title = {Software Theater—Teaching Demo-Oriented Prototyping},
year = {2018},
issue_date = {June 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {2},
url = {https://doi.org/10.1145/3145454},
doi = {10.1145/3145454},
abstract = {Modern capstone courses use agile methods to deliver and demonstrate software early in the project. However, a simple demonstration of functional and static aspects does not provide real-world software usage context, although this is integral to understand software requirements. Software engineering involves capabilities such as creativity, imagination, and interaction, which are typically not emphasized in software engineering courses. A more engaging, dynamic way of presenting software prototypes is needed to demonstrate the context in which the software is used. We combine agile methods, scenario-based design, and theatrical aspects into software theater, an approach to present visionary scenarios using techniques borrowed from theater and film, including props and humor.We describe the software theater workflow, provide examples, and explain patterns to demonstrate its potential. We illustrate two large case studies in which we teach students with varying levels of experience to apply software theater: a capstone course involving industrial customers with 100 students and an interactive lecture-based course with 400 students. We empirically evaluated the use of software theater in both courses. Our evaluations show that students can understand and apply software theater within one semester and that this technique increases their motivation to prepare demonstrations even early in the project. Software theater is more creative, memorable, dynamic, and engaging than normal demonstration techniques and brings fun into education.},
journal = {ACM Trans. Comput. Educ.},
month = {jul},
articleno = {10},
numpages = {30},
keywords = {visionary scenarios, scenario-based design, collaborative learning, Agile methods}
}

@inproceedings{10.1145/3125659.3125689,
author = {Kang, Jai W. and Yu, Qi and Golen, Erik},
title = {Teaching IoT (Internet of Things) Analytics},
year = {2017},
isbn = {9781450351003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3125659.3125689},
doi = {10.1145/3125659.3125689},
abstract = {The rapid proliferation of Internet of Things devices around the world has led to a major increase in demand from industry for students equipped with the skills necessary to make continued advances in this area. Consequently, advanced analytical skills are in urgent need to capitalize the massive amount raw data collected by various IoT devices. To address the market demand in IoT and Analytics, the Information Sciences and Technologies department at the Rochester Institute of Technology has proposed an advanced certificate in IoT Analytics that extends across its three Master of Science degree programs. The central focus of this work is a presentation of this advanced certificate program that is designed to encompass the four pillars of IoT, namely Sensors, Communications, Computing Devices, and Analytics.},
booktitle = {Proceedings of the 18th Annual Conference on Information Technology Education},
pages = {135–140},
numpages = {6},
keywords = {network, internet of things, information sciences and technologies, data analytics, curriculum, cloud computing, big data},
location = {Rochester, New York, USA},
series = {SIGITE '17}
}

@inproceedings{10.1145/3059009.3059045,
author = {O'Brien, Darragh},
title = {Teaching Operating Systems Concepts with SystemTap},
year = {2017},
isbn = {9781450347044},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3059009.3059045},
doi = {10.1145/3059009.3059045},
abstract = {The study of operating systems is a fundamental component of all undergraduate computer science degree programmes. Making operating system concepts concrete typically entails large programming projects. Such projects traditionally involve enhancing an existing module in a real-world operating system or extending a pedagogical operating system. The latter programming projects represent the gold standard in the teaching of operating systems and their value is undoubted. However, there is room in introductory operating systems courses for supplementary approaches and tools that support the demonstration of operating system concepts in the context of a live, real-world operating system. This paper describes an approach where the Linux monitoring tool SystemTap is used to capture kernel-level events in order to illustrate, with concrete examples, operating system concepts in the areas of scheduling, file system implementation and memory management. For instructors and students (where often for the latter seeing is believing) this approach offers an additional simple and valuable resource for solidifying understanding of concepts that might otherwise remain purely theoretical.},
booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {335–340},
numpages = {6},
keywords = {systemtap, scheduling, operating system, memory management, file system},
location = {Bologna, Italy},
series = {ITiCSE '17}
}

@inproceedings{10.1145/3029798.3038335,
author = {Roy, Sayanti and Maske, Harshal and Chowdhary, Girish and Crick, Christopher},
title = {Teaching and Learning using Semantic Labels},
year = {2017},
isbn = {9781450348850},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3029798.3038335},
doi = {10.1145/3029798.3038335},
abstract = {We improve robotic learning from demonstration (LfD) via an active learning process of interacting with a human expert to establish a semantic structure and labels for a sign language task. This process situates a learned task in a human-accessible conceptual framework, in order to improve skill transfer not only from expert human teacher to robot, but from robot to novice human learner.},
booktitle = {Proceedings of the Companion of the 2017 ACM/IEEE International Conference on Human-Robot Interaction},
pages = {271–272},
numpages = {2},
keywords = {semantic labels, learning from demonstration, hierarchical learning},
location = {Vienna, Austria},
series = {HRI '17}
}

@article{10.1145/3043950,
author = {von Wangenheim, Christiane Gresse and von Wangenheim, Aldo and Pacheco, Fernando S. and Hauck, Jean C. R. and Ferreira, Miriam Nathalie F.},
title = {Teaching physical computing in family workshops},
year = {2017},
issue_date = {March 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/3043950},
doi = {10.1145/3043950},
journal = {ACM Inroads},
month = {feb},
pages = {48–51},
numpages = {4}
}

@inproceedings{10.1145/2889160.2889187,
author = {Galster, Matthias and Angelov, Samuil},
title = {What makes teaching software architecture difficult?},
year = {2016},
isbn = {9781450342056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2889160.2889187},
doi = {10.1145/2889160.2889187},
abstract = {The software architecture is usually the first design artifact that addresses quality issues (e.g., performance, security). Also, the architecture is reference point for other development activities, e.g., coding and maintenance. Based on our experience teaching software engineering and architecture at different institutions and levels, we discuss what makes teaching software architecture difficult, and how teaching architecture differs from teaching other software engineering topics. Our discussions can help educators design and improve software architecture curricula, and support education researchers in investigating pedagogical approaches and tools for better software architecture training.},
booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
pages = {356–359},
numpages = {4},
keywords = {training, students, software architecture, learners, education},
location = {Austin, Texas},
series = {ICSE '16}
}

@inproceedings{10.5555/2541917.2541920,
author = {Michels, Gerard and Joosten, Stef},
title = {Progressive Development and Teaching with RAP},
year = {2013},
publisher = {Open Universiteit, Heerlen},
address = {Heerlen, NLD},
abstract = {Teaching a formal method to business students can be quite challenging. Even more so, if this happens in a distance learning environment. For this purpose, the authors have developed the Repository for Ampersand Projects (RAP). RAP is a platform for researchers and students, that supports the learning of rule-based design in a formal method called Ampersand. While students perform design exercises in RAP, researchers are collecting measurements about the student's behaviour. RAP was designed to experiment with measurements of student behaviour, for the purpose of studying the didactics of this specific subject. In this paper, the authors demonstrate the practice of RAP by showing how various measurements have led to meaningful hypotheses about student behaviour. With RAP, the authors hope to increase their understanding of teaching formal methods and support students in learning Rule Based Design.},
booktitle = {Proceedings of the 3rd Computer Science Education Research Conference on Computer Science Education Research},
pages = {33–43},
numpages = {11},
keywords = {rule-based design, learning behaviour, learning analytics, formal method, distance learning, Ampersand},
location = {Arnhem, Netherlands},
series = {CSERC '13}
}

@inproceedings{10.1145/1999747.1999898,
author = {Ambrosio, Ana Paula and Martins, Scheila W.},
title = {What matters most when teaching CS1},
year = {2011},
isbn = {9781450306973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1999747.1999898},
doi = {10.1145/1999747.1999898},
abstract = {The objective of research and proposals related to the domain of computer science and education is to offer resources and contexts that help teachers and students to increase learning effectiveness. Algorithms and Programming courses present an obstacle to an increasing number of first year students worldwide, and has become the object of study of many researchers and faculty members worried with the consequences this difficulty entails, such as high dropout and failure rates, and lack of motivation [1].Several proposals have been made, using different programming languages and paradigms, as well as different methodologies, including the development of tools and environments that help students to develop their programming abilities. Most of these proposals are concerned with the motivational aspect of the course, and try to involve the students in the discipline, leading them to persist and not give up in spite of its natural difficulty [2].In many cases there have been reports of success. Often the credits of success are given to the new approaches, methodologies and environments adopted in the experiment. However, an important variable is often disregarded: the teacher's quality and motivation. It should be observed that most of these experiments are undertaken by high quality teachers that are also motivated researchers in the domain of Computer Science education. Their enthusiasm and dedication to the course is undeniable. The question is: to what extent does the teacher's motivation and enthusiasm contribute to the success of the experiment? Most reports do not discuss this issue and often they are limited to the application of the new approach to groups taught by the researcher himself or by members of the research team, equally motivated.Many reports have established that the human factor is key to the success of an educational system [3]. In all educational levels, from kindergarten to the university, there are examples of brilliant pedagogical proposals that fail. Some of them, apparently due to how they were executed [4]. More, some government and specialists are rethinking the essential factors that may influence the schooling outcome and produce more effective results in educational reforms, specially since despite the massive increases in spending, the performance of many school systems has barely improved in decades [5,6].Experiences of top school systems suggest that three things matter most to good quality schooling: 1) getting the right people to become teachers, 2) developing them into effective instructors and, 3) ensuring that the system is able to deliver the best possible instruction for every student [6].If this is true for schools, can't we suppose that this is also true in teaching CS1? If so, can we deduce that the teacher is determinant in the outcome of the teaching experience? And that the new methodologies, tools and environments are efficient support for these teachers?},
booktitle = {Proceedings of the 16th Annual Joint Conference on Innovation and Technology in Computer Science Education},
pages = {385},
numpages = {1},
keywords = {teacher motivation, programming learning, human factors},
location = {Darmstadt, Germany},
series = {ITiCSE '11}
}

@article{10.5555/1516546.1516581,
author = {Wu, Penn},
title = {Teaching basic game programming using JavaScript},
year = {2009},
issue_date = {April 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {24},
number = {4},
issn = {1937-4771},
abstract = {JavaScript is a sophisticated modern object-based scripting language. Although it has technical restrictions, it has sufficient features to create Web games, or games people play through the Web. Using JavaScript students can learn the concepts and immediately present their web games to the Web. This paper reports how the author successfully uses JavaScript to teach basic key concepts in a college-level introductory course of game programming.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {211–220},
numpages = {10}
}

@inproceedings{10.1145/1414558.1414596,
author = {Jovanovic, Vladan and Cupic, Lily},
title = {Teaching agile validation of data models},
year = {2008},
isbn = {9781605583297},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1414558.1414596},
doi = {10.1145/1414558.1414596},
abstract = {The paper presents a novel approach to teaching agile validation of data models. The advantage of this approach is in minimizing required classroom time to achieve desirable learning outcomes of understanding model validation and of enabling ability to perform such validations. The primary contribution of the paper is in formulating the first agile approach to data model validation suitable for students. The paper explains agile methods proposed to be used together, compares agile with traditional reviews and provides suggestions for teaching agile validation of data models across computing disciplines.},
booktitle = {Proceedings of the 9th ACM SIGITE Conference on Information Technology Education},
pages = {139–146},
numpages = {8},
keywords = {teaching validation, data model validation, agile validation},
location = {Cincinnati, OH, USA},
series = {SIGITE '08}
}

@inproceedings{10.1145/1411260.1411272,
author = {Ruehr, Fritz},
title = {Tips on teaching types and functions},
year = {2008},
isbn = {9781605580685},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1411260.1411272},
doi = {10.1145/1411260.1411272},
abstract = {Many beginning students of functional programming have difficulty understanding higher-order functions and their types. Experienced functional programmers have such a close familiarity and intuitive grasp of these crucial concepts that they may find it hard to "bridge the gap," so as to provide their students with a firm understanding of these ideas. I describe a loosely-related cluster of tips and techniques which address the pedagogy of higher-order functions and types, for students with varying degrees of mathematical background and different learning styles - these techniques include tabular presentations, code tools, visual metaphors and an abstract algebra. Although the underlying ideas will be familiar to experts, I believe these presentations can help educators bring important ideas in functional programming to a broader range of students, with less pain and with a deeper understanding.},
booktitle = {Proceedings of the 2008 International Workshop on Functional and Declarative Programming in Education},
pages = {79–90},
numpages = {12},
keywords = {punch-hole diagrams, power rings, pedagogy, higher-order functions, function types},
location = {Victoria, BC, Canada},
series = {FDPE '08}
}

@article{10.5555/1352627.1352646,
author = {Tymann, Paul T. and Trees, Frances P.},
title = {Teaching with the GridWorld case study},
year = {2008},
issue_date = {May 2008},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {5},
issn = {1937-4771},
abstract = {Case studies expose students to large programs, enabling them to understand the importance of design and good programming style while encouraging teamwork and active learning. While there are some excellent sources of good programming examples, most are not at the CS-1 level. Creating an appropriate program to illustrate the key ideas of CS-1 is one of the largest obstacles. Fortunately, there are some existing case studies which can be used. The AP Computer Science curriculum has used case studies since 1995 and performance on case study exam questions shows a significantly smaller score difference between males and females than non-case study questions. Beginning this year, the AP CS curriculum includes the GridWorld Case Study. The first portion of the workshop will introduce the participants to the GridWorld environment allowing them to explore GridWorld through a series of guided activities which demonstrate inheritance and class interaction. During the second portion of the workshop participants will be shown examples of how the GridWorld Case Study can be used in a typical Computer Science 1 course.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {118–119},
numpages = {2}
}

@article{10.5555/1289280.1289307,
author = {Cockburn, Alistair},
title = {Teaching the next generation software engineering},
year = {2007},
issue_date = {October 2007},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {23},
number = {1},
issn = {1937-4771},
abstract = {Most software engineering courses do not incorporate current best practices found in industry: collaborative development, automated testing, frequent integration, version control, user-centered design, architectural patterns, active reflection, incremental / iterative development, and so on. A typical excuse is that the material isn't suited to incremental / iterative teaching, so that a waterfall-styled, semester-long project is all that can be managed in the first semester course. A side excuse is that "software engineering" as it is usually perceived is "too heavy", even irrelevant, to junior students.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {118},
numpages = {1}
}

@inproceedings{10.1145/1227310.1227376,
author = {Craig, Michelle},
title = {Facilitated student discussions for evaluating teaching},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1227310.1227376},
doi = {10.1145/1227310.1227376},
abstract = {Trying to improve undergraduate teaching based on feedback collected by traditional student course evaluations can be a frustrating experience. Unclear, contradictory and ill-informed student comments leave instructors confused and discouraged. We designed and then implemented an evaluation mechanism where an independent CS faculty peer visits a lecture and holds an evaluation discussion with the students. These facilitated discussions begin by looking at overall strengths and weaknesses for the course but quickly focus on the key student concerns and suggestions for improvement. After conducting thirty four facilitated discussions, we find them appreciated by students who feel heard and valued. A survey of participating faculty indicates that the written discussion report is more useful to them than standard student survey results. Faculty report that they have made changes based on the recommendations and limited quantitative data suggests that teaching has improved and its value in the departmental culture has increased. In this paper we describe the evaluation process, discuss our experiences and offer some concrete suggestions for those who might want to try this approach in their own department.},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
pages = {190–194},
numpages = {5},
keywords = {teaching evaluation, focus groups, facilitated discussions},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

@inproceedings{10.1145/1140124.1140230,
author = {Russell, Ingrid and Markov, Zdravko and Neller, Todd},
title = {Teaching AI through machine learning projects},
year = {2006},
isbn = {1595930558},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1140124.1140230},
doi = {10.1145/1140124.1140230},
abstract = {An introductory Artificial Intelligence (AI) course provides students with basic knowledge of the theory and practice of AI as a discipline concerned with the methodology and technology for solving problems that are difficult to solve by other means. It is generally recognized that an introductory Artificial Intelligence course is challenging to teach. This is, in part, due to the diverse and seemingly disconnected core AI topics that are typically covered. Recently, work has been done to address the diversity of topics covered in the course and to create a theme-based approach. Russell and Norvig present an agent-centered approach [9]. Others have been working to integrate Robotics into the AI course [1, 2, 3].We present work on a project funded by the National Science Foundation with a goal of unifying the artificial intelligence course around the theme of machine learning. This involves the development and testing of an adaptable framework for the presentation of core AI topics that emphasizes the relationship between AI and computer science. Machine learning is inherently connected with the AI core topics and provides methodology and technology to enhance real-world applications within many of these topics. Machine learning also provides a bridge between AI technology and modern software engineering. In his article, Mitchell discusses the increasingly important role that machine learning plays in the software world and identifies three important areas: data mining, difficult-to-program applications, and customized software applications [6].We have developed a suite of adaptable, hands-on laboratory projects that can be closely integrated into the introductory AI course. Each project involves the design and implementation of a learning system which will enhance a particular commonly-deployed application. The goal is to enhance the student learning experience in the introductory artificial intelligence course by (1) introducing machine learning elements into the AI course, (2) implementing a set of unifying machine learning laboratory projects to tie together the core AI topics, and (3) developing, applying, and testing an adaptable framework for the presentation of core AI topics which emphasizes the important relationship between AI and computer science in general, and software development in particular. Details on this project as well as samples of course materials developed are published in [4, 5, 7, 8] and are available at the project website at http://uhaweb.hartford.edu/compsci/ccli.We present an overview of our work along with a detailed presentation of one of these projects and how it meets our goals.The project involves the development of a learning system for web document classification. Students investigate the process of classifying hypertext documents, called tagging, and apply machine learning techniques and data mining tools for automatic tagging. Our experiences using the projects are also presented.},
booktitle = {Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {323},
numpages = {1},
keywords = {projects, artificial intelligence},
location = {Bologna, Italy},
series = {ITICSE '06}
}

@inproceedings{10.1145/1140124.1140170,
author = {Matzko, Sarah and Davis, Timothy A.},
title = {Teaching CS1 with graphics and C},
year = {2006},
isbn = {1595930558},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1140124.1140170},
doi = {10.1145/1140124.1140170},
abstract = {The goal of the τέχνη project is to teach computer science concepts more effectively by infusing large-scale problems in computer graphics into the undergraduate curriculum. Ultimately, this approach would be adopted for all computer science courses in the B.A. curriculum; currently, we are working on the foundational sequence, which includes CS1. For this first course in programming, we present our approach to teaching course concepts using real-world image processing problems in C. The results from our first semester offering are promising, as students produced excellent work and evaluated the class highly.},
booktitle = {Proceedings of the 11th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {168–172},
numpages = {5},
keywords = {problem-based learning, curriculum issues, computer science education, computer graphics},
location = {Bologna, Italy},
series = {ITICSE '06}
}

@inproceedings{10.5555/1162708.3260066,
author = {Son, Young-Jun},
title = {Session details: Simulation education: teaching simulation},
year = {2005},
isbn = {0780395190},
publisher = {Winter Simulation Conference},
booktitle = {Proceedings of the 37th Conference on Winter Simulation},
location = {Orlando, Florida},
series = {WSC '05}
}

@inproceedings{10.1145/1067445.1067560,
author = {Bass, Ilana and Lanzberg, Dvir},
title = {Teaching to analyze solutions using FGA},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067560},
doi = {10.1145/1067445.1067560},
abstract = {In this poster we introduce a problem encountered in "Data Structures" course: The difficulties students meet when they try to evaluate their own solutions. We present a tool we use to solve this problem.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {360},
numpages = {1},
keywords = {pseudo code, data structures, correctness analysis, algorithm design},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@inproceedings{10.1145/1067445.1067482,
author = {Claypool, Kajal and Claypool, Mark},
title = {Teaching software engineering through game design},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067482},
doi = {10.1145/1067445.1067482},
abstract = {Many projects currently used in Software Engineering curricula lack both the "fun factor" needed to engage students, as well as the practical realism of engineering projects that include other computer science disciplines such as Software Engineering, Networks, or Human Computer Interaction. This paper reports on our endeavor to enhance interest and retention in an existing Software Engineering curriculum through the use of computer game-based projects. Specifically, a set of game-centric, project-based modules have been developed that enable students to: (1) actively participate in the different phases of the software lifecycle taking a single project from requirement elicitation to testing and maintenance; (2) expose students to real issues in project and team management over the course of a 2-semester project; and at the same time (3) introduce students to the different aspects of computer game design. Preliminary results suggest the merits of our approach, showing improved class participation and performance.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {123–127},
numpages = {5},
keywords = {software engineering, game engineering, game design, computer games},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@inproceedings{10.1007/11499909_10,
author = {Simon, Daniel and Vogel, Gunther and Pl\"{o}dereder, Erhard},
title = {Teaching software engineering with ada 95},
year = {2005},
isbn = {3540262865},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/11499909_10},
doi = {10.1007/11499909_10},
abstract = {At the University of Stuttgart we performed five major software projects using Ada95 in groups of six to nine third-year students. Since the year 2000, the students have produced more than 180’000 effective lines of Ada95 source code in total and delivered five different graphical tools for the navigation and manipulation of complex data structures.In this paper, we report on our experience with these projects. First, we give a short overview, describe the software engineering curriculum, and introduce the Bauhaus reengineering project as the context of the projects. We summarise the characteristics of the projects and the applied development processes in terms of statistics. Finally, we report on the lessons we learnt when supervising the students and give recommendations for successful software projects with Ada95 in education.},
booktitle = {Proceedings of the 10th Ada-Europe International Conference on Reliable Software Technologies},
pages = {115–128},
numpages = {14},
location = {York, UK},
series = {Ada-Europe'05}
}

@article{10.5555/1060081.1060138,
author = {Stull, Benjamin},
title = {Teaching wireless networking with limited resources},
year = {2004},
issue_date = {May 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {19},
number = {5},
issn = {1937-4771},
abstract = {In recent years, we have developed applications for teaching both wired and wireless networking. These applications have been written for the Cybiko personal digital assistant, an inexpensive alternative to other hardware. Unfortunately, the Cybiko PDA was recently discontinued. As a result, these applications had to be ported to other platforms to remain useful. Instead of porting each application to individual platforms, which would prove to be extremely time consuming because of other API's and networking protocols, we created the Vassar College Messaging Layer. This layer abstracts the Cybiko networking structure and interface, allowing Cybiko applications to be ported to other platforms with minimal code alteration.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {312–313},
numpages = {2}
}

@inproceedings{10.1145/971300.971408,
author = {Richards, Brad and Stull, Benjamin},
title = {Teaching wireless networking with limited resources},
year = {2004},
isbn = {1581137982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/971300.971408},
doi = {10.1145/971300.971408},
abstract = {The rapid growth of wireless communications services and networks has led departments to consider offering elective courses on the topic. Textbooks exist that can help support such a course, but providing students with hands-on wireless networking experience can be difficult and expensive.We present the outline of a wireless networking course that can be offered with minimal resources, and describe our experiences using the approach. The students who took the initial offering of the course gained hands-on experience with wireless networking, did traditional sockets programming, and acquired the theoretical foundations of both traditional and wireless networking.Students implement a simplified IEEE 802.11 Wireless Ethernet MAC layer as a course project. In our case, the implementations took advantage of the Cybiko, a $50 wireless handheld computer targeted at teenagers. Our materials are currently being ported to other platforms, including Bluetooth-enabled Palms and networks of workstations. The latter platform will allow this project to be conducted without any special resources.},
booktitle = {Proceedings of the 35th SIGCSE Technical Symposium on Computer Science Education},
pages = {306–310},
numpages = {5},
keywords = {wireless, pedagogy, networks},
location = {Norfolk, Virginia, USA},
series = {SIGCSE '04}
}

@inproceedings{10.5555/858403.858406,
author = {McAndrew, Alasdair},
title = {Teaching image processing using minimal mathematics},
year = {2003},
isbn = {0909925984},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
abstract = {Image processing is often presented as a two dimensional version of signal processing, and as such, assumes for its background several years of undergraduate engineering-style mathematics. But such heavy mathematics does not form the background of many students of computer science. In Australia, some tertiary courses are phasing formal mathematics out of their computer science courses completely. This means that the effective teaching of image processing to students of computer science must use as little mathematics as possible. In this paper we discuss the undergraduate subjects taught at Victoria University of Technology (VUT), and our methods of keeping the mathematics in them to a minimum.},
booktitle = {Proceedings of the Fifth Australasian Conference on Computing Education - Volume 20},
pages = {15–23},
numpages = {9},
keywords = {image processing, mathematics, undergraduate teaching},
location = {<conf-loc>, <city>Adelaide</city>, <country>Australia</country>, </conf-loc>},
series = {ACE '03}
}

@inproceedings{10.5555/858403.858404,
author = {Bem, Ewa Z.},
title = {A case for teaching computer architecture},
year = {2003},
isbn = {0909925984},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
abstract = {Both national and international professional bodies acknowledge computer architecture and organisation as an inherent part of computer science body of knowledge. Despite that fact computer architecture and organisation courses, especially at an advanced level, are disappearing from the computer science academic curricula of many Australian universities. In this paper we attempt to identify the reasons why this happens, and we argue against this trend. We present our approach to teaching an advanced computer architecture course, in such a way that it is relevant to the students' future professional life, and can also be implemented without specialised resources. We also describe the experience of delivering this course to undergraduate computer science students over a period of three years.},
booktitle = {Proceedings of the Fifth Australasian Conference on Computing Education - Volume 20},
pages = {1–7},
numpages = {7},
keywords = {computer organisation and architecture, undergraduate teaching},
location = {<conf-loc>, <city>Adelaide</city>, <country>Australia</country>, </conf-loc>},
series = {ACE '03}
}

@article{10.1145/764008.763956,
author = {Rothwell, Trevis J.},
title = {Teaching the history of computer science},
year = {2002},
issue_date = {December 1 - December 31, 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2002},
number = {December},
url = {https://doi.org/10.1145/764008.763956},
doi = {10.1145/764008.763956},
abstract = {Students who are truly interested in computer science would enjoy learning about those programmers who went before them, and how they overcame their difficulties.},
journal = {Ubiquity},
month = {dec},
articleno = {4}
}

@inproceedings{10.1145/359369.359412,
author = {Postema, Margot and Miller, Jan and Dick, Martin},
title = {Teaching software evolution practice (poster session)},
year = {2000},
isbn = {1581132719},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/359369.359412},
doi = {10.1145/359369.359412},
booktitle = {Proceedings of the Australasian Conference on Computing Education},
pages = {255},
location = {Melbourne, Australia},
series = {ACSE '00}
}

@inproceedings{10.1145/266057.266169,
author = {Bishop, Judith M.},
title = {A philosphy of teaching Java (poster)},
year = {1997},
isbn = {1581130120},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/266057.266169},
doi = {10.1145/266057.266169},
booktitle = {The Supplemental Proceedings of the Conference on Integrating Technology into Computer Science Education: Working Group Reports and Supplemental Proceedings},
pages = {146},
location = {Uppsala, Sweden},
series = {ITiCSE-WGR '97}
}

@inproceedings{10.1145/199688.199859,
author = {Noyes, James L.},
title = {Teaching a modern numerical analysis course},
year = {1995},
isbn = {089791693X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/199688.199859},
doi = {10.1145/199688.199859},
abstract = {The traditional introductory undergraduate numerical analysis course typically begins by addressing some mathematical preliminaries and computer arithmetic followed by one or more major topic areas. For each of these areas, specific problems are proposed, algorithms for their solution are derived and implemented, results are obtained, and an associated error analysis is made. The algorithms and associated software are usually sequential in nature and the error analysis is often simplified. Increasingly, students need to be made aware of the additional hardware and software advances that can make the solution of these problems more efficient and their error analysis easier. This paper discusses an approach that incorporates Mathematica to help provide problem insight and an improved error analysis, and a parallel processing simulation program called Multi-Pascal, to help teach effective algorithm implementation.},
booktitle = {Proceedings of the Twenty-Sixth SIGCSE Technical Symposium on Computer Science Education},
pages = {355–359},
numpages = {5},
location = {Nashville, Tennessee, USA},
series = {SIGCSE '95}
}

@article{10.1145/190650.190660,
author = {Becker, Byron Weber},
title = {Inexpensive teaching techniques with rich rewards},
year = {1994},
issue_date = {Dec. 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/190650.190660},
doi = {10.1145/190650.190660},
abstract = {A brief report on several teaching techniques that have rewards that far outweigh their costs. Experiences with four techniques are discussed: a "Pause" during lectures, student submission of exam questions, group projects, and a technique for learning students' names. These experiences are largely in the context of a Data Structures class, but are applicable to most lecture-oriented classes.},
journal = {SIGCSE Bull.},
month = {dec},
pages = {41–44},
numpages = {4}
}

@inproceedings{10.1145/192161.192290,
author = {Bresenham, Jack and Laxer, Cary and Lansdown, John and Owen, G. Scott and Larrondo-Petrie, Maria M.},
title = {Approaches to teaching introductory computer graphics},
year = {1994},
isbn = {0897916670},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/192161.192290},
doi = {10.1145/192161.192290},
booktitle = {Proceedings of the 21st Annual Conference on Computer Graphics and Interactive Techniques},
pages = {479–480},
numpages = {2},
series = {SIGGRAPH '94}
}

@inproceedings{10.1145/191029.191155,
author = {Pattis, Richard E.},
title = {Teaching EBNF first in CS 1},
year = {1994},
isbn = {0897916468},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/191029.191155},
doi = {10.1145/191029.191155},
abstract = {This paper is a guided tour through the first day of a CS 1 course. It discusses teaching Extended Backus-Naur Form (EBNF) as the first topic—not to facilitate presenting the syntax of a programming language, but because EBNF is a microcosm of programming. With no prerequisites, students are introduced to a variety of fundamental concepts in programming: formal systems, abstraction, control structures, equivalence of descriptions, the difference between syntax and semantics, and the relative power of recursion versus iteration. As a non-numeric formal system, EBNF provides a small but concrete context in which to study all these topics.EBNF descriptions include abstraction (named rules) and the four fundamental control structures (sequence, decision, repetition, and recursion). Because there are no data or parameters in EBNF, it is easy to sidestep tricky issues surrounding variables, scope, assignment statements, and parameter modes. Describing entitles in EBNF is similar to describing computations in a programming language. Students learn to read a description and analyze whether it generates/matches candidate symbols; then they learn to synthesize descriptions from English specifications, augmented by legal and illegal exemplars of symbols.All these concepts can be covered in one lecture, establishing a high level of formality early in the course, while foreshadowing actual programming language features and techniques to be covered later. Of course, learning EBNF also facilitates presenting the syntax of a programming language concisely during the rest of the course.},
booktitle = {Proceedings of the Twenty-Fifth SIGCSE Symposium on Computer Science Education},
pages = {300–303},
numpages = {4},
location = {Phoenix, Arizona, USA},
series = {SIGCSE '94}
}

@article{10.1145/122335.122336,
author = {Thomson, Norman},
title = {Topics in teaching and using APL2},
year = {1990},
issue_date = {Sept. 1990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {1},
issn = {0163-6006},
url = {https://doi.org/10.1145/122335.122336},
doi = {10.1145/122335.122336},
abstract = {APL2 is like many subjects in programming and mathematics in that it can appear sprawling, complex, vast and difficult to grasp if a few underlying principles are not well understood. Selecting and emphasising these to the point where they become the basis of ingrained habits on the part of students is the first crucial step towards success in teaching APL2. The next is to use these principles to separate clearly the roles of a set of primitive functions, namely disclose, first, take, pick and index which have strong similarities both in their function and in the symbols used to represent them. Then comes the discipline of using these and other functions in ways that exploit the self-specification nature of APL2, which if applied properly bears the same relation to software engineering as alternative medicine does to the orthodox brand.},
journal = {SIGAPL APL Quote Quad},
month = {sep},
pages = {3–7},
numpages = {5}
}

@article{10.1145/76380.76381,
author = {Denning, Peter J.},
title = {A debate on teaching computing science},
year = {1989},
issue_date = {Dec. 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {12},
issn = {0001-0782},
url = {https://doi.org/10.1145/76380.76381},
doi = {10.1145/76380.76381},
journal = {Commun. ACM},
month = {dec},
pages = {1397–1414},
numpages = {18}
}

@article{10.1145/70593.70602,
author = {Dunworth, A. and Upatising, V.},
title = {UMAC: a simulated microprogrammable teaching aid},
year = {1989},
issue_date = {Sep. 1989},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {21},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/70593.70602},
doi = {10.1145/70593.70602},
journal = {SIGCSE Bull.},
month = {sep},
pages = {39–43},
numpages = {5}
}

@inproceedings{10.1145/5600.5630,
author = {Brumfield, Jeffrey A.},
title = {Teaching operating systems with Modula-2},
year = {1986},
isbn = {0897911784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/5600.5630},
doi = {10.1145/5600.5630},
abstract = {Programming projects in an operating systems course expose students to issues involved in the design and implementation of operating systems. The Modula-2 language provides features needed in such projects. This paper overviews the capabilities of Modula-2 and describes a programming project in which students implement a process manager for an operating system. The process manager supports concurrent processes and provides operations for their synchronization and communication.},
booktitle = {Proceedings of the Seventeenth SIGCSE Technical Symposium on Computer Science Education},
pages = {273–282},
numpages = {10},
location = {Cincinnati, Ohio, USA},
series = {SIGCSE '86}
}

@article{10.1145/988923.988925,
author = {Lovas, Charles M.},
title = {Teaching computer applications using computer cases},
year = {1979},
issue_date = {June 1979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/988923.988925},
doi = {10.1145/988923.988925},
abstract = {The case method of teaching is used to encourage continued use of computers and programming in a student's major area after the initial course(s) in computer programming. The computer case demonstrates the real-life need for the computer application, promotes independent problem-solving and computer code generation, and exposes the student to a broad spectrum of educational experiences. The flexibility of classroom operation provided to the instructor by the case method permits efficient introduction of supplementary content material and provides the instructor with the opportunity to custom classroom discussion to elicit the maximum change in student performance with a minimum of time.The teaching of extended program applications in courses using the computer, beyond the basic computer programming courses, suffers in many curricula for a number of reasons: lack of student interest, student "fear" of programming, lack of instructor training in use of the computer, inability of instructors to relate the computer application to an existing need in real-life, excess time and effort for major project programming, and others. One approach to the teaching of computer applications which can alleviate many of these difficulties is the use of computer cases.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {23–26},
numpages = {4}
}

@inproceedings{10.1145/800104.803373,
author = {Oldehoeft, R. R. and Roman, R. V.},
title = {Methodology for teaching introductory computer science},
year = {1977},
isbn = {9781450374071},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800104.803373},
doi = {10.1145/800104.803373},
abstract = {In the last few years it has been generally recognized that teaching programming involves more than describing a new FORTRAN statement each day and providing programming problems to be coded. The concepts of disciplined programming and the accompanying interest in the problem solving process, coupled with the increasing economic desirability of constructing correct and maintainable software has resulted in significant attention being focused on what should be taught, and, to a lesser extent, on how this is best accomplished.In order to discuss how an introductory programming course is taught, it is essential to first establish a set of objectives for such a course. Some of these objectives are obvious and generally agreed upon, others are engendered by the academic environment in which this particular course exists. We first state the objectives and then comment on their appropriateness and interrelation.},
booktitle = {Proceedings of the Seventh SIGCSE Technical Symposium on Computer Science Education},
pages = {123–128},
numpages = {6},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '77}
}

@inproceedings{10.1145/3328778.3372636,
author = {Davis, Kylie and Shneyer, Elana},
title = {Teaching Computational Thinking through Civics: NYC's Hack League},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372636},
doi = {10.1145/3328778.3372636},
abstract = {This poster provides an overview of the goals and objectives of the New York City Department of Education's (NYCDOE) Hack League, a district-wide competition that invites middle and high school students with any level of CS experience to explore the systemic impacts and applications of computing. By requiring participants to interact with data and prototype a proposed solution to an issue that the data illuminates, students creatively engage in a human-centered design and strategic problem-solving process aimed at improving the quality of life and civic issues in their communities. Each stage of competition represents a component of the engineering design process, thereby encouraging students to be thoughtful programmers. Through three stages of competition, students identify an issue and validate it with data, outline and prototype a solution while incorporating feedback from industry professionals and subject matter experts, and build metrics into their product. Making open data accessible to students has proven to be an effective approach to developing citizen scientists in NYC. This competition could be replicated in districts anywhere in the country and can be organized within or across schools. It is a great way to encourage student development as civic-minded individuals, engagement with their local government and elected officials, and application of computational thinking and computer science skills.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1344},
numpages = {1},
keywords = {software prototyping, data science, data analysis},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3465631.3465884,
author = {Yi, Cuijuan},
title = {On The Development Planning Of Teaching Management and Teaching Evaluation Information System in Colleges and Universities in the Environment of Massive Data},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465884},
doi = {10.1145/3465631.3465884},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {212},
numpages = {5},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/2795122.2795130,
author = {Ul-Abdin, Zain and Svensson, Bertil},
title = {Towards teaching embedded parallel computing: an analytical approach},
year = {2015},
isbn = {9781450337175},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2795122.2795130},
doi = {10.1145/2795122.2795130},
abstract = {Embedded electronic systems are finding increased applications in our daily life. In order to meet the application demands in embedded systems, parallel computing is used. This paper emphasizes teaching of the specific issues of parallel computing that are critical to embedded systems. We propose an analytical approach to deliver declarative and functioning knowledge for learning in the field of computer science and engineering with a special focus on Embedded Parallel Computing (EPC). We describe the teaching of a course with a focus on how parallel computing can be used to enhance performance and improve energy efficiency of embedded systems. The teaching methods include interactive lectures with web-based course literature, seminars, and lab exercises and home-assigned practical tasks. Further, the course is intended to give a general insight into current research and development in regard to parallel architectures and computation models. Since the course is an advanced level course, the students are expected to have a basic knowledge about the fundamentals of computer architecture and their common programming methodologies. The course puts emphasis on hands-on experience with embedded parallel computing. Therefore it includes an extensive laboratory and project part, in which a state of the art manycore embedded computing system is used. We believe that undertaking these methods in succession will prepare the students for both research as well as professional career.},
booktitle = {Proceedings of the Workshop on Computer Architecture Education},
articleno = {8},
numpages = {6},
keywords = {university course, multicore, manycore, embedded, component},
location = {Portland, Oregon},
series = {WCAE '15}
}

@article{10.1145/2381083.2381091,
author = {Armoni, Michal},
title = {Teaching CS in kindergarten: how early can the pipeline begin?},
year = {2012},
issue_date = {December 2012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {4},
issn = {2153-2184},
url = {https://doi.org/10.1145/2381083.2381091},
doi = {10.1145/2381083.2381091},
journal = {ACM Inroads},
month = {dec},
pages = {18–19},
numpages = {2}
}

@inproceedings{10.1145/3071178.3071230,
author = {Fieldsend, Jonathan E.},
title = {University staff teaching allocation: formulating and optimising a many-objective problem},
year = {2017},
isbn = {9781450349208},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3071178.3071230},
doi = {10.1145/3071178.3071230},
abstract = {The allocation of university staff to teaching exhibits a range of often competing objectives. We illustrate the use of an augmented version of NSGA-III to undertake the seven-objective optimisation of this problem, to find a trade-off front for a university department using real world data. We highlight its use in decision-making, and compare solutions identified to an actual allocation made prior to the availability of the optimisation tool. The criteria we consider include minimising the imbalance in workload distribution among staff; minimising the average load; minimising the maximum peak load; minimising the staff per module; minimising staff dissatisfaction with teaching allocations; and minimising the variation from the previous year's allocation (allocation churn). We derive mathematical forms for these various criteria, and show we can determine the maximum possible values for all criteria and the minimum values for most exactly (with lower bounds on the remaining criteria). For many of the objectives, when considered in isolation, an optimal solution may be obtained rapidly. We demonstrate the advantage of utilising such extreme solutions to drastically improve the optimisation efficiency in this many-objective optimisation problem. We also identify issues that NSGA-III can experience due to selection between generations.},
booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},
pages = {1097–1104},
numpages = {8},
keywords = {robust optimisation, resource allocation, many-objective optimisation, evolutionary optimisation},
location = {Berlin, Germany},
series = {GECCO '17}
}

@inproceedings{10.3115/1073083.1073164,
author = {Chieu, Hai Leong and Ng, Hwee Tou},
title = {Teaching a weaker classifier: named entity recognition on upper case text},
year = {2002},
publisher = {Association for Computational Linguistics},
address = {USA},
url = {https://doi.org/10.3115/1073083.1073164},
doi = {10.3115/1073083.1073164},
abstract = {This paper describes how a machine-learning named entity recognizer (NER) on upper case text can be improved by using a mixed case NER and some unlabeled text. The mixed case NER can be used to tag some unlabeled mixed case text, which are then used as additional training material for the upper case NER. We show that this approach reduces the performance gap between the mixed case NER and the upper case NER substantially, by 39% for MUC-6 and 22% for MUC-7 named entity test data. Our method is thus useful in improving the accuracy of NERs on upper case text, such as transcribed text from automatic speech recognizers where case information is missing.},
booktitle = {Proceedings of the 40th Annual Meeting on Association for Computational Linguistics},
pages = {481–488},
numpages = {8},
location = {Philadelphia, Pennsylvania},
series = {ACL '02}
}

@inproceedings{10.1145/299649.299758,
author = {Carrasquel, Jacobo},
title = {Teaching CS1 on-line: the good, the bad, and the ugly},
year = {1999},
isbn = {1581130856},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299649.299758},
doi = {10.1145/299649.299758},
abstract = {Nowadays, many universities and colleges are offering courses at distance. In this paper, I present my experiences and results with the offering of a CS1 course to students in our campus. The course was offered during the last academic year 97-98. I describe our motivation for the on-line course and my observations about student performance. Also, I compare the results of the on-line class with the traditional one.},
booktitle = {The Proceedings of the Thirtieth SIGCSE Technical Symposium on Computer Science Education},
pages = {212–216},
numpages = {5},
location = {New Orleans, Louisiana, USA},
series = {SIGCSE '99}
}

@inproceedings{10.1145/3453187.3453350,
author = {Zhi, Zou},
title = {Research on the Reform Path of the Class Teaching Informatization in Post-Epidemic Period: Based on the Analysis of Teachers' Interactive Behavior in the Online Teaching During the COVID-19 Epidemic Period in W University},
year = {2021},
isbn = {9781450389099},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453187.3453350},
doi = {10.1145/3453187.3453350},
abstract = {From the perspective of the online teaching interaction of teachers during the epidemic period in W university, the relevant data of teachers' interactive activities such as releasing courses and exercise resources, releasing check-in, discussions, announcements and questionnaires on the online teaching platform are collected in this paper. They are analyzed by the relevant statistical analysis method of spss23 to gain an objective understanding of the current situation of online teaching. Based on them, the path model of constructing information reform of class teaching is also explored to provide the reference in the post-epidemic period for the normalization of online teaching.},
booktitle = {Proceedings of the 2020 3rd International Conference on E-Business, Information Management and Computer Science},
pages = {294–299},
numpages = {6},
keywords = {reform path, post-epidemic period, interactive behavior, Online teaching},
location = {Wuhan, China},
series = {EBIMCS '20}
}

@inproceedings{10.1145/3502434.3502442,
author = {Godoy, Yrma and Arones, Maritza and Eslava, Jackeline and Guerrero, Fernando},
title = {Quality Level of the Teaching-Learning Process Based on the Application of Technological Tools: Teaching Experience in Virtual Education against COVID-19},
year = {2022},
isbn = {9781450385749},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502434.3502442},
doi = {10.1145/3502434.3502442},
abstract = {The purpose of this research was to demonstrate that the application of technological tools in the current context significantly influences the level of quality of the teaching-learning process in a Public University of the city of Ica-Peru. The research is of applied type, explanatory level and quasi-experimental design with a single group in the pre-test and post-test modality, where the influence of the independent variable on the dependent variable was established, the sample consisted of 52 university teachers. The results obtained showed that there is influence of the application of technological tools in the improvement of the quality level of the teaching-learning process since the Z test for the difference of population means showed a significant influence between the study variables with a level of significance of 5% (0.05) and a confidence level of 95% (0.95).},
booktitle = {Proceedings of the 2021 5th International Conference on Education and E-Learning},
pages = {70–75},
numpages = {6},
keywords = {quality of the teaching-learning process, educational software, educational blog, Technological tool, E-learning},
location = {Virtual Event, Japan},
series = {ICEEL '21}
}

@inproceedings{10.1145/3408877.3439550,
author = {Mike, Koby and Rosenberg-Kima, Rinat B.},
title = {Teaching Machine Learning to Computer Science Preservice Teachers: Human vs. Machine Learning},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439550},
doi = {10.1145/3408877.3439550},
abstract = {Machine learning is a fast-growing field with various applications in artificial intelligence and data science. Recently, a new machine learning program have been integrated into the Israeli high school computer science curriculum and thus we added a new machine learning module to the Methods of Teaching Computer Science (MTCS) course, which is part of the teachers' preparation program. This machine learning module provides us a unique opportunity to teach both pedagogy and content with the same subject matter. After teaching the basics of machine learning, we asked the students to find similarities between human learning theories and machine learning algorithms. Students identified several interesting parallels: (a) Supervised learning is similar to behavioral learning as the machine learns to connect training examples (stimuli) with labels (behavior). Also, the learning is based on minimizing error (punishment) function, (b) Reinforcement learning is similar to behavioral learning as learning is based on feedback from the environment, (c) Constructivism can be identified in the iterative convergence of the algorithm; the inner model improves each iteration based on the current knowledge, and (d) Social learning is reflected in clustering as each cluster affects the learning of the other clusters. In our talk, we present the idea that computational mental models may be used to reinforce pedagogical mental models and vice versa.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1368},
numpages = {1},
keywords = {teachers training, machine learning, learning theories},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3456887.3456960,
author = {Wang, Nan and Wang, Ruixun},
title = {Constructing Reverse Learning Mode in Combat Command Teaching},
year = {2021},
isbn = {9781450389969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3456887.3456960},
doi = {10.1145/3456887.3456960},
abstract = {Combat Command Teaching (CCT) is inseparable from the study of combat opponents. The innovation of Combat Command Teaching lies in the establishment of the concept of Reverse Learning of talents, so as to achieve the verification of Combat Effectiveness. By constructing a Reverse Learning Mode (RLM), trainees are able to deal with problems calmly and clearly in crisis situations. RLM is an effective means of Combat Command Teaching, which the core is to find more ways to defeat oneself. This paper constructs the Reverse Learning Mode of Combat Command Teaching from the aspects of breaking through and constructing concepts, innovating teaching methods and expanding teaching functions.},
booktitle = {2021 2nd International Conference on Computers, Information Processing and Advanced Education},
pages = {327–330},
numpages = {4},
location = {Ottawa, ON, Canada},
series = {CIPAE 2021}
}

@article{10.1145/242604.242610,
author = {Sharp, Helen and Manns, Mary Lynn and McLaughlin, Phil and Prieto, Maximo and Dodani, Mahesh},
title = {Pedagogical patterns—successes in teaching object technology: a workshop from OOPSLA '96},
year = {1996},
issue_date = {Dec. 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {12},
issn = {0362-1340},
url = {https://doi.org/10.1145/242604.242610},
doi = {10.1145/242604.242610},
journal = {SIGPLAN Not.},
month = {dec},
pages = {18–21},
numpages = {4}
}

@article{10.1145/986948.986950,
author = {Holt, Richard C.},
title = {Teaching the fatal disease: (or) introductory computer programming using PL/I},
year = {1973},
issue_date = {May 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {5},
issn = {0362-1340},
url = {https://doi.org/10.1145/986948.986950},
doi = {10.1145/986948.986950},
abstract = {This paper discusses the problems and advantages of using PL/I as an introductory programming language. The abhorrence of the author for certain qualities of PL/I is divulged. The economico-academico-IBMical inevitability of this programming language is touched upon. Finally, and of some possible worth, certain tenents of self discipline which are required when using this language for teaching (or anything else) are explored.},
journal = {SIGPLAN Not.},
month = {may},
pages = {8–23},
numpages = {16}
}

@inproceedings{10.1145/3465631.3465988,
author = {Zhang, Li},
title = {Teacher-student Collaborative Assessment (TSCA) in English Writing Teaching},
year = {2021},
isbn = {9781450385015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465631.3465988},
doi = {10.1145/3465631.3465988},
abstract = {NOTICE OF RETRACTION: While investigating potential publication-related misconduct in connection with the ICIMTech 2021 Conference Proceedings, serious concerns were raised that cast doubt on the integrity of the peer-review process and all papers published in the Proceedings of this Conference. The integrity of the entire Conference has been called into question. As a result, of its investigation, ACM has decided to retract the Entire Conference Proceedings and all related papers from the ACM Digital Library.None of the papers from this Proceeding should be cited in the literature because of the questionable integrity of the peer review process for this Conference.},
booktitle = {Retracted on September 15, 2021The Sixth International Conference on Information Management and Technology},
articleno = {315},
numpages = {6},
location = {Jakarta, Indonesia},
series = {ICIMTECH 21}
}

@inproceedings{10.1145/3105726.3105736,
author = {Lodi, Michael},
title = {Growth Mindset in Computational Thinking Teaching and Teacher Training},
year = {2017},
isbn = {9781450349680},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3105726.3105736},
doi = {10.1145/3105726.3105736},
abstract = {Teacher training in computational thinking is becoming more and more important, as many countries are introducing it at all K-12 school levels. Introductory programming courses are known to be difficult and some studies suggest they foster a fixed-mindset views of intelligence, reinforcing the idea that only some people have the so called "geek gene". This is particularly dangerous if thought by future school teachers. Interventions to stimulate "CS growth mindset" in students and their teachers are fundamental and worth CS education research.},
booktitle = {Proceedings of the 2017 ACM Conference on International Computing Education Research},
pages = {281–282},
numpages = {2},
keywords = {teacher training, growth mindset, computational thinking},
location = {Tacoma, Washington, USA},
series = {ICER '17}
}

@inproceedings{10.1145/2325296.2325410,
author = {Bunimovich, Lavy},
title = {Teachers' perception of teaching problem-solving strategies to novices},
year = {2012},
isbn = {9781450312462},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2325296.2325410},
doi = {10.1145/2325296.2325410},
abstract = {This poster presents a pilot study whose aim is to determine whether and how CS1 high school teachers provide algorithmic problem-solving skills: which aspects are expressed in teaching problem-solving, which strategies are used, and what are the difficulties in teaching problem-solving.},
booktitle = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
pages = {393},
numpages = {1},
keywords = {problem-solving strategies, k-12},
location = {Haifa, Israel},
series = {ITiCSE '12}
}

@inproceedings{10.1145/323410.323427,
author = {Detmer, Richard C.},
title = {Teaching assembly language: a comparison of IBM S/360 and Intel 80x86 courses},
year = {1990},
isbn = {0897913469},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/323410.323427},
doi = {10.1145/323410.323427},
booktitle = {Proceedings of the Twenty-First SIGCSE Technical Symposium on Computer Science Education},
pages = {116–120},
numpages = {5},
location = {Washington, D.C., USA},
series = {SIGCSE '90}
}

@inproceedings{10.1145/3568739.3568809,
author = {Yanuschik, Olga Vladimirovna and Ustinova, Irina Georgievna and Imas, Olga Nikolaevna and Beliauskene, Evgeniia Alekcandrovna and Rozhkova, Svetlana Vladimirovna},
title = {Transformer STACK Questions for Teaching Mathematics},
year = {2023},
isbn = {9781450398091},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568739.3568809},
doi = {10.1145/3568739.3568809},
abstract = {Modern school and university education is impossible to imagine without the use of electronic educational resources. The development of e-learning has become especially relevant due to the spread of COVID-19 and the periodic introduction of distance learning. The higher school has been practicing a blended form of education for a long time. In universities, e-learning is associated with the introduction of their own e-course systems and the use of mass open online courses in the educational process. But a significant drawback of mass open online courses (MOOCs) lies precisely in their mass character, aimed at the average consumer of educational services. The division into categories "for beginners" and "for advanced" is the maximum differentiation that mass open online courses can offer. As for traditional e-courses, in recent years there has been a tendency to develop adaptive educational systems, STACK-type tasks on the MOODLE platform, allowing to personalize the learning process, but this requires significant time and labor costs. We want to show on several examples of STACK-type tasks how it is possible using one STACK question, modifying it to get several tasks that differ in content. This transformation of tasks allows you to fill the task pool faster, which is an important aspect when filling it (using it). The purpose of the study is methodological substantiation, development and implementation of transformer tasks in mathematics in the educational process, which provide variability in the presentation of educational content.},
booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
pages = {415–420},
numpages = {6},
keywords = {The transformer question, STACK type task, Mathematics, Education, E-learning},
location = {<conf-loc>, <city>Hangzhou</city>, <country>China</country>, </conf-loc>},
series = {ICDTE '22}
}

@inproceedings{10.1145/3546118.3546126,
author = {Aliev, Yuksel and Ivanova, Galina and Borodzhieva, Adriana},
title = {Virtual Laboratory for Teaching Coding Theory},
year = {2022},
isbn = {9781450396448},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3546118.3546126},
doi = {10.1145/3546118.3546126},
abstract = {The paper presents a virtual laboratory based on web-based interactive tools for teaching and studying coding theory, including Hamming codes and cyclic codes, developed at the University of Ruse. The purpose of the virtual laboratory is to help students to learn the complex processes of encoding and decoding using Hamming codes and binary cyclic codes. An important component of the virtual lab is the interactive algorithm (block diagram), which follows the process step by step and notifies in case of wrong actions. Statistical information is collected for each solved task, which is used to assess the work and the progress of the student. The virtual laboratory is used in the discipline “Reliability and Diagnostics of Computer Systems”, which is studied by students in the department “Computer Systems Technology” at the University of Ruse “Angel Kanchev”.},
booktitle = {Proceedings of the 23rd International Conference on Computer Systems and Technologies},
pages = {142–148},
numpages = {7},
location = {University of Ruse, Ruse, Bulgaria},
series = {CompSysTech '22}
}

@inproceedings{10.1145/3328778.3366914,
author = {El-Glaly, Yasmine N.},
title = {Teaching Accessibility to Software Engineering Students},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366914},
doi = {10.1145/3328778.3366914},
abstract = {This paper describes the development process of a graduate course on accessibility that is offered as an elective for software engineering students. The paper reports on the three iterations of the course evolution as topics and pedagogy are updated from one iteration to the next. The main motivation of the course updates was to cover the educational needs of software engineering students, which are not the same as HCI or design students. Software engineering students learned better and became more engaged with the topic of accessibility when it was tied to programming and development- based activities. The final form of the course was evaluated using a survey, and the results showed that students found the course beneficial to their education and relevant to their career. We discuss the challenges of creating, teaching, and maintaining a course on accessibility, and we offer insights on what research is needed in this area to support accessibility educators.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {121–127},
numpages = {7},
keywords = {software engineering, open source, design, assistive technology, accessibility},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3132525.3134808,
author = {Palan, Nidhi Rajendra and Hanson, Vicki L. and Huenerfauth, Matt and Ludi, Stephanie},
title = {Teaching Inclusive Thinking in Undergraduate Computing},
year = {2017},
isbn = {9781450349260},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3132525.3134808},
doi = {10.1145/3132525.3134808},
abstract = {With the increasing importance of accessibility awareness and knowledge as both a moral imperative and an employment differentiator, it is incumbent on educational programs to have demonstrated ability to teach these skills. We report on our year-long evaluation of university students' accessibility awareness and knowledge following a week of accessibility lectures as part of courses on Human-Computer Interaction (HCI). We report gains in awareness and knowledge when accessibility lectures were part of the course. We describe the test battery developed to measure these skills, and describe our ongoing longitudinal research to measure the effectiveness of several interventions for teaching inclusive thinking in undergraduate computing courses.},
booktitle = {Proceedings of the 19th International ACM SIGACCESS Conference on Computers and Accessibility},
pages = {399–400},
numpages = {2},
keywords = {ethics, computer science education, accessibility},
location = {Baltimore, Maryland, USA},
series = {ASSETS '17}
}

@inproceedings{10.1145/3123818.3123820,
author = {Granollers, T. and Sendin, M. and Garc\'{\i}a, R. and Oliva, M. and Gil, R. and Gimeno, J. M. and Garrido, J. E.},
title = {25 years teaching HCI in UdL},
year = {2017},
isbn = {9781450352291},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3123818.3123820},
doi = {10.1145/3123818.3123820},
abstract = {This work shows the evolution of teaching HCI in the university studies of computer engineering at the University of Lleida. The progress is described in terms of the content and the teaching methodologies based on the experience acquired during the last 25 years. The article details the changes made in the different degrees, from the methodology to the content perspective. The intent is to provide a reference document that can be useful for the teaching community interested in the Human-Computer Interaction discipline.},
booktitle = {Proceedings of the XVIII International Conference on Human Computer Interaction},
articleno = {21},
numpages = {2},
keywords = {teaching modalities, teaching methodology, teaching HCI},
location = {Cancun, Mexico},
series = {Interacci\'{o}n '17}
}

@inproceedings{10.1145/2808006.2808030,
author = {AlZoubi, Omar and Fossati, Davide and Di Eugenio, Barbara and Green, Nick and Alizadeh, Mehrdad and Harsley, Rachel},
title = {A Hybrid Model for Teaching Recursion},
year = {2015},
isbn = {9781450338356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2808006.2808030},
doi = {10.1145/2808006.2808030},
abstract = {Novice programmers struggle to understand the concept of recursion, partly because of unfamiliarity with recursive activities, difficulty with visualizing program execution, and difficulty understanding its back flow of control. In this paper we discuss the conceptual and program visualization approaches to teaching recursion. We also introduce our approach to teaching recursion in the ChiQat-Tutor system that relies on ideas from both approaches. ChiQat-Tutor will help Computer Science students learn recursion, develop accurate mental models of recursion, and serve as an effective visualization tool with which hidden contexts of recursion can become evident.},
booktitle = {Proceedings of the 16th Annual Conference on Information Technology Education},
pages = {65–70},
numpages = {6},
keywords = {recursion, mental models, intelligent tutoring systems},
location = {Chicago, Illinois, USA},
series = {SIGITE '15}
}

@inproceedings{10.1145/2676723.2677254,
author = {Palicherla, Abhinand and Zhang, Tao and Porter, Donald E.},
title = {Teaching Virtualization by Building a Hypervisor},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2677254},
doi = {10.1145/2676723.2677254},
abstract = {Virtual machines (VMs) are an increasingly ubiquitous feature of modern computing, yet the interested student or professional has limited resources to learn how VMs work. In particular, there is a lack of "hands-on" exercises in constructing a virtual machine monitor (VMM, or hypervisor), which are both simple enough to understand completely but realistic enough to capture the practical challenges in using this technology. This paper describes a set of assignments to extend a small, pedagogical operating system (OS) to form a hypervisor and host itself. This pedagogical hypervisor, called HOSS, adds roughly 1,000 lines of code to the MIT JOS source, and includes a set of guided exercises. Initial results with HOSS in an upper-level virtualization course indicate that students enjoyed the assignments and were able to apply what they learned to solve different virtualization-related problems. HOSS is publicly available.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {424–429},
numpages = {6},
keywords = {virtual machines, operating systems, instructional tools},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2647908.2655961,
author = {Seidl, Christoph and Domachowska, Irena},
title = {Teaching variability engineering to cognitive psychologists},
year = {2014},
isbn = {9781450327398},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2647908.2655961},
doi = {10.1145/2647908.2655961},
abstract = {In research of cognitive psychology, experiments to measure cognitive processes may be run in many similar yet slightly different configurations. Variability engineering offers techniques to handle variable configurations both conceptually and technically. However, these techniques are largely unknown to cognitive psychologists so that experiment configurations are specified informally or too coarse grain. This is problematic, because it becomes difficult to get an overview of paradigm configurations used in the so far conducted experiments. Variability engineering techniques provide, i.a., concise notations for capturing variability in software and can also be used to express the configurable nature of a wide range of experiments in cognitive psychology. Furthermore, it enables cognitive psychologists to structure configuration knowledge, to identify suitably similar experiment setups and to more efficiently identify individual configuration options as relevant reasons for a particular effect in the outcome of an experiment. In this paper, we present experiences with teaching variability engineering to cognitive psychologists along with a suitable curriculum.},
booktitle = {Proceedings of the 18th International Software Product Line Conference: Companion Volume for Workshops, Demonstrations and Tools - Volume 2},
pages = {16–23},
numpages = {8},
keywords = {variability engineering, teaching, feature model, cognitive psychology},
location = {Florence, Italy},
series = {SPLC '14}
}

@article{10.1145/2655759.2655767,
author = {Walker, Henry M.},
title = {Some strategies when teaching theory courses},
year = {2014},
issue_date = {September 2014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {3},
issn = {2153-2184},
url = {https://doi.org/10.1145/2655759.2655767},
doi = {10.1145/2655759.2655767},
journal = {ACM Inroads},
month = {sep},
pages = {32–34},
numpages = {3}
}

@inproceedings{10.1145/2591708.2602674,
author = {Sabitzer, Barbara and Pasterk, Stefan},
title = {Brain-based teaching in programming courses},
year = {2014},
isbn = {9781450328333},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2591708.2602674},
doi = {10.1145/2591708.2602674},
abstract = {Brain-based teaching is neither a method nor a concept. It is rather a way of teaching that tries to support the whole learning and memory process by considering how the brain works. The concept of "Brain-based Programming" is one attempt of putting neurodidactical principles into practice in order to improve the learning out-comes in introductory programming courses. In the pilot project this aim could be achieved [1] and the results of the ongoing study in three of seven parallel groups confirm the success in part.},
booktitle = {Proceedings of the 2014 Conference on Innovation &amp; Technology in Computer Science Education},
pages = {355},
numpages = {1},
keywords = {neurodidactics, computer science education, brain-based learning},
location = {Uppsala, Sweden},
series = {ITiCSE '14}
}

@inproceedings{10.1145/1953163.1953223,
author = {Ortiz, Ariel},
title = {Teaching concurrency-oriented programming with Erlang},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953223},
doi = {10.1145/1953163.1953223},
abstract = {Teaching how to write correct programs is hard; teaching how to write correct concurrent programs is even harder. There is a desperate need for a better concurrency programming model than what most people are currently using. The Erlang programming language might be a step in that direction. This paper provides an overview of Erlang and how it has been successfully used to teach concurrency-oriented programming (COP) in a sophomore level course at the Tecnol\'{o}gico de Monterrey, Campus Estado de M\'{e}xico.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {195–200},
numpages = {6},
keywords = {programming, parallel, multi-core, languages, functional, distributed, concurrency, Erlang},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/1940941.1940952,
author = {Jovanovic, V. and Mirzoev, T.},
title = {Teaching storage infrastructure management and security},
year = {2010},
isbn = {9781450302029},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1940941.1940952},
doi = {10.1145/1940941.1940952},
abstract = {The manuscript presents the design outline for two storage technology courses related to information assurance. There is a discussion of some experiences from delivering the undergraduate version of the course to the students of the IT and the CS programs. The undergraduate version is modeled after the EMC Information Storage Management course and the EMC's Proven Professional certification, to provide a baseline knowledge about storage networks and their applications, while graduate course extension goes in more depth regarding security and management of storage networks in a broader context of IT governance.},
booktitle = {2010 Information Security Curriculum Development Conference},
pages = {41–44},
numpages = {4},
keywords = {storage security, storage networks, IT governance},
location = {Kennesaw, Georgia},
series = {InfoSecCD '10}
}

@inproceedings{10.1145/3255430,
author = {Albers, M.},
title = {Session details: Teaching and learning DOC},
year = {2007},
isbn = {9781595935885},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255430},
doi = {10.1145/3255430},
booktitle = {Proceedings of the 25th Annual ACM International Conference on Design of Communication},
location = {El Paso, Texas, USA},
series = {SIGDOC '07}
}

@inproceedings{10.1145/1330598.1330682,
author = {Jones, Karl O. and Reid, Juliet M. V.},
title = {Modifying teaching to address thinking styles},
year = {2007},
isbn = {9789549641509},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1330598.1330682},
doi = {10.1145/1330598.1330682},
abstract = {The work presented evaluates the efficacy of lecturing incorporating a balance of Thinking Styles. The aim of the work is to enable academic staff to formally evaluate their practice and to promote a flexible approach to learning formulated on pedagogic research. Furthermore, the work endeavours to contribute more widely to the commitment within Higher Education Institutions of promoting diversity by attempting to address and expand the Thinking Styles of students.},
booktitle = {Proceedings of the 2007 International Conference on Computer Systems and Technologies},
articleno = {79},
numpages = {5},
keywords = {thinking styles, teaching, learning, assessment},
location = {Bulgaria},
series = {CompSysTech '07}
}

@inproceedings{10.1145/1231047.1231060,
author = {Guimaraes, Mario},
title = {New challenges in teaching database security},
year = {2006},
isbn = {1595934375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1231047.1231060},
doi = {10.1145/1231047.1231060},
abstract = {Traditional Database Security has focused primarily on creating user accounts and managing user privileges to database objects. The wide spread use of databases over the web, heterogeneous client-server architectures, application servers, and networks creates an urgent need to widen this focus. This paper will provide an overview of the new and old database security challenges.Section one provides an overview of the Database Security concerns. It emphasizes Database Applications as the greatest concern and describes the SQL Slammer Worm, an example of not patching the Database Management System (DBMS)The second section explains in detail three Database topics: SQL injection [1], Multilevel Security [2] and Data Warehouse/Data Mining/Statistical security. The reason for focusing on these topics is because they are new Database Security issues (at least not taught in traditional database courses) and they are not topics that student will learn in any other course.The last topic provides guidelines for when to teach each Database Security topic and concludes by emphasizing the need for developing a Database Security Plan. Emphasis on a Database Security Plan resulted from interviewing Database Administrators and Security Specialists.},
booktitle = {Proceedings of the 3rd Annual Conference on Information Security Curriculum Development},
pages = {64–67},
numpages = {4},
keywords = {data warehouse, data mining, SQL injection, MLS, DBMS, DBA},
location = {Kennesaw, Georgia},
series = {InfoSecCD '06}
}

@inproceedings{10.1145/1095714.1095771,
author = {Wulf, Tom},
title = {Constructivist approaches for teaching computer programming},
year = {2005},
isbn = {1595932526},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1095714.1095771},
doi = {10.1145/1095714.1095771},
abstract = {This paper discusses the application of constructivist pedagogical approaches to teaching computer programming in high school and undergraduate courses. It provides an overview of constructivist pedagogy and contrasts it with traditional objectivist pedagogy. The paper then describes how a variety of sources on constructivist educational practice from computer science educational literature can be combined to transform under-graduate courses in computer programming and information technology. The resulting courses are accessible to a wider range of students and incorporate active learning, collaborative group-based instruction, and cognitive apprenticeships. This pedagogical style focuses on the higher cognitive levels of Bloom's taxonomy and addresses multiple student learning styles and intelligences. Course design, classroom activities, and assessment methods using this pedagogical approach for computer programming instruction will be covered in detail. The presentation relies heavily on the experiences of the presenter in adopting this style of instruction within undergraduate computer programming courses and will include a discussion of the some of the attitudinal issues they encountered in this process. The presentation will include coverage of resources for constructivist teaching of computer science and technology and some recommendations for instructors who may wish to adopt this style of instruction.},
booktitle = {Proceedings of the 6th Conference on Information Technology Education},
pages = {245–248},
numpages = {4},
keywords = {programming instruction, constructivist pedagogy, cognitive apprenticeships, active learning},
location = {Newark, NJ, USA},
series = {SIGITE '05}
}

@inproceedings{10.1145/1062455.1062583,
author = {Hazzan, Orit and Tomayko, Jim},
title = {Teaching human aspects of software engineering},
year = {2005},
isbn = {1581139632},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1062455.1062583},
doi = {10.1145/1062455.1062583},
abstract = {This paper highlights the teaching of human aspects of software engineering, by presenting a course that deals with this topic. Specifically, this paper outlines the course's objective and structure, and, as the CfP asks, suggests two challenges an instructor of software engineering faces today.},
booktitle = {Proceedings of the 27th International Conference on Software Engineering},
pages = {647–648},
numpages = {2},
keywords = {software engineering, human aspects},
location = {St. Louis, MO, USA},
series = {ICSE '05}
}

@inproceedings{10.1145/1047344.1047455,
author = {Gehringer, Edward F. and Chinn, Donald D. and P\'{e}rez-Qui\~{n}ones, Manuel A. and Ardis, Mark A.},
title = {Using peer review in teaching computing},
year = {2005},
isbn = {1581139977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1047344.1047455},
doi = {10.1145/1047344.1047455},
abstract = {For generations, the academic community has relied on peer review as a way of encouraging scholarship and enhancing the knowledge base. Peer review has been widely used in the classroom since at least the 1970s, with hundreds of papers on its use in diverse academic fields appearing in the literature (for a comprehensive survey, see [1]). Its use appears to be on the upswing, given the current interest in active learning and teamwork. In computer science, peer review seems to have very broad application. It can be used to evaluate the contributions of various members to a project team; it can be used for design documents and code reviews, in writing assignments, and in capstone project courses. The experience of the panelists is illustrative of the wide range of peer-review practices. This panel will serve to introduce the audience to some of these applications. Since many computer-science instructors have experimented with peer review, we are anxious to have them share their experiences during the open discussion period.},
booktitle = {Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education},
pages = {321–322},
numpages = {2},
keywords = {peer review, collaborative learning, assessment, UML},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '05}
}

@inproceedings{10.1145/1026776.1026782,
author = {Friedland, Gerald and Knipping, Lars and Rojas, Ra\'{u}l and Tapia, Ernesto},
title = {Teaching with an intelligent electronic chalkboard},
year = {2004},
isbn = {1581139330},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1026776.1026782},
doi = {10.1145/1026776.1026782},
abstract = {This paper presents E-Chalk, a software system which transforms a large touch sensitive screen into a smart teaching tool. The instructor writes on the screen using a special stylus and the software emulates a classical chalkboard. The lecturer can paste images to the board, can send queries to remote web services, can activate a computer algebra system, and can paste interactive Java Applets on the board. A copy of the lecture's audio, the board strokes (and an optional video) is stored on a server. The lecture is also transmitted live over the Internet and can be synchronized with teleconferencing systems for student feedback. The E-Chalk architecture is based on the metaphor of the classical chalkboard, enhanced by intelligent assistants running in the background. One assistant takes care of interpreting the handwritten input of the user. Another is a mathematical formula recognizer which processes handwritten queries for the algebraic server. A circuit simulator recognizes sketches of digital circuits and runs a simulation. An algorithm simulator accepts sketches of graphs as input data and runs graph algorithms, animating them on the screen. Further assistants can be incorporated using the E-Chalk API. E-Chalk is being used in our electronic classroom containing a 6 meter long by 1.15 meter wide rear projection "data wall".},
booktitle = {Proceedings of the 2004 ACM SIGMM Workshop on Effective Telepresence},
pages = {16–23},
numpages = {8},
keywords = {telepresence, presentation, multimedia educational system, intelligent agents, handwriting recognition, distance learning, digital ink},
location = {New York, NY, USA},
series = {ETP '04}
}

@article{10.1145/960492.960504,
author = {Lister, Raymond},
title = {The five orders of teaching ignorance},
year = {2003},
issue_date = {December 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {35},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/960492.960504},
doi = {10.1145/960492.960504},
journal = {SIGCSE Bull.},
month = {dec},
pages = {16–17},
numpages = {2}
}

@inproceedings{10.1145/949344.949393,
author = {Bergin, Joseph},
title = {Teaching polymorphism with elementary design patterns},
year = {2003},
isbn = {1581137516},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/949344.949393},
doi = {10.1145/949344.949393},
abstract = {Polymorphism is often treated as an advanced topic by educators. Many feel that if statements are in some sense more "fundamental" to computing. On the contrary, polymorphism is both fundamental to object programming and is an elementary topic that can be easily understood by students. Previous papers [1] have shown how role-play exercises can remind students that they already have a deep understanding of dynamic polymorphism. The question then becomes how do we find effective teaching techniques to present this topic when we move from the level of metaphor to that of programming. A few elementary patterns [2] can be used to teach this topic even before the student is introduced to ad-hoc selection with if statements. Teaching these patterns early has the added benefit that they are pervasive in the Java libraries, so understanding them eases the student's later work.},
booktitle = {Companion of the 18th Annual ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications},
pages = {167–169},
numpages = {3},
keywords = {teaching, design patterns},
location = {Anaheim, CA, USA},
series = {OOPSLA '03}
}

@inproceedings{10.1145/947469.947523,
author = {Murphy, Trevor and Hirai, Mika},
title = {Teaching with technology, setting an example},
year = {2003},
isbn = {158113665X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/947469.947523},
doi = {10.1145/947469.947523},
abstract = {Providing instructional technology support for faculty requires a range of skills, from knowledge of software and hardware, to an ability to communicate, teach workshops, and relate to faculty. Teaching experience is advantageous for the instructional technology specialist in that it can be used to extend discussions of technology to the meaningful use of the technology in the classroom. For these discussions to have authenticity, the technology specialist needs to have classroom teaching experience using software in a technology-equipped classroom. Unfortunately, for the instructional technology specialist, this experience is usually limited to brief workshops, and increasingly, one on one instruction with faculty.Two Instructional Technology Specialists from Williams College team-taught a four-week long Williams College Winter Study course for college students called "Teaching with Technology." The course focused on creating learning modules using Macromedia Flash and Dreamweaver, Apple iMovie, and Adobe Photoshop. The course also covered copyright, pedagogy, and accessibility, and made use of a course management system. The shift in perspective for the instructors from supporting the use of technology in the classroom to actively teaching with technology helped the instructors realize the pedagogical potential of electronic classroom tools. In addition, the students demonstrated thoughtful use of the software for teaching, and a regard for copyright and accessibility. Together the students and instructors explored a range of topics relating to the use of technology in the classroom.In their roles as Instructional Technology Specialists, the instructors advise faculty on the use of technology in the classroom. By teaching the course, the instructors applied and tested their own advice and set an example of how technology can be integrated into a curriculum. This paper covers some of the insights that the authors gained from teaching the course.},
booktitle = {Proceedings of the 31st  Annual ACM SIGUCCS Fall Conference},
pages = {208–212},
numpages = {5},
keywords = {web portfolio, video, technology, pedagogy, multimedia, learning modules, electronic portfolios, education, audio, animation},
location = {San Antonio, TX, USA},
series = {SIGUCCS '03}
}

@article{10.1145/782941.782993,
author = {Burton, Philip J. and Bruhn, Russel E.},
title = {Teaching programming in the OOP era},
year = {2003},
issue_date = {June 2003},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {35},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/782941.782993},
doi = {10.1145/782941.782993},
abstract = {This paper argues in favor of teaching a course in Procedural Programming first before a course in Object Oriented Programming. The basis of the argument is that considered as a paradigm, Object Oriented Programming comes in addition to the Procedural Programming paradigm and not as a replacement for it. In addition, we discuss the mathematics prerequisites required for programming and argue that Information Science departments should insist that students receive a firm foundation in traditional mathematical skills and that the use of instructional technology should reinforce these skills and not detract from them.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {111–114},
numpages = {4}
}

@inproceedings{10.1145/611892.612012,
author = {Lowther, John and Shene, Ching-Kuang},
title = {Teaching B-splines is not difficult!},
year = {2003},
isbn = {158113648X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/611892.612012},
doi = {10.1145/611892.612012},
abstract = {This paper describes the authors' approach of introducing important concepts and algorithms of B-splines to junior computer science students with the help of a pedagogical tool DesignMentor. This approach is non-mathematical and intuitive, and has been used and refined in the past six years.},
booktitle = {Proceedings of the 34th SIGCSE Technical Symposium on Computer Science Education},
pages = {381–385},
numpages = {5},
keywords = {knot insertion, de Boor's algorithm, curves, B-splines},
location = {Reno, Navada, USA},
series = {SIGCSE '03}
}

@inproceedings{10.1145/1242073.1242078,
author = {Eber, Dena Elisabeth and Mitchell, Bonnie and Elliott, Heather},
title = {Teaching gems for art and design},
year = {2002},
isbn = {1581135254},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1242073.1242078},
doi = {10.1145/1242073.1242078},
abstract = {Despite the artistic maturity computer graphics has gained throughout the 1990s and into the new millennium, what we call the art student "wow" factor in computer graphics---the phenomenon of student obsession over new technology instead of artistic substance---is still a point of contention. It remains a challenge to teach computer graphics to art students while maintaining a balance between thoughtful art and sophisticated technology. In this session we will, with the help of the participants, reveal pedagogical solutions and uncover various approaches to teaching art students to use digital media in rich and expressive ways.When the curve of new computer graphics technology was steeper and interfaces were not as intuitive as they now are, much of student learning was centered on the hardware and software and students struggled to comprehend digital media's place in the art world. In essence, we were in what Marshall McLuhan referred to as the first phase of a new technology---a stage in which, in the context of teaching digital media in the arts, the students were trying to understand computer graphics technology in terms of what they already knew. A digital image became a painting or a photograph, and 3D modeling and animation were understood in terms of film studies. Further, many students did not understand the scope of digital art and how it encompassed sculptural digital installations, how the art did not have to result in physical objects, or how the pieces could exist as interactive programs or websites. Students also worried more about the technology---what it could do and how to use it---rather than understanding the unique ways in which they could create aesthetically pleasing and profound works of art.Today, computer graphics-based art is now closer to being established in the art world and embraces a more intuitive and sensible mode in which to create. However, the "wow" factor is still a problem and the changing pace of technology still keeps students and teachers alike tuned into the tool. Students are still trying to understand what the technology can do and often forget why or what they are making. Art instructors have a genuine struggle with balancing the time to teach students how to do something digitally with teaching them how to express themselves visually. Further, some software programs are truly complex and the concepts behind them require the student to understand, at least intuitively, the laws of physics, lighting, and how things change over time. Perhaps in some ways we are still in the first phase of digital technology in the arts.From uncomplicated to elaborate software, how can instructors approach lessons without being bogged down with too much technology? Should instructors teach software or should they teach concepts, thus emphasizing the importance of technology as a means to an end rather than the end? What are some examples of lessons, assignments, or overall approaches that give proper weight to art and technology? How can teachers facilitate unique and expressive works of art?Even if instructors are successful teaching individual expression with computer graphics technology, what domain within this vast field is most important? What are some areas on which teachers could focus their energies? Are some computer graphics disciplines harder to teach than others? Is it more difficult to express ideas and compose formally beautiful works in some forms of digital graphics? Why or why not?The best lessons and the best pedagogical approaches still will not hinder the dedicated special effects gurus from obsessing about what the software can do instead of the resulting work. How can instructors help these students care more about the art works?Finally, and maybe most importantly, how can teachers keep up with the technology? Perhaps it is the teacher's concern with keeping current that influences the way they teach and what the students perceive as important. What are some solutions for instructors to keep up with changing computer graphics technology without compromising the core of the art they want to teach?We ask the participants to come prepared to talk about some of these ideas and more. Once we target issues to resolve, we will ask the forum participants to put forward their gems: lessons, approaches, philosophical bends, and ideas that have worked or they believe will work. Attendees will leave the session with a notebook full of ideas and solutions to teaching students how to be expressive and create aesthetically pleasing works of computer graphics based art.},
booktitle = {ACM SIGGRAPH 2002 Conference Abstracts and Applications},
pages = {18},
numpages = {1},
location = {San Antonio, Texas},
series = {SIGGRAPH '02}
}

@article{10.1145/505248.505261,
author = {Guzdial, Mark and Soloway, Elliot},
title = {Teaching the Nintendo generation to program},
year = {2002},
issue_date = {April 2002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {4},
issn = {0001-0782},
url = {https://doi.org/10.1145/505248.505261},
doi = {10.1145/505248.505261},
abstract = {Preparing a new strategy for teaching introductory computer programming.},
journal = {Commun. ACM},
month = {apr},
pages = {17–21},
numpages = {5}
}

@article{10.5555/775339.775378,
author = {Sexton, Joanne},
title = {Initial classroom experience teaching visual basic},
year = {2001},
issue_date = {December 2001},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {17},
number = {2},
issn = {1937-4771},
abstract = {This paper describes an effort to tailor a Visual Basic introductory programming course for non-majors and identifies a lab intensive course as one means to ease the problem of vastly different levels of programming skill and computer experience in an introductory computer science course.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {224–234},
numpages = {11}
}

@inproceedings{10.5555/510378.510623,
author = {Desel, J\"{o}rg},
title = {Teaching system modeling, simulation and validation},
year = {2000},
isbn = {0780365828},
publisher = {Society for Computer Simulation International},
address = {San Diego, CA, USA},
abstract = {Simulation is used in the design process of dynamic systems. The results of simulation are employed for validating a model, and they are helpful for the improvement of the design of a system with respect to both, qualitative and quantitative properties. The paper concentrates on these aspects and applications of simulation in education, advocates its presence in student curricula, presents building blocks of education modules for simulation and validation with respect to both content and method, discusses requirements for simulation and validation education, and finally suggests the integration of simulation teachware in virtual classrooms and distance learning environments. Modeling and simulation is almost necessarily based on modeling languages with precise semantics. In education as well as in practice, suitable computer tools should be employed. We suggest Petri nets with sequential semantics and partial order semantics as a modeling language. The contribution is based on experiences from several university courses on system modeling and simulation with Petri nets, including practical training. Moreover, relevant concepts from recent distance learning projects are mentioned.},
booktitle = {Proceedings of the 32nd Conference on Winter Simulation},
pages = {1669–1675},
numpages = {7},
location = {Orlando, Florida},
series = {WSC '00}
}

@inproceedings{10.1145/343048.343072,
author = {Dick, Martin and Postema, Margot and Miller, Jan},
title = {Teaching tools for software engineering education},
year = {2000},
isbn = {1581132077},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/343048.343072},
doi = {10.1145/343048.343072},
abstract = {This paper examines a set of teaching tools in the Software Engineering Practice course at Monash University. Analyzing various aspects of the course and student survey response to their value provides evaluation of the overall success of the tools. The paper demonstrates that a successful teaching program needs to combine a range of teaching tools to achieve its aims.},
booktitle = {Proceedings of the 5th Annual SIGCSE/SIGCUE ITiCSEconference on Innovation and Technology in Computer Science Education},
pages = {49–52},
numpages = {4},
location = {Helsinki, Finland},
series = {ITiCSE '00}
}

@inproceedings{10.1145/299649.299685,
author = {Oh, Jae C. and Moss\'{e}, Daniel},
title = {Teaching real time OSs with DORITOS},
year = {1999},
isbn = {1581130856},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/299649.299685},
doi = {10.1145/299649.299685},
abstract = {We are developing a teaching package that can be used in a college course that would fill a gap among current science majors and teach senior-level undergraduate students theory and practice of real-time operating systems, including their requirements, characteristics, internals, and specification. This course has two components: (1) a theoretical part, and (2) a practical hands-on implementation component achieved with DORITOS (Distributed Object-Based Real-time InsTructional Operating System) as the implementation environment. DORITOS' design is based on UC-Berkeley's NACHOS. The DORITOS package will be distributed with DKaffe (a modified version of Kaffe JVM) and a basic system which allows students to run simple threads.In this paper, we focus on the practical, hands-on system that allows students to learn the internals of a Real-time Operating Systems (RTOS). Throughout the term, assignments require students to use and modify DORITOS to implement real-time elements as well as to analyze the performance of implemented algorithms.},
booktitle = {The Proceedings of the Thirtieth SIGCSE Technical Symposium on Computer Science Education},
pages = {68–72},
numpages = {5},
location = {New Orleans, Louisiana, USA},
series = {SIGCSE '99}
}

@article{10.1145/240819.240825,
author = {Abran, Alain},
title = {Teaching software engineering using ISO standards},
year = {1996},
issue_date = {Sept. 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {3},
issn = {1067-9936},
url = {https://doi.org/10.1145/240819.240825},
doi = {10.1145/240819.240825},
journal = {StandardView},
month = {sep},
pages = {139–145},
numpages = {7}
}

@inproceedings{10.1145/199688.199891,
author = {Grissom, Scott and Kubitz, Bill and Bresenham, Jack and Owen, G. Scott and Schweitzer, Dino},
title = {Approaches to teaching computer graphics (abstract)},
year = {1995},
isbn = {089791693X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/199688.199891},
doi = {10.1145/199688.199891},
booktitle = {Proceedings of the Twenty-Sixth SIGCSE Technical Symposium on Computer Science Education},
pages = {382–383},
numpages = {2},
location = {Nashville, Tennessee, USA},
series = {SIGCSE '95}
}

@inproceedings{10.1145/134510.134521,
author = {McDonald, Chris},
title = {Teaching concurrency with Joyce and Linda},
year = {1992},
isbn = {0897914686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/134510.134521},
doi = {10.1145/134510.134521},
abstract = {To overcome the difficulty of demonstrating the principles of concurrency with limited parallel computing resources, a concurrent programming language has been designed and implemented which uses the Linda parallel programming paradigm. The language executes under the UNIX operating system and is supported by an X-windows based viewer of programs undergoing concurrent execution. This paper describes the language, its compiler and execution environment and experiences gained in using the language in a third year undergraduate course over the last two years.},
booktitle = {Proceedings of the Twenty-Third SIGCSE Technical Symposium on Computer Science Education},
pages = {46–52},
numpages = {7},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '92}
}

@article{10.1145/126459.126470,
author = {Pyott, Sean and Sanders, Ian},
title = {ALEX: an aid to teaching algorithms},
year = {1991},
issue_date = {Sept. 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {23},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/126459.126470},
doi = {10.1145/126459.126470},
abstract = {A problem with teaching Computer Science to first-year students in a South African context is that many students come from disadvantaged backgrounds and have not been exposed to computer technology. To address this issue, a new curriculum has been adopted for first-year students, the first topic of which covers the design and specification of algorithms. One of the problems encountered in this course is that if the students cannot execute their algorithms they do not know whether the algorithms are correct. One approach to this problem is to require that students be familiar with a programming language. This paper investigates an alternative way of executing algorithms, the ALEX system, and discusses how the system can be used to assist in the teaching of algorithms.ALEX allows students to specify algorithms in an English-like manner and translates these algorithms into an equivalent executable high-level language code, which is then executed. Based on the evaluation of individual students, the use of ALEX is beneficial. However, further experimentation has to occur before the effectiveness of using ALEX can be properly assessed.},
journal = {SIGCSE Bull.},
month = {sep},
pages = {36–44},
numpages = {9}
}

@article{10.1145/36093.36096,
author = {Rising, Linda},
title = {Teaching documentation and style in Pascal},
year = {1987},
issue_date = {September 1, 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/36093.36096},
doi = {10.1145/36093.36096},
journal = {SIGCSE Bull.},
month = {sep},
pages = {8–9},
numpages = {2}
}

@article{10.1145/69605.357966,
author = {Geils, John W.},
title = {Why students reject engineering teaching careers},
year = {1984},
issue_date = {Jan. 1984},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/69605.357966},
doi = {10.1145/69605.357966},
abstract = {Many of the country's brightest engineering students have been passing up graduate school for the challenge and high salaries of industry. This is drying up the supply of new Ph.D.s interested in teaching at a time when U.S. engineering schools are struggling to cope with swelling enrollments and a severe faculty shortage.},
journal = {Commun. ACM},
month = {jan},
pages = {25–27},
numpages = {3}
}

@inproceedings{10.1145/800117.803807,
author = {Klebanoff, J. and Lochovsky, F. and Tsichritzis, D.},
title = {Teaching data base concepts using APL},
year = {1975},
isbn = {9781450374200},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800117.803807},
doi = {10.1145/800117.803807},
abstract = {Rapid growth in the use of data base management systems has caused a shortage of personnel trained in data base concepts. Experience with a data base management system must be provided for students in this area.Methods for teaching data base concepts using APL are discussed. The Educational Data Base System (EDBS), an APL based data base management system, is described. The design of exercises and games to be used with EDBS is discussed. It is concluded that EDBS used with suitable exercises is an effective tool for teaching data base concepts.},
booktitle = {Proceedings of Seventh International Conference on APL},
pages = {221–226},
numpages = {6},
location = {Pisa, Italy},
series = {APL '75}
}

@inproceedings{10.1145/800010.808065,
author = {Dey, Suhrit K.},
title = {Inductive methods of teaching programming languages},
year = {1973},
isbn = {9781450373753},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800010.808065},
doi = {10.1145/800010.808065},
abstract = {In this cult, computer programming is one of the most modern needs in every academic discipline. Students majoring in various subjects are inclined spontaneously to take at least the first course of computer programming with an expectation that they will be capable of writing programs in their special fields of interest. What they mostly learn is the structure of the language and the basic rules and regulations governing its use. Possibly they write few programs, usually similar to those discussed in the classroom. The students' expectations were not fulfilled and their enthusiasm in programming fades.},
booktitle = {Proceedings of the Third SIGCSE Technical Symposium on Computer Science Education},
pages = {6–8},
numpages = {3},
series = {SIGCSE '73}
}

@article{10.1145/3611685,
author = {Hepler, Leland and Robert, David},
title = {Teaching a New Dog Old Tricks},
year = {2023},
issue_date = {Fall 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {1},
issn = {1528-4972},
url = {https://doi.org/10.1145/3611685},
doi = {10.1145/3611685},
abstract = {Boston Dynamics, famous for their robot quadruped dog "Spot," takes new inspiration from some "not-so-new" sources.},
journal = {XRDS},
month = {oct},
pages = {46–51},
numpages = {6}
}

@inproceedings{10.1145/3545947.3573356,
author = {Strange, Laney and McDaniel, Melinda and Glebova, Olga},
title = {Teaching Track Faculty in Computer Science},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3573356},
doi = {10.1145/3545947.3573356},
abstract = {Many computer science departments have chosen to hire faculty to teach in teaching-track positions that parallel the standard tenure-track position, providing the possibility of promotion, longer-term contracts, and higher pay for excellence in teaching and service. This birds-of-a-feather is designed to gather educators, both experienced and new to teaching track positions, who are currently in such a position to share their experiences as members of the faculty of their departments and schools. This year, we plan on discussing the impacts of institutional leadership on teaching faculty. Our discussion will encourage teaching faculty to share the extent to which they are included and valued in leadership positions. It will also ask teaching faculty the extent to which they have support and advocacy among non-teaching-faculty leaders at their institutions.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1254},
numpages = {1},
keywords = {teaching track faculty, professional development, full-time non-tenure track},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3490099.3511117,
author = {Sanchez, T\'{e}o and Caramiaux, Baptiste and Thiel, Pierre and Mackay, Wendy E.},
title = {Deep Learning Uncertainty in Machine Teaching},
year = {2022},
isbn = {9781450391443},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3490099.3511117},
doi = {10.1145/3490099.3511117},
abstract = {Machine Learning models can output confident but incorrect predictions. To address this problem, ML researchers use various techniques to reliably estimate ML uncertainty, usually performed on controlled benchmarks once the model has been trained. We explore how the two types of uncertainty—aleatoric and epistemic—can help non-expert users understand the strengths and weaknesses of a classifier in an interactive setting. We are interested in users’ perception of the difference between aleatoric and epistemic uncertainty and their use to teach and understand the classifier. We conducted an experiment where non-experts train a classifier to recognize card images, and are tested on their ability to predict classifier outcomes. Participants who used either larger or more varied training sets significantly improved their understanding of uncertainty, both epistemic or aleatoric. However, participants who relied on the uncertainty measure to guide their choice of training data did not significantly improve classifier training, nor were they better able to guess the classifier outcome. We identified three specific situations where participants successfully identified the difference between aleatoric and epistemic uncertainty: placing a card in the exact same position as a training card; placing different cards next to each other; and placing a non-card, such as their hand, next to or on top of a card. We discuss our methodology for estimating uncertainty for Interactive Machine Learning systems and question the need for two-level uncertainty in Machine Teaching.},
booktitle = {27th International Conference on Intelligent User Interfaces},
pages = {173–190},
numpages = {18},
keywords = {Machine Teaching, ML uncertainty, Interactive Machine Learning, Human-centered analysis, Human-AI Interaction},
location = {Helsinki, Finland},
series = {IUI '22}
}

@inproceedings{10.1145/3469213.3470334,
author = {Zhou, Hongwei and Kang, Keda and Yuchen, Zhang and Jinhui, Yuan},
title = {MiniDB: A Teaching Oriented Lightweight Database},
year = {2021},
isbn = {9781450390200},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3469213.3470334},
doi = {10.1145/3469213.3470334},
booktitle = {2021 2nd International Conference on Artificial Intelligence and Information Systems},
articleno = {131},
numpages = {6},
location = {Chongqing, China},
series = {ICAIIS 2021}
}

@article{10.5555/3205191.3205220,
author = {Cupak, John J.},
title = {Flipped classroom in teaching computer science},
year = {2018},
issue_date = {June 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {6},
issn = {1937-4771},
abstract = {This paper describes the "Flipped Classroom" methodology that provides students the opportunity to review material before class time and concentrate on the hands-on activities (labs, case-study reviews, mini projects, etc.) in the class. This approach must be coupled with quizzes to assess the student's understanding and review of student notebooks to ensure material is actually reviewed before class.},
journal = {J. Comput. Sci. Coll.},
month = {jun},
pages = {176–178},
numpages = {3}
}

@article{10.5555/3204979.3204988,
author = {Healy, Christopher A.},
title = {Teaching the historical context of computing},
year = {2018},
issue_date = {May 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {5},
issn = {1937-4771},
abstract = {This paper describes the author's experience in creating and teaching a course on the history of science and technology within a computer science department. This course is suitable for general education, as an alternative to a programming or other quantitatively-oriented course. Its purpose is to show a progression of technological achievements and scientific discoveries that ultimately culminates in today's world dominated by the computer. Offering this history course to the broader university community reinforces the message that computer science is an interdisciplinary problem-solving field of study.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {40–45},
numpages = {6}
}

@article{10.5555/2946645.3053444,
author = {Liu, Ji and Zhu, Xiaojin},
title = {The teaching dimension of linear learners},
year = {2016},
issue_date = {January 2016},
publisher = {JMLR.org},
volume = {17},
number = {1},
issn = {1532-4435},
abstract = {Teaching dimension is a learning theoretic quantity that speci\'{e}s the minimum training set size to teach a target model to a learner. Previous studies on teaching dimension focused on version-space learners which maintain all hypotheses consistent with the training data, and cannot be applied to modern machine learners which select a specific hypothesis via optimization. This paper presents the first known teaching dimension for ridge regression, support vector machines, and logistic regression. We also exhibit optimal training sets that match these teaching dimensions. Our approach generalizes to other linear learners.},
journal = {J. Mach. Learn. Res.},
month = {jan},
pages = {5631–5655},
numpages = {25},
keywords = {optimization based learner, VC-dimension, Karush-Kuhn-Tucker conditions}
}

@inproceedings{10.1145/3251182,
author = {Cigas, John},
title = {Session details: Paper Session: Teaching Practices},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3251182},
doi = {10.1145/3251182},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2670739.2670751,
author = {Vaidya, Jaideep and Lorenzi, David and Shafiq, Basit and Chun, Soon and Badar, Nazia},
title = {Teaching privacy in an interactive fashion},
year = {2014},
isbn = {9781450330497},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2670739.2670751},
doi = {10.1145/2670739.2670751},
abstract = {With the ever increasing role technology and the Internet plays in the daily lives of humans, it is important for us as educators to bring awareness to and improve understanding of digital privacy topics. In the case of privacy, it is especially important to develop pedagogical material that can be used by all domains of higher education -- even those who traditionally do not cover topics related to technology or privacy. Given its multidimensional aspects and broad coverage, privacy is a complex subject to study, and especially difficult for students to master using the standard pedagogical techniques. In this paper, we propose the use of an interactive approach to teaching privacy. The primary tools used are that of case studies and gaming scenarios. We propose the development of a suite of case studies and scenarios that teach foundational privacy topics to students. The case studies should be designed to present privacy concepts in a manner that makes them accessible to a variety of disciplines of study while still lecturing on the core privacy topics. We believe this method will achieve a high level of success in raising awareness of these important issues and promoting safe and secure use of technology in society.},
booktitle = {Proceedings of the 2014 Information Security Curriculum Development Conference},
articleno = {7},
numpages = {7},
keywords = {technology education, privacy, case study},
location = {Kennesaw, Georgia},
series = {InfoSec '14}
}

@inproceedings{10.1145/2460296.2460360,
author = {Vatrapu, Ravi and Reimann, Peter and Halb, Wolfgang and Bull, Susan},
title = {Second International Workshop on Teaching Analytics},
year = {2013},
isbn = {9781450317856},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2460296.2460360},
doi = {10.1145/2460296.2460360},
abstract = {Teaching Analytics is conceived as a subfield of learning analytics that focuses on the design, development, evaluation, and education of visual analytics methods and tools for teachers in primary, secondary, and tertiary educational settings. The Second International Workshop on Teaching Analytics (IWTA) 2013 seeks to bring together researchers and practitioners in the fields of education, learning sciences, learning analytics, and visual analytics to investigate the design, development, use, evaluation, and impact of visual analytical methods and tools for teachers' dynamic diagnostic decision-making in real-world settings.},
booktitle = {Proceedings of the Third International Conference on Learning Analytics and Knowledge},
pages = {287–289},
numpages = {3},
keywords = {teaching analytics, open learner models representational guidance, learning analytics, computer supported collaborative learning (CSCL), affordances},
location = {Leuven, Belgium},
series = {LAK '13}
}

@inproceedings{10.5555/2663670.2663673,
author = {Ding, Junhua and Yang, Biwu},
title = {Teaching software engineering with global understanding},
year = {2012},
isbn = {9781467318181},
publisher = {IEEE Press},
abstract = {This paper reports the experiences and lessons learned of teaching a global course on software engineering to students in Africa and United States. The paper describes the course content, distributed software development project, the global teaching environment, assessment criteria, and results. Following the summary of the experiences and lessons learned from teaching the global course, we also discuss how to improve the teaching effectiveness of future global courses.},
booktitle = {Proceedings of the Second International Workshop on Collaborative Teaching of Globally Distributed Software Development},
pages = {11–15},
numpages = {5},
keywords = {software engineering education, global understanding, distributed software development},
location = {Zurich, Switzerland},
series = {CTGDSD '12}
}

@article{10.5555/1961574.1961614,
author = {Mei, Chao and Zhang, Xiaoyang and Zhao, Wenfei and Periyasamy, Kasi and Headington, Mark},
title = {A tool for teaching Petri nets},
year = {2011},
issue_date = {May 2011},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {26},
number = {5},
issn = {1937-4771},
abstract = {Petri nets are a notation used to model and analyze the behavior of concurrent and distributed systems. They are used in many applications such as work flow descriptions and, recently, in certain medical applications. This paper describes the development of a Petri net tool that is mainly intended to teach Petri nets to beginners. Consequently, the authors focused more on making the tool relatively simple to use yet sufficiently detailed to aid in understanding the important concepts of Petri nets. The tool was developed in Java and uses XML notation for storing the underlying representations; hence, it is easily portable to several platforms. The paper includes a simple case study on the model of a vending machine to illustrate the expressive power of the tool. A brief discussion on continuing work on the tool is also included.},
journal = {J. Comput. Sci. Coll.},
month = {may},
pages = {181–188},
numpages = {8}
}

@article{10.5555/1953048.1953059,
author = {Zilles, Sandra and Lange, Steffen and Holte, Robert and Zinkevich, Martin},
title = {Models of Cooperative Teaching and Learning},
year = {2011},
issue_date = {2/1/2011},
publisher = {JMLR.org},
volume = {12},
number = {null},
issn = {1532-4435},
abstract = {While most supervised machine learning models assume that training examples are sampled at random or adversarially, this article is concerned with models of learning from a cooperative teacher that selects "helpful" training examples. The number of training examples a learner needs for identifying a concept in a given class C of possible target concepts (sample complexity of C) is lower in models assuming such teachers, that is, "helpful" examples can speed up the learning process. The problem of how a teacher and a learner can cooperate in order to reduce the sample complexity, yet without using "coding tricks", has been widely addressed. Nevertheless, the resulting teaching and learning protocols do not seem to make the teacher select intuitively "helpful" examples. The two models introduced in this paper are built on what we call subset teaching sets and recursive teaching sets. They extend previous models of teaching by letting both the teacher and the learner exploit knowing that the partner is cooperative. For this purpose, we introduce a new notion of "coding trick"/"collusion". We show how both resulting sample complexity measures (the subset teaching dimension and the recursive teaching dimension) can be arbitrarily lower than the classic teaching dimension and known variants thereof, without using coding tricks. For instance, monomials can be taught with only two examples independent of the number of variables. The subset teaching dimension turns out to be nonmonotonic with respect to subclasses of concept classes. We discuss why this nonmonotonicity might be inherent in many interesting cooperative teaching and learning scenarios.},
journal = {J. Mach. Learn. Res.},
month = {feb},
pages = {349–384},
numpages = {36}
}

@inproceedings{10.1145/1734263.1734294,
author = {McCown, Frank},
title = {Teaching web information retrieval to undergraduates},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734294},
doi = {10.1145/1734263.1734294},
abstract = {Courses centered around the field of Web Information Retrieval (IR) and web search are slowly being introduced at the undergraduate level. In this paper, we show how the curriculum for a new undergraduate course on web search engines was developed, and we share our experiences in having students develop their own search engine components from scratch or modify and extend a popular open source search engine. We hope our experiences will be helpful to other Computer Science departments that are looking to develop an undergraduate Web IR course.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {87–91},
numpages = {5},
keywords = {web ir, teaching, search engines, open source},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/1067445.1067492,
author = {Fekete, Alan},
title = {Teaching transaction management with SQL examples},
year = {2005},
isbn = {1595930248},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1067445.1067492},
doi = {10.1145/1067445.1067492},
abstract = {Transaction management is an important topic in the database course. This remains true whether the subject has an application focus or a systems internals focus. All the standard textbooks use "toy" examples of transactions, expressed as sequences of simple operations such as reading or writing data items. In this paper we argue that the teacher should choose examples which are closer to the students' experiences in other topics of the course, that is, the transactions should be like programs with SQL statements. We discuss the requirements that must be considered in choosing useful examples, and we give a set of examples that we have constructed to meet many of these requirements.},
booktitle = {Proceedings of the 10th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {163–167},
numpages = {5},
keywords = {transaction, education, database, concurrency control},
location = {Caparica, Portugal},
series = {ITiCSE '05}
}

@inproceedings{10.1145/973620.973712,
author = {Jablonowski, Janusz},
title = {Some experiences in teaching teamwork programming},
year = {2003},
isbn = {9549641333},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/973620.973712},
doi = {10.1145/973620.973712},
abstract = {The paper describes experiences gained during last six years of teaching teamwork programming at the Warsaw University. We describe the background, history and evolution of this study subject. We summarize our discussion with some remarks about the importance of such subjects in software engineering study and possible future enhancements.},
booktitle = {Proceedings of the 4th International Conference Conference on Computer Systems and Technologies: E-Learning},
pages = {550–555},
numpages = {6},
keywords = {teamwork programming, software engineering, programming in general, computer science education},
location = {Rousse, Bulgaria},
series = {CompSysTech '03}
}

@article{10.5555/767598.767630,
author = {Azalov, Pavel and Zlatarova, Fani},
title = {Teaching programming through successive problem transformations},
year = {2003},
issue_date = {April 2003},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {4},
issn = {1937-4771},
abstract = {Teaching by examples and problems is a well-known and often used approach when teaching Computer Science. This paper discusses the development of Computer Science lectures using successive problem transformations. A concrete system of examples and problems is described, too. The idea to use such lectures could be especially appropriate for introductory Computer Science courses. The formal description of the idea how to develop similar systems of examples and problems is also considered.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {175–182},
numpages = {8}
}

@article{10.5555/771322.771371,
author = {Moffitt, Lorie Ilene},
title = {Teaching E-business with enterprise Javabeans},
year = {2002},
issue_date = {December 2002},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {18},
number = {2},
issn = {1937-4771},
abstract = {E-business is a hot new topic being taught today in Computer Science departments. E-business is a broad subject that includes e-commerce, but covers more than just the selling of goods. E-business can be a difficult course to teach, in that both business and technological topics must be discussed. Business departments also teach e-business courses. The Computer Science courses focus on programming skills, while Business courses focus more on management issues. It is important for Computer Science professors to know what to teach in a Computer Science e-business course. A Computer Science e-business course should teach students how to build an e-business with the technologies that exists.To teach students how to implement an e-business, the professors must be knowledgeable about the tools they can use to do so. This tutorial will demonstrate one way to teach e-business with a popular technology called Enterprise JavaBeans(EJB). EJBs are distributed components that encapsulate business logic. Developing custom components with EJBs provides a network of configurable business objects. These business objects are simple to create and implement; in addition, they provide a scalable, portable and reliable infrastructure for any business. EJBs are part of a middleware container system. This middleware allows for highly configurable objects. Good business practice means being able to adapt to changes. As the users requirements change, the business resources need to adapt. EJBs allow business to evolve as the environment and the requirements change.This tutorial will present information on how to implement EJBs for a class project. Discussion will begin with the selection of tools such as web servers, databases and hardware components. After this the foundation of Enterprise JavaBeans will be covered including entity beans and session beans. Deployment issues will be presented next, and last will be testing practices. Participants may wish to work in teams for the programming portion of this tutorial.},
journal = {J. Comput. Sci. Coll.},
month = {dec},
pages = {362–363},
numpages = {2},
keywords = {teaching e-business, enterprise, computer science e-business, JavaBeans}
}

@article{10.1145/355354.571919,
author = {Schaub, Stephen},
title = {Teaching Java with Graphics in CS1},
year = {2000},
issue_date = {June 2000},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/355354.571919},
doi = {10.1145/355354.571919},
abstract = {This paper discusses an approach to teaching basic object-oriented concepts in CS1 using Java graphics. Students first use a simplified turtle graphics API to explore introductory programming issues. Later, they see a real-world example of how inheritance can be used to add functionality to the standard Java Abstracting Windowing Toolkit, to facilitate the construction of sophisticated graphics applications.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {71–73},
numpages = {3}
}

@inproceedings{10.1145/305786.305958,
author = {Impagliazzo, John},
title = {Teaching very large instruction word architectures},
year = {1999},
isbn = {1581130872},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/305786.305958},
doi = {10.1145/305786.305958},
abstract = {The VLIW model describes a philosophy whereby the compiler organizes several nondependent machine operations into the same instruction word. Some features of this form of architecture are illustrated and certain strategies on presenting this topic to students are shown.},
booktitle = {Proceedings of the 4th Annual SIGCSE/SIGCUE ITiCSE Conference on Innovation and Technology in Computer Science Education},
pages = {208},
keywords = {architectures, VLIW},
location = {Cracow, Poland},
series = {ITiCSE '99}
}

@inproceedings{10.1145/282991.283090,
author = {Jenkins, Tony},
title = {A participative approach to teaching programming},
year = {1998},
isbn = {1581130007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/282991.283090},
doi = {10.1145/282991.283090},
abstract = {In this paper, we describe an approach to the teaching of introductory programming to students with no previous experience of programming. The approach is based on the key idea of making students active participants in classes rather than passive recipients as might be the case when they are exposed to more traditional lecture-based teaching. In these classes the students are called upon to adopt the rôles of various components in a program and to "act out" relevant processes and procedures.We consider why such an approach might be effective and why it might be expected to be particularly effective in the area of introductory programming.The techniques described were developed and tested during the 1997/98 academic session in the School of Computer Studies at the University of Leeds. At the end of the presentation a brief evaluation was carried out.In conclusion we consider the effectiveness of the approach after a semester's experience and describe planned future developments.},
booktitle = {Proceedings of the 6th Annual Conference on the Teaching of Computing and the 3rd Annual Conference on Integrating Technology into Computer Science Education: Changing the Delivery of Computer Science Education},
pages = {125–129},
numpages = {5},
location = {Dublin City Univ., Ireland},
series = {ITiCSE '98}
}

@inproceedings{10.1145/268084.268143,
author = {Weiss, Mark Allen},
title = {Experiences teaching data structures with Java},
year = {1997},
isbn = {0897918894},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/268084.268143},
doi = {10.1145/268084.268143},
abstract = {This paper describes our experiences incorporating Java in a Data Structures course. We describe the features of Java that made for a more interesting course, the difficulties that we encountered, and compare Java to the prior languages used in this course, Ada and C++. All in all, we found Java to be a reasonable, but not overwhelming better, alternative. Our students were particularly happy with the experiment.},
booktitle = {Proceedings of the Twenty-Eighth SIGCSE Technical Symposium on Computer Science Education},
pages = {164–168},
numpages = {5},
location = {San Jose, California, USA},
series = {SIGCSE '97}
}

@article{10.1145/232301.232330,
author = {Naiman, Avi C.},
title = {Interactive teaching modules for computer graphics},
year = {1996},
issue_date = {Aug. 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {3},
issn = {0097-8930},
url = {https://doi.org/10.1145/232301.232330},
doi = {10.1145/232301.232330},
abstract = {We are developing a suite of interactive modules for teaching introductory computer graphics, using a library we have built to support such efforts. The modules provide explanations of fundamental concepts, tutorial demonstrations of basic techniques and interactive control of the parameters used in and execution of high level representations of elementary algorithms. The modules are used in laboratory sessions to supplement formal lectures. Here, we present our philosophy in building the library and modules, discuss the lessons we have learned in our initial implementation and outline our future plans.},
journal = {SIGGRAPH Comput. Graph.},
month = {aug},
pages = {33–35},
numpages = {3}
}

@article{10.1145/187387.187405,
author = {Cartereau, Michel},
title = {A tool for operating system teaching},
year = {1994},
issue_date = {Sept. 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/187387.187405},
doi = {10.1145/187387.187405},
abstract = {This paper presents a simulation tool designed to aid operating system teaching. It is an example of software for production of pedagogical simulations with a view to cooperative learning. The presentation of its use for teaching operating system shows its potential and includes a description of the educational context and the students' reactions.},
journal = {SIGCSE Bull.},
month = {sep},
pages = {51–55},
numpages = {5}
}

@article{10.1145/122153.122163,
author = {Yue, Kwok-bun},
title = {Teaching a graduate expert systems course},
year = {1990},
issue_date = {Dec. 1990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/122153.122163},
doi = {10.1145/122153.122163},
abstract = {Because expert systems technology is relatively new, there are only a few papers describing a graduate course on the subject. Most of the described courses were either seminar oriented or centered around a student project, but did not have a complete coverage of the major topics. This paper describes the teaching of a graduate expert system course that has a relatively complete coverage of the subject area. Other additional features of the course include incremental development of the student projects, emphasis on evaluations of tools and projects, as well as using more conventional problems for strengthening expert system shell programming techniques.},
journal = {SIGCSE Bull.},
month = {nov},
pages = {49–52},
numpages = {4}
}

@article{10.1145/36093.36108,
author = {Ferchichi, Ahmed and Jaoua, Ali},
title = {Teaching first year programming:  a proposal},
year = {1987},
issue_date = {September 1, 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/36093.36108},
doi = {10.1145/36093.36108},
abstract = {The first contact of students with programming is of prime importance and ought to be controlled carefully. This paper proposes an approach for managing this first contact.},
journal = {SIGCSE Bull.},
month = {sep},
pages = {48–52},
numpages = {5}
}

@inproceedings{10.1145/17701.255679,
author = {Whiteman, Irvin R.},
title = {The intelligent approach to teaching arithmetic},
year = {1985},
isbn = {0897911571},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/17701.255679},
doi = {10.1145/17701.255679},
booktitle = {Proceedings of the International Conference on APL: APL and the Future},
pages = {247–255},
numpages = {9},
location = {Seattle, Washington, USA},
series = {APL '85}
}

@article{10.1145/382230.382442,
author = {Newman, J. Richard},
title = {Alternative teaching techniques in computer science},
year = {1973},
issue_date = {Dec. 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/382230.382442},
doi = {10.1145/382230.382442},
journal = {SIGCSE Bull.},
month = {dec},
pages = {29–32},
numpages = {4}
}

@inproceedings{10.1145/800203.806256,
author = {Tausner, Miriam R.},
title = {Teaching basic computer organization through “microprogramming”},
year = {1973},
isbn = {9781450377836},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800203.806256},
doi = {10.1145/800203.806256},
abstract = {To reinforce concepts of CPU organization students are asked to write a “microprogrammed” interpreter to be run on a theoretical microprogrammable computer which is simulated using an IBM 360 or 370.},
booktitle = {Conference Record of the 6th Annual Workshop on Microprogramming},
pages = {166–167},
numpages = {2},
location = {College Park, Maryland, USA},
series = {MICRO 6}
}

@inproceedings{10.1145/800192.805776,
author = {Richards, Thomas C.},
title = {A flexible approach to teaching FORTRAN},
year = {1973},
isbn = {9781450374903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800192.805776},
doi = {10.1145/800192.805776},
abstract = {The demand by students from all academic disciplines to obtain a basic knowledge of a computer programming language is increasing at an exponential rate on most university campuses. The Systems Analysis Department at Miami University is currently teaching approximately eighteen sections of introductory FORTRAN programming each school year. A concerted effort is now being undertaken in an attempt to design instructional materials and methods which will allow a gross reduction in the teaching load generated by this growing demand. The purpose of this paper will be to discuss the current status of this research effort at Miami University. The objective of this research is to determine if introductory FORTRAN can be taught with little or no emphasis on the lecture recitation mode of instruction. The author outlines the experimental methods he will be using in a controlled experimental approach during the coming school year.},
booktitle = {Proceedings of the ACM Annual Conference},
pages = {436.2–437},
location = {Atlanta, Georgia, USA},
series = {ACM '73}
}

@inproceedings{10.1145/3024906.3024909,
author = {Kuzniarz, Ludwik and Martins, Luiz Eduardo G.},
title = {Teaching Model-Driven Software Development: A Pilot Study},
year = {2016},
isbn = {9781450348829},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3024906.3024909},
doi = {10.1145/3024906.3024909},
abstract = {Software development is a process starting with specification of requirements, then providing design of the required software and implementing the design. Introducing understanding of the process and teaching the skills required for conducting the process is an important learning objective in any CS/SE curriculum. Recently a new paradigm -- model-driven software development - has been introduced and extensively used in order to manage increasing complexity in the development of software. We want to investigate and discuss the state-of-the-practice of teaching MDSD and further to provide suggestions on what to include in the teaching curricula and how to teach MDSD in a proper way. The paper presents the results of the work performed by the ITiCSE 2016 "Teaching Model-Driven Software Development" working group. The objective for the work performed at ITiCSE was to elaborate on a foreseen survey based framework for the research by performing a pilot study using the framework. The pilot study was supposed to validate the framework by performing the initial survey, presenting the results, drawing conclusions from the results but also to find out necessary changes and modifications for the research framework so that it could be used for further more extensive research.},
booktitle = {Proceedings of the 2016 ITiCSE Working Group Reports},
pages = {45–56},
numpages = {12},
keywords = {software engineering education, Model-driven software development},
location = {Arequipa, Peru},
series = {ITiCSE '16}
}

@article{10.1145/2874239.2874303,
author = {Kesar, Shalini},
title = {Including teaching ethics into pedagogy: preparing information systems students to meet global challenges of real business settings},
year = {2016},
issue_date = {September 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {3},
issn = {0095-2737},
url = {https://doi.org/10.1145/2874239.2874303},
doi = {10.1145/2874239.2874303},
abstract = {This paper's discusses five real business capstone projects that were designed to provide an educational experiential learning to include ethics and professionalism in the pedagogy. This class comprised senior undergraduate Computer Science (CS) and Information Systems (IS) students. The projects involved teamwork and lasted fifteen weeks. The aim of the capstone curriculum was to foster a teaching environment to: 1) include interdisciplinary partnership among university departments; 2) cultivate local industry alliances; 3) encourage students' analysis and synthesis of skills and knowledge in a real business setting project. The National Society for Experiential Education (NSEE) practices were used while developing the curriculum and their eight Guiding Principles of Ethical Practices are used to describe the initial findings and lesson learned.},
journal = {SIGCAS Comput. Soc.},
month = {jan},
pages = {432–437},
numpages = {6},
keywords = {soft skills, pedagogy, national society for experiential education, experiential learning, capstone projects}
}

@article{10.1145/379279.379339,
author = {Lin, Edward Y. H.},
title = {Teaching mathematical programming with APL: a pivotal example},
year = {1988},
issue_date = {Sept. 1988},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {1},
issn = {0163-6006},
url = {https://doi.org/10.1145/379279.379339},
doi = {10.1145/379279.379339},
abstract = {In her article entitled "The Future of APL in Education" [8], Traberman called for offering "a demonstration lesson to show teachers and/or students how easy and powerful APL is". Easy and powerful it may be, indeed; however, before he or she can appreciate APL, there are major problems that confront an APL novice. They include error messages (which usually do not provide them with much useful information at an early stage), readability (i.e. APL symbolic notations) and difficulties in coping with function looping (i.e. inefficiency in re-interpreting). These difficulties often result in criticism from APL laymen such as in [2, 5, 7], and may turn away some potential APL programmers or users.I offer the following example from my teaching experience, as an illustration of how to "guide" APL novices toward better understanding of appropriate APL programming.},
journal = {SIGAPL APL Quote Quad},
month = {sep},
pages = {22–24},
numpages = {3}
}

@inproceedings{10.1145/3137065.3137083,
author = {Sentance, Sue and Waite, Jane and Yeomans, Lucy and MacLeod, Emily},
title = {Teaching with physical computing devices: the BBC micro:bit initiative},
year = {2017},
isbn = {9781450354288},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3137065.3137083},
doi = {10.1145/3137065.3137083},
abstract = {There is a growing interest in small programmable devices that can be used in schools and in extra-curricular contexts to teach computer science. The BBC micro:bit is one such device; through a collaborative venture, micro:bits were recently distributed to every 11-12 year old in the UK. Although the technology itself is often of primary interest, a focus on how teachers can use the technology in the classroom to help students learn is increasingly being drawn out in the literature: this paper adds to that body of work Having interviewed 15 teachers and 54 students about their use and experience of the micro:bit, we present an analysis of the varied ways in which teachers are using the BBC micro:bit, and note a range of instructional styles. We classify different approaches to teaching with physical computing, identifying teachers who we describe as either inspirers, providers or consumers. Finally we make recommendations for more teacher professional learning opportunities around physical computing. The results of this qualitative study will be useful to teachers and teacher educators wishing to work more effectively with physical computing in the classroom.},
booktitle = {Proceedings of the 12th Workshop on Primary and Secondary Computing Education},
pages = {87–96},
numpages = {10},
keywords = {physical computing, pedagogy, computer science education, K-12 education, BBC micro:bit},
location = {Nijmegen, Netherlands},
series = {WiPSCE '17}
}

@inproceedings{10.1145/2676723.2677243,
author = {Burge, Janet},
title = {Insights into Teaching and Learning: Reflections on MOOC Experiences},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2677243},
doi = {10.1145/2676723.2677243},
abstract = {There has been significant interest in MOOCs, both inside and outside the educational community. Some of this interest focuses on how they could be used to replace traditional brick-and-mortar education while others are interested in using them to supplement more traditional courses. Instructors can also use MOOCs to gain new insight into teaching and learning by taking on a student perspective. This paper describes how taking several MOOCs has given me a better understanding of student motivation, time commitment issues, and student perception of grading and describes how I am feeding this knowledge back into my own courses.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {600–603},
numpages = {4},
keywords = {moocs, flipped classroom},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/3063955.3063960,
author = {Guo, Yao and Lu, Junlin and Chen, Yifeng and Zhang, Ming and Li, Wenxin},
title = {Hybrid small class teaching: dividing and conquering large computer systems classes},
year = {2017},
isbn = {9781450348737},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3063955.3063960},
doi = {10.1145/3063955.3063960},
abstract = {Recent years have witnessed the rapid increase of undergraduate students in computer science majors. As a result, many computer science classes have reached hundreds of students, which may affect the quality of in-class teaching for some courses such as computer systems. This paper presents our approach in dealing with this issue with an approach we called hybrid small class teaching, which combines large class lectures with small class recitation, to increase the involvement of students and improve the performance of teaching. We have experimented this approach on an "Introduction to Computer Systems" course for the past five years with more than 20 professors involved each year. This paper presents our experiences and lessons learned through the experiments with hybrid small class teaching, as well as insights on how to deal with large classes in similar courses.},
booktitle = {Proceedings of the ACM Turing 50th Celebration Conference - China},
articleno = {5},
numpages = {6},
keywords = {small class teaching, recitation, computer systems course},
location = {Shanghai, China},
series = {ACM TURC '17}
}

@inproceedings{10.1145/3017680.3017685,
author = {Hughes, Kimberly and Fletcher, Carol L. and DeLyser, Leigh Ann and Owen, Anthony},
title = {Building CS Teaching Capacity: Comparing Strategies for Achieving Large Scale Impact},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017685},
doi = {10.1145/3017680.3017685},
abstract = {Many states are taking up the President's challenge to provide CS for All. One of the most significant barriers to realizing this goal is the lack of trained and certified CS teachers. Building teacher capacity on a large scale is a challenge each of these panelists has tackled in their own region. Panelists will discuss the pros and cons of targeting in-service vs. pre-service teachers, online vs. face-to-face training, carrots vs. sticks, top down vs. bottom up strategies, and long-term vs. short term solutions to building capacity across an entire state or metropolitan area. Panelists represent CS for All efforts from Texas, New York City, and Arkansas.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {667–668},
numpages = {2},
keywords = {teacher certification, computer science education, MOOC},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@inproceedings{10.1145/2157136.2157413,
author = {Dziallas, Sebastian and Ellis, Heidi J.C. and Chua, Mel and Huss-Lederman, Steven and Wurst, Karl R.},
title = {Teaching open source: involving students in free and open source software (FOSS) project communities (abstract only)},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157413},
doi = {10.1145/2157136.2157413},
abstract = {Involving students from a wide range of backgrounds in Free and Open Source Software (FOSS) project communities gets them a hands-on, portfolio-building experience in the creation of a real-world project while simultaneously building their institution's public profile. The Teaching Open Source (http://teachingopensource.org) community is an emergent (3 year old) group working on scaffolding to bridge the cultural differences between academic and FOSS communities of practice. Join us to share questions, challenges, and triumphs of incorporating FOSS participation into existing and new curricula as well support resources for doing so. Alumni and current members of the POSSE (Professors' Open Source Summer Experience, http://communityleadershipteam.org/posse) will attend in mentorship roles. Faculty attendance at the SIGCSE 2010 BoF on Teaching Open Source (TOS) indicates that student involvement in FOSS projects is a teaching and learning approach of interest for many faculty members. The transparency of both artifacts and process make FOSS an attractive real-world experience that enhances peer learning and intrinsic motivation for a diversity of courses, from introductory, interdisciplinary, and non-major classes to software engineering core offerings and senior capstones. However, such student participation involves a significant learning curve and effort on the part of the faculty member, and support structures for faculty are still maturing. 2011-2012 marks the 3rd academic year the TOS community has explored this realm together, and the past year has seen the emergence of more best practices, support resources, and curricular material. Community members are starting to design cross-institutional research on the impact of FOSS participation on students. BoF attendees will be encouraged to ask questions, network, and take advantage of the TOS community as a support structure for their own courses and projects.The audience is expected to consist of instructors who 1) are interested in learning how to get started in involving students in FOSS projects; or 2) have involved students in FOSS projects and are looking for better ways to facilitate student learning within FOSS projects.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {676},
numpages = {1},
keywords = {teaching open source, open source, communities of practice, FOSS},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/3545947.3569613,
author = {Doore, Stacy A. and Rudra, Atri and Ogunyemi, Omowumi and Goetze, Trystan S. and Sahami, Mehran and Cortina, Thomas J. and Bhardwaj, Kiran and Lee, Crystal},
title = {Teaching Responsible Computing in Context: Models, Practices, and Tools},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3569613},
doi = {10.1145/3545947.3569613},
abstract = {Recent news and national reports have significantly increased interest in new approaches for teaching responsible computing to help students understand, evaluate, and address the social impact of existing and emerging computing technologies. This 3-hour workshop will be offered in two workshop format sessions: in-person and online. The first part of each session will introduce responsible computing and its connections to RESPECT and Cultural Competence in Computing (3C). Next, we will provide a short overview of our own work in teaching responsible computing along with frameworks, tools, and best practices. We will showcase four different approaches to teaching responsible computing across institutional settings (high school, college, university), interdisciplinary partnerships (computing, philosophy, STS, digital humanities), and instructional formats (dedicated courses, embedded lessons, design challenges, bootcamps). The workshop presentations will focus on practical advice about how to get started, available resources, securing support from administration and colleagues, and other considerations for this work. In the second half of the workshop, participants will work in small groups to co-design potential lessons based on shared topical interests, institutional settings, and/or learning objectives. Facilitators will provide guidance, recommendations, and classroom examples to help the small groups to complete draft lessons that will be disseminated among workshop participants and on the workshop website. A laptop or internet connected device is needed to participate in the small group activity. Handouts/materials will be provided on the workshop website.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1185},
numpages = {1},
keywords = {responsible computing, computing ethics, computer science education},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@article{10.1145/191642.191649,
author = {L\"{o}wgren, Jonas and Quinn, Clark N. and Gasen, Jean and Gorny, Peter},
title = {Designing the teaching of HCI: a CHI '94 workshop},
year = {1994},
issue_date = {Oct. 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {4},
issn = {0736-6906},
url = {https://doi.org/10.1145/191642.191649},
doi = {10.1145/191642.191649},
abstract = {Interest in HCI education is on the rise. As the HCI body of knowledge continues to grow, educators in academia and industry are seeking out ways to translate, present and incorporate such knowledge in textbooks, courses and even degree programs. The increasing number of faculty, courses, texts and programs focusing on HCI are testimony to this increasing interest.},
journal = {SIGCHI Bull.},
month = {oct},
pages = {28–31},
numpages = {4}
}

@inproceedings{10.1145/2998551.2998552,
author = {Travica, Bob},
title = {Teaching Informatics in North America: Jugglers Wanted: Extended Abstract},
year = {2016},
isbn = {9781450344920},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2998551.2998552},
doi = {10.1145/2998551.2998552},
booktitle = {Proceedings of the Computer Science Education Research Conference 2016},
pages = {1},
numpages = {1},
location = {Pretoria, South Africa},
series = {CSERC '16}
}

@article{10.1145/3088440,
author = {Acher, Mathieu and Lopez-Herrejon, Roberto E. and Rabiser, Rick},
title = {Teaching Software Product Lines: A Snapshot of Current Practices and Challenges},
year = {2017},
issue_date = {March 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {1},
url = {https://doi.org/10.1145/3088440},
doi = {10.1145/3088440},
abstract = {Software Product Line (SPL) engineering has emerged to provide the means to efficiently model, produce, and maintain multiple similar software variants, exploiting their common properties, and managing their variabilities (differences). With over two decades of existence, the community of SPL researchers and practitioners is thriving, as can be attested by the extensive research output and the numerous successful industrial projects. Education has a key role to support the next generation of practitioners to build highly complex, variability-intensive systems. Yet, it is unclear how the concepts of variability and SPLs are taught, what are the possible missing gaps and difficulties faced, what are the benefits, and what is the material available. Also, it remains unclear whether scholars teach what is actually needed by industry. In this article, we report on three initiatives we have conducted with scholars, educators, industry practitioners, and students to further understand the connection between SPLs and education, that is, an online survey on teaching SPLs we performed with 35 scholars, another survey on learning SPLs we conducted with 25 students, as well as two workshops held at the International Software Product Line Conference in 2014 and 2015 with both researchers and industry practitioners participating. We build upon the two surveys and the workshops to derive recommendations for educators to continue improving the state of practice of teaching SPLs, aimed at both individual educators as well as the wider community.},
journal = {ACM Trans. Comput. Educ.},
month = {oct},
articleno = {2},
numpages = {31},
keywords = {variability modeling, software product line teaching, software engineering teaching, Software product lines}
}

@article{10.1145/382191.382557,
author = {Cornelius, Barry},
title = {A systematic approach to teaching Pascal: 58},
year = {1983},
issue_date = {Dec. 1983},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {15},
number = {4},
issn = {0097-8418},
url = {https://doi.org/10.1145/382191.382557},
doi = {10.1145/382191.382557},
journal = {SIGCSE Bull.},
month = {dec},
pages = {21–23},
numpages = {3}
}

@inproceedings{10.1145/2832920.2832929,
author = {Schlender, Henning and Schreiner, S\"{o}ren and Metzdorf, Malte and Gr\"{u}ttner, Kim and Nebel, Wolfgang},
title = {Teaching Mixed-Criticality: Multi-Rotor Flight Control and Payload Processing on a Single Chip},
year = {2015},
isbn = {9781450338974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2832920.2832929},
doi = {10.1145/2832920.2832929},
abstract = {Modern Cyber-Physical Systems (CPS) already integrate multiple functions and this trend is expected to grow in the near future for economic reasons. Mixed-Criticality Cyber-Physical Systems (MC-CPS) impose the challenging task of integrating safety-critical and non-safety critical applications on the same device or even on the same System-on-Chip. The engineering of MC-CPS requires competences from different disciplines, such as physics, mechatronics, electrical engineering, embedded HW/SW design, real-time systems, software engineering, control theory, and safety analysis. Most of these disciplines are covered by university courses, but the application of these techniques on the design of a real MC-CPS can hardly be handled in a regular course. In this paper, the concept, organization, technical outcomes and discussion of the experiences of a two-term student project group is presented. The group performed the specification, implementation and test of a mixed-criticality multi-rotor system: integrating a safety-critical flight control algorithm with mission-critical payload processing on a single chip. Based on this experience, a student project group for teaching the interdisciplinary and crosscutting topic of mixed-criticality within a traditional technical computer science curriculum is advocated.},
booktitle = {Proceedings of the WESE'15: Workshop on Embedded and Cyber-Physical Systems Education},
articleno = {9},
numpages = {8},
keywords = {student project group, multirotor, mixed-criticality cyber-physical systems, education},
location = {Amsterdam, Netherlands},
series = {WESE'15}
}

@article{10.5555/3581625.3581632,
author = {Rogers, Michael P. and Siever, Bill},
title = {Teaching Cross-Platform Technology and Democracy},
year = {2022},
issue_date = {November 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {5},
issn = {1937-4771},
abstract = {Traditionally, mobile apps have been built using native technologies and imperative frameworks (NT/IF), and academic courses in mobile development have reflected this. While this approach accounts for the vast majority of existing apps, the last 10 years has seen the rise and steady improvement of cross platform technologies that utilize declarative frameworks (CP/DF). This approach has some advantages, and graduates are likely to encounter CP/DF in the workforce, so it behooves us to introduce them in our classes, and provide students with the skills needed to choose among myriad possibilities. This experience report describes the design and delivery of a novel one-semester mobile computing course that focused on enhancing students' technical and decision-making skills, while adding an element of democracy to the curricular design process. Students already familiar with NT/IF (having studied iOS, Android, or in some cases both) systematically, studied and compared 4 CP/DF products. Three were selected in advance by the instructor. Students developed rubrics to rate each, and guided by those rubrics, chose a fourth technology to pursue. Major findings include: insight into the process of transitioning students from NT/IF to CP/DF, observations about instructional strengths and weaknesses of each approach, and student-developed assessments that reflect student priorities for UI frameworks.},
journal = {J. Comput. Sci. Coll.},
month = {nov},
pages = {75–86},
numpages = {12}
}

@article{10.5555/3580523.3580533,
author = {Shukla, Gulesh and Wonnacott, David G.},
title = {On Teaching and Testing Recursive Programming},
year = {2022},
issue_date = {November 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {3},
issn = {1937-4771},
abstract = {Novice programmers face many challenges when learning to program. Recursion is often considered a particularly difficult challenge. Considerable research has been done to explore the ways in which new students understand recursive code. Our survey of this research suggests that much of the education research focuses on the use of tracing to teach recursion, and to test student understanding thereof.However, a fundamentally different approach is suggested by our informal conversations with faculty who emphasize recursion in the first or second semester. Specifically, many faculty try to develop students' ability to think abstractly about functions they call, and then leverage this thinking to help students think about recursive functions without getting lost in a morass of detail.In this paper, we consider some of the challenges of teaching recursion via abstraction, propose experiments to measure the success of this approach, and report on the results of a preliminary experiment this past spring. We close with our thoughts about pedagogy, the classification of notional machines, and tool support for various types of visualization.},
journal = {J. Comput. Sci. Coll.},
month = {nov},
pages = {98–106},
numpages = {9}
}

@article{10.5555/3512528.3512538,
author = {Bunde, David P.},
title = {Teaching heterogeneous parallel programming with CUDA},
year = {2021},
issue_date = {October 2021},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {4},
issn = {1937-4771},
abstract = {CS faculty have spent the last several years adding parallel computing to their curricula since essentially all processors sold today have multiple cores. A typical target system is a multicore processor with identical cores. This is the configuration for most current desktop and laptop systems, but the technology continues to evolve and systems are incorporating heterogeneity, with cores or varying size and specialized processing elements to optimize performance and power. In this hands-on workshop, I will present modules for teaching about computational and memory heterogeneity with CUDA, a common approach to graphics processing unit (GPU) programming. Then attendees will have time to work on the modules themselves as well as to begin planning how the modules could be used in their courses. Importantly, these modules can be done using Google Colab, a cloud environment that provides free access to GPUs without requiring the purchase or installation of hardware.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {64–65},
numpages = {2}
}

@inproceedings{10.1145/3411763.3451532,
author = {Gong, Jiangtao and Ji, Xiaobai and Zha, Siyu and Han, Teng and Ding, Qicheng and Li, Jiannan and Zhang, Liuxin and Wang, Qianying},
title = {HoloBoard: an Immersive Teaching Board System},
year = {2021},
isbn = {9781450380959},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3411763.3451532},
doi = {10.1145/3411763.3451532},
abstract = {We present HoloBoard, a next generation teaching board based on large-format, semi-transparent, interactive display technology that supports immersive teaching and learning. It can present immersive media curriculum materials including large-format videos, interactive 3D objects, AR effects, etc. Based on a multi-stage mixed-methods teacher-centered design thinking approach and a series of user studies with 6-9 years old primary students, the concept design of HoloBoard was defined and refined. The results showed that HoloBoard can be deployed in the wild and bring more engagement and interactivity in the primary school classroom, promoting students’ spontaneous exploration and active learning.},
booktitle = {Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems},
articleno = {187},
numpages = {4},
keywords = {teaching board, mixed reality, large-format display, immersive learning, hologram},
location = {<conf-loc>, <city>Yokohama</city>, <country>Japan</country>, </conf-loc>},
series = {CHI EA '21}
}

@article{10.5555/3344081.3344092,
author = {Salan, Serge},
title = {Teaching object-oriented programming with geometry},
year = {2019},
issue_date = {April 2019},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {34},
number = {7},
issn = {1937-4771},
abstract = {This tutorial provides a method to teach object-oriented programming (OOP) to new programmers. The method relies on using a running example to explain basic to advanced concepts in OOP. The example is based on geometry objects, e.g., a point, a triangle, a rectangle, as well as known concepts such as calculating a distance. Geometry is an area of mathematics that is accessible to students, and the teacher does not usually need to provide background knowledge before starting the lecture. Furthermore, it gives a natural way to illustrate the topic with figures, which allows the students to rely on visualization to better understand the material.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {84},
numpages = {1}
}

@inproceedings{10.1145/3302541.3311527,
author = {Tay, Y.C.},
title = {Lessons from Teaching Analytical Performance Modeling},
year = {2019},
isbn = {9781450362863},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3302541.3311527},
doi = {10.1145/3302541.3311527},
abstract = {This talk summarizes some lessons from teaching a course in analytical performance modeling, specifically: (1) what can an analytical model offer? (2) how a model can be decomposed into submodels,so as to decouple different forces affecting performance, and thus analyze their interaction; (3) making choices in formulating a model; (4) the role of assumptions; (5) Average Value Approximation (AVA); (6) when bottleneck analysis suffices; (7) reducing the parameter space; (8) the concept of analytic validation; and (9) analysis with an analytical model.},
booktitle = {Companion of the 2019 ACM/SPEC International Conference on Performance Engineering},
pages = {79–84},
numpages = {6},
keywords = {validation, performance, assumptions, approximations, analytical model, analysis},
location = {Mumbai, India},
series = {ICPE '19}
}

@inproceedings{10.1145/3287324.3287540,
author = {Morrison, Briana and Margulieux, Lauren and Decker, Adrienne},
title = {Using Subgoal Labeling in Teaching CS1},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287540},
doi = {10.1145/3287324.3287540},
abstract = {Subgoal labeling is an instructional design framework for breaking down problems into pieces that are small enough for novices to grasp, and often difficult for instructors (i.e., experts) to articulate. Subgoal labels have been shown to improve student performance during problem solving in disciplines both in and out of computing. Improved student performance occurs because subgoal labels improve student transfer and retention of knowledge. With support from NSF (DUE-1712025, #1712231), subgoal labels have been identified and integrated into a CS1 course (variables, expressions, conditionals, loops, arrays, classes). This workshop will introduce participants to the materials and demonstrate how the subgoal labels and worked examples are integrated throughout the course. Materials include over 100 worked examples and practice problem pairs that increase in complexity and difficulty within each topic. The materials are designed to be integrated into CS1 courses as homework or classroom examples and activities. Assessment of topics using subgoal labels will also be discussed. Participants will also engage in an activity where they create an example for their own course using subgoal labels.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1237},
numpages = {1},
keywords = {worked examples, subgoal labels, introductory programming, cs1, cognitive load theory},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3287324.3287371,
author = {Ko, Amy J. and LaToza, Thomas D. and Hull, Stephen and Ko, Ellen A. and Kwok, William and Quichocho, Jane and Akkaraju, Harshitha and Pandit, Rishin},
title = {Teaching Explicit Programming Strategies to Adolescents},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287371},
doi = {10.1145/3287324.3287371},
abstract = {One way to teach programming problem solving is to teach explicit, step-by-step strategies. While prior work has shown these to be effective in controlled settings, there has been little work investigating their efficacy in classrooms. We conducted a 5-week case study with 17 students aged 15-18, investigating students' sentiments toward two strategies for debugging and code reuse, students' use of scaffolding to execute these strategies, and associations between students' strategy use and their success at independently writing programs in class. We found that while students reported the strategies to be valuable, many had trouble regulating their choice of strategies, defaulting to ineffective trial and error, even when they knew systematic strategies would be more effective. Students that embraced the debugging strategy completed more features in a game development project, but this association was mediated by other factors, such as reliance on help, strategy self-efficacy, and mastery of the programming language used in the class. These results suggest that teaching of strategies may require more explicit instruction on strategy selection and self-regulation.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {469–475},
numpages = {7},
keywords = {strategy, self-regulation, programming},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3294016.3294029,
author = {Moller, Faron and Powell, Stewart},
title = {Teaching Computing via a School Placement},
year = {2019},
isbn = {9781450366311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3294016.3294029},
doi = {10.1145/3294016.3294029},
abstract = {Across Wales -- as, but even more so than, elsewhere -- there is a critical shortage of teachers who are qualified to teach Computer Science. This issue is particularly coming to the fore now due to ongoing changes to the national school curriculum which is seeing a rigorous computer science curriculum replacing the ICT curriculum which has been passed off as computing in most schools over the past several decades. In this paper we describe the efforts made by Technocamps to tackle this problem by encouraging computer science graduates to consider education as a viable career option. In particular, we outline a credit-bearing module which incorporates an extensive school placement. We discuss the challenges with setting up and running such a module as well as its effectiveness.},
booktitle = {Proceedings of the 3rd Conference on Computing Education Practice},
articleno = {3},
numpages = {4},
keywords = {School-university partnership, Professional development, In-service teacher education, Computer science education},
location = {Durham, United Kingdom},
series = {CEP '19}
}

@article{10.14778/2994509.2994532,
author = {Bursztyn, Damian and Goasdou\'{e}, Fran\c{c}ois and Manolescu, Ioana},
title = {Teaching an RDBMS about ontological constraints},
year = {2016},
issue_date = {August 2016},
publisher = {VLDB Endowment},
volume = {9},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/2994509.2994532},
doi = {10.14778/2994509.2994532},
abstract = {In the presence of an ontology, query answers must reflect not only data explicitly present in the database, but also implicit data, which holds due to the ontology, even though it is not present in the database. A large and useful set of ontology languages enjoys FOL reducibility of query answering: answering a query can be reduced to evaluating a certain first-order logic (FOL) formula (obtained from the query and ontology) against only the explicit facts.We present a novel query optimization framework for ontology-based data access settings enjoying FOL reducibility. Our framework is based on searching within a set of alternative equivalent FOL queries, i.e., FOL reformulations, one with minimal evaluation cost when evaluated through a relational database system. We apply this framework to the DL-LiteR Description Logic underpinning the W3C's OWL2 QL ontology language, and demonstrate through experiments its performance benefits when two leading SQL systems, one open-source and one commercial, are used for evaluating the FOL query reformulations.},
journal = {Proc. VLDB Endow.},
month = {aug},
pages = {1161–1172},
numpages = {12}
}

@inproceedings{10.1145/2899415.2899445,
author = {Karavirta, Ville and Lind\'{e}n, Rolf and Kurvinen, Einari and Laakso, Mikko-Jussi},
title = {Interactive Exercises for Teaching Logic Circuits},
year = {2016},
isbn = {9781450342315},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2899415.2899445},
doi = {10.1145/2899415.2899445},
abstract = {Logic circuits are a central concept in understanding how computers and electronics work underneath. While there are educational, web-based systems for visualizing and building circuits, few systems exist which are capable of providing automatically assessed exercises with visual feedback on the topic. In this paper, we describe the lechef library for providing exercises on logic circuits. The library supports two types of exercises: 1) giving students a logic circuit and the input to the circuit asking them to give the input and output values for each gate in the circuit, and 2) giving students a truth table of the wanted circuit and requiring them to construct a circuit fulfilling the requirements. Furthermore, we explain how we integrated it into the ViLLE learning environment and used it on our introductory computer science course. We also report on our initial findings on student experiences on using the exercises as well as their results. We believe the system and our experiences provide valuable feedback to other members of the community on how and why to use such exercises.},
booktitle = {Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {101–105},
numpages = {5},
keywords = {logic circuits, educational technology, automatic assessment},
location = {Arequipa, Peru},
series = {ITiCSE '16}
}

@inproceedings{10.1145/2729094.2742588,
author = {Frison, Patrice},
title = {A Teaching Assistant for Algorithm Construction},
year = {2015},
isbn = {9781450334402},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2729094.2742588},
doi = {10.1145/2729094.2742588},
abstract = {This paper describes a method and a tool that allows a teacher to interactively explain and construct basic algorithms to novice programmers by direct manipulations of variables, indexes and arrays. The method consists in gradually creating a program with the assistance of a tool that captures the teachers actions on the fly. The system offers possibilities for recording a sequence of actions and replaying them. Moreover it is able to take care of conditional statements, as well as loops and macro operations. The tool generates the corresponding program code. As a result, a complete algorithm can be designed and executed without writing a single line of code.},
booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {9–14},
numpages = {6},
keywords = {programming by demonstration, novice programming environment, direct manipulation, algorithm visualization},
location = {Vilnius, Lithuania},
series = {ITiCSE '15}
}

@inproceedings{10.1145/2538862.2538971,
author = {Szabo, Claudia},
title = {Evaluating GameDevTycoon for teaching software engineering},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538971},
doi = {10.1145/2538862.2538971},
abstract = {Academia and industry recognize the effectiveness of teaching Software Engineering through group-based project work supported by lectures discussing software engineering theory. However, while undertaking such project work, only a very small number of students in the team are exposed to team leadership and project management. This is because teams usually struggle with organization and timely task completion, and there is usually no time left to rotate leadership roles. To alleviate this problem, several gaming approaches have been proposed. In this paper, we analyze GameDevTycoon, the most recent addition to such games. We include a gameplay and reflection component in our group-based project course and perform a quantitative analysis of a team management and leadership aspects that the students encountered during their gameplay. We further compare and evaluate GameDevTycoon against five other software engineering-focused games. Our analysis shows the advantages and disadvantages of using GameDevTycoon for teaching project management and highlight further directions towards better inclusion in the curriculum.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {403–408},
numpages = {6},
keywords = {software engineering, computer science education},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2557500.2557521,
author = {Kamal, Ankit and Li, Yang and Lank, Edward},
title = {Teaching motion gestures via recognizer feedback},
year = {2014},
isbn = {9781450321846},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2557500.2557521},
doi = {10.1145/2557500.2557521},
abstract = {When using motion gestures, 3D movements of a mobile phone, as an input modality, one significant challenge is how to teach end users the movement parameters necessary to successfully issue a command. Is a simple video or image depicting movement of a smartphone sufficient? Or do we need three-dimensional depictions of movement on external screens to train users? In this paper, we explore mechanisms to teach end users motion gestures, examining two factors. The first factor is how to represent motion gestures: as icons that describe movement, video that depicts movement using the smartphone screen, or a Kinect-based teaching mechanism that captures and depicts the gesture on an external display in three-dimensional space. The second factor we explore is recognizer feedback, i.e. a simple representation of the proximity of a motion gesture to the desired motion gesture based on a distance metric extracted from the recognizer. We show that, by combining video with recognizer feedback, participants master motion gestures equally quickly as end users that learn using a Kinect. These results demonstrate the viability of training end users to perform motion gestures using only the smartphone display.},
booktitle = {Proceedings of the 19th International Conference on Intelligent User Interfaces},
pages = {73–82},
numpages = {10},
keywords = {smartphone, sensors, recognizer feedback., motion gestures, android},
location = {Haifa, Israel},
series = {IUI '14}
}

@inproceedings{10.1145/2530544.2530545,
author = {Lee, Edward A. and Seshia, Sanjit A. and Jensen, Jeff C.},
title = {Teaching embedded systems the Berkeley way},
year = {2012},
isbn = {9781450317658},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2530544.2530545},
doi = {10.1145/2530544.2530545},
abstract = {This paper describes an approach to teaching embedded systems from the perspective of cyber-physical systems. We place less emphasis on the mechanics of embedded system design and more on critical thinking about design technologies and on how the design of embedded software affects the behavior, safety, and reliability of cyber-physical systems. The course gives students experience with three distinct levels of design of embedded software, namely bare-iron programming (software that executes in the absence of an operating system), programming within a real-time operating system, and model-based design. In each case, students are taught to think critically about the technology, to probe deeply the mechanisms and abstractions that are provided, and to understand the consequences of chosen abstractions on overall system design. This paper describes a laboratory experience that first exposes students to the three levels of abstraction through a structured sequence of exercises, followed by an open-ended capstone project. Several example projects are described.},
booktitle = {Proceedings of the Workshop on Embedded and Cyber-Physical Systems Education},
articleno = {1},
numpages = {8},
location = {Tampere, Finland},
series = {WESE '12}
}

@article{10.5555/2167431.2167444,
author = {McGuffee, James W. and Bhagyavati, B. and Nandigam, Jagadeesh and Schilling, Walter W.},
title = {The security assessment teaching case module},
year = {2012},
issue_date = {April 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {4},
issn = {1937-4771},
abstract = {Digital Home is a comprehensive software case study developed by software engineering faculty at Embry-Riddle Aeronautical University. This paper describes the Digital Home case study project, its application to computing education, and the development of a security assessment case module for the case study project. The Security Assessment case module was developed by a team of computing educators from various institutions during the "Teaching with a Software Life-Cycle Case Study" workshop held in June 2011.},
journal = {J. Comput. Sci. Coll.},
month = {apr},
pages = {69–74},
numpages = {6}
}

@inproceedings{10.1145/1508865.1509009,
author = {Pivkina, Inna and Ranjan, Desh and Lodder, Jerry},
title = {Historical sources as a teaching tool},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1509009},
doi = {10.1145/1508865.1509009},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {401–402},
numpages = {2},
keywords = {projects, pedagogy, historical sources, discrete mathematics, assignments, algorithms},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@inproceedings{10.5555/1862712.1862738,
author = {Tempero, Ewan},
title = {Experiences in teaching quality attribute scenarios},
year = {2009},
isbn = {9781920682767},
publisher = {Australian Computer Society, Inc.},
address = {AUS},
abstract = {The concept of the quality attribute scenario was introduced in 2003 to support the development of software architectures. This concept is useful because it provides an operational means to represent the quality requirements of a system. It also provides a more concrete basis with which to teach software architecture. Teaching this concept however has some unexpected issues. In this paper, I present my experiences of teaching quality attribute scenarios and outline Bus Tracker, a case study I have developed to support my teaching.},
booktitle = {Proceedings of the Eleventh Australasian Conference on Computing Education - Volume 95},
pages = {181–188},
numpages = {8},
location = {Wellington, New Zealand},
series = {ACE '09}
}

@article{10.1145/1383602.1383642,
author = {Vandever, Kelly},
title = {Teaching the business of software development},
year = {2008},
issue_date = {June 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/1383602.1383642},
doi = {10.1145/1383602.1383642},
abstract = {Computer science graduates come into the software development workforce with some great knowledge. But additional education is required to better prepare them for the business of software development. In this article, Kelly Vandever of Communications for Everyone, LLC encourages educators to consider what other elements should be included as part of their college programs.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {90–92},
numpages = {3},
keywords = {software, hires, communications, college, business}
}

@inproceedings{10.1145/1352135.1352247,
author = {McAndrew, Alasdair},
title = {Teaching cryptography with open-source software},
year = {2008},
isbn = {9781595937995},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1352135.1352247},
doi = {10.1145/1352135.1352247},
abstract = {Cryptography has become an important topic in undergraduate curricula in mathematics and computer science, not just for its intrinsic interest---``about the most fun you can have with mathematics''cite{ferg04, but for its current standing as the basis for almost all computer security. From wireless networking to secure email to password protection, cryptographic methods are used to secure information, to protect users, and to protect data.At Victoria University, cryptography has been taught as part of a mathematics and computer science degree for several years. The students all have had at least a year of tertiary mathematics, and some exposure to a computer algebra system (Maple). However, the cost of Maple, and the current licensing agreement, means that students are unable to experiment with the software away from the computer laboratories at the University. For this reason we have decided to investigate the use of open-source computer algebra systems Maxima and Axiom. Although not as full-featured and powerful as the commercial systems Maple and Mathematica, we show they are in fact admirably suited for a subject such as cryptography. In some ways Maxima and Axiom even surpass Maple and Mathematica. Student response to the introduction of these systems has been very positive.},
booktitle = {Proceedings of the 39th SIGCSE Technical Symposium on Computer Science Education},
pages = {325–329},
numpages = {5},
keywords = {open-source software, exploratory learning, discrete mathematics, cryptography, computer science education},
location = {Portland, OR, USA},
series = {SIGCSE '08}
}

@inproceedings{10.1145/1268784.1268937,
author = {Goldwasser, Michael H. and Letscher, David},
title = {Teaching object-oriented programming in python},
year = {2007},
isbn = {9781595936103},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1268784.1268937},
doi = {10.1145/1268784.1268937},
abstract = {Python's use in education has grown rapidly, due to its elegantly simple syntax. Though often viewed as a "scripting language," Python is a fully object-oriented language with an extremely consistent object model and a rich set of built-in classes.In this tutorial, we share our experiences using Python in the context of an object-oriented CS1 course. We will begin with an overview of the language, with particular emphasis on the object-orientation. We then present several coherent teaching strategies and a variety of graphical and non-graphical projects. Both new and experienced Python users are welcome.},
booktitle = {Proceedings of the 12th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {365–366},
numpages = {2},
keywords = {CS1, object-orientation, python},
location = {<conf-loc>, <city>Dundee</city>, <country>Scotland</country>, </conf-loc>},
series = {ITiCSE '07}
}

@inproceedings{10.1145/1040830.1040892,
author = {Yoo, Jungsoon and Li, Cen and Pettey, Chrisila},
title = {Adaptive teaching strategy for online learning},
year = {2005},
isbn = {1581138946},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1040830.1040892},
doi = {10.1145/1040830.1040892},
abstract = {Finding the optimal teaching strategy for an individual student is difficult even for an experienced teacher. Identifying and incorporating multiple optimal teaching strategies for different students in a class is even harder. This paper presents an Adaptive tutor for online Learning, AtoL, for Computer Science laboratories that identifies and applies the appropriate teaching strategies for students on an individual basis. The optimal strategy for a student is identified in two steps. First, a basic strategy for a student is identified using rules learned from a supervised learning system. Then the basic strategy is refined to better fit the student using models learned using an unsupervised learning system that takes into account the temporal nature of the problem solving process. The learning algorithms as well as the initial experimental results are presented.},
booktitle = {Proceedings of the 10th International Conference on Intelligent User Interfaces},
pages = {266–268},
numpages = {3},
keywords = {user modeling, personalization, intelligent tutoring system, adaptive user interface},
location = {San Diego, California, USA},
series = {IUI '05}
}

@article{10.5555/1040231.1040240,
author = {Adams, D. Robert},
title = {Teaching web application development using Zope},
year = {2004},
issue_date = {October 2004},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {20},
number = {1},
issn = {1937-4771},
abstract = {Over the last two years we have been teaching web application development using Zope, an open-source, object-oriented content management system that has some advantages over other systems like CGI and Java servlets. The purpose of this paper is two-fold: (1) to introduce Zope to the CS Education community, and (2) to argue for using Zope in teaching web application development.},
journal = {J. Comput. Sci. Coll.},
month = {oct},
pages = {63–70},
numpages = {8},
keywords = {zope, web applications, markup}
}

@inproceedings{10.1145/330908.331806,
author = {Merzbacher, Matthew},
title = {Teaching database management systems with Java},
year = {2000},
isbn = {1581132131},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/330908.331806},
doi = {10.1145/330908.331806},
abstract = {We present a multi-phase programming project, in Java, for an upper-division database course. The project parallels a modest reordering of the traditional classroom presentation of database management. In addition to illuminating theoretical concepts, the lab provides a capstone experience for an undergraduate computer science degree.},
booktitle = {Proceedings of the Thirty-First SIGCSE Technical Symposium on Computer Science Education},
pages = {31–35},
numpages = {5},
location = {Austin, Texas, USA},
series = {SIGCSE '00}
}

@article{10.1145/571535.571578,
author = {\r{A}gren, Ola},
title = {Teaching computer concepts using virtual machines},
year = {1999},
issue_date = {June 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {2},
issn = {0097-8418},
url = {https://doi.org/10.1145/571535.571578},
doi = {10.1145/571535.571578},
abstract = {A set of virtual assemblers and a virtual machine are used as a teaching tool in order to teach students differences and similarities between architectural styles of computer processors. Programs written by the students in the virtual assemblers are compiled using the corresponding virtual assembler. They are then executed on the virtual machine so that students can follow the execution of the programs step by step or at full speed.},
journal = {SIGCSE Bull.},
month = {jun},
pages = {84–85},
numpages = {2}
}

@inproceedings{10.1145/288335.288459,
author = {Cordani, John R. and Tucker, Robert J.},
title = {Tools for higher education distance teaching},
year = {1998},
isbn = {1581130066},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/288335.288459},
doi = {10.1145/288335.288459},
booktitle = {Proceedings of the 26th Annual ACM SIGUCCS Conference on User Services},
pages = {71–76},
numpages = {6},
location = {Bloomington, Indiana, USA},
series = {SIGUCCS '98}
}

@inproceedings{10.1145/273133.273170,
author = {Zhao, Yuan and Lowther, John and Shene, Ching-Kuang},
title = {A tool for teaching curve design},
year = {1998},
isbn = {0897919947},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/273133.273170},
doi = {10.1145/273133.273170},
abstract = {This paper describes a tool for teaching curve design. This tool is a component of the software tools to be used in a computing with geometry course [3, 4] that is being developed under the support of National Science Foundation. Curve design is important in computer graphics, animation, and computer aided design. Unfortunately, curve design requires very involved mathematics even though many curve design concepts are intuitive. As a result, it has been a challenging job for instructors teaching curves and surfaces in computer graphics, computer aided design, and other related courses. During past years, there have not been very many efforts dedicated to curve design tool development. Yen [7] produced a well-received video program explaining important concepts of B-spline curves and surfaces and Rockwood and Chambers [6] published a multimedia tutorial on computer aided geometric design. The former only provides a one-way communication, while the latter restricts users to a predefined environment with very limited interaction for users to carry out experiments. To fill this gap, our tool provides students with a fully interactive environment in which they are free to design, modify, and manipulate curved objects and perform experiments without constraints.In the following, Section 2 presents design issues, Section 3 discusses general features, Section 4 enumerates basic elements, Section 5 covers advanced topics, and Section 6 is our conclusion. Interested readers should consult [1, 2, 5] for mathematical background details.},
booktitle = {Proceedings of the Twenty-Ninth SIGCSE Technical Symposium on Computer Science Education},
pages = {97–101},
numpages = {5},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '98}
}

@inproceedings{10.1145/346852.346956,
author = {Eckstein, Jutta and Wiener, Richard S.},
title = {A paradigm shift in teaching OOT},
year = {1998},
isbn = {1581132867},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/346852.346956},
doi = {10.1145/346852.346956},
booktitle = {Addendum to the 1998 Proceedings of the Conference on Object-Oriented Programming, Systems, Languages, and Applications (Addendum)},
pages = {0.23–A23},
location = {Vancouver, British Columbia, Canada},
series = {OOPSLA '98 Addendum}
}

@article{10.1145/381841.381844,
author = {Gibbon, C. and Higgins, C.},
title = {Teaching object-oriented design with heuristics},
year = {1996},
issue_date = {July 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {7},
issn = {0362-1340},
url = {https://doi.org/10.1145/381841.381844},
doi = {10.1145/381841.381844},
abstract = {The transition from "programmer" to "class designer" is difficult. Pedagogic challenges involve imparting an indepth knowledge of the object-oriented (OO) paradigm; gaining a firm understanding of the software engineering principles at play and knowing when and where to apply them effectively.},
journal = {SIGPLAN Not.},
month = {jul},
pages = {12–16},
numpages = {5}
}

